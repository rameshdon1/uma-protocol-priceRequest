{
	"id": "f1d5c74ace69b8dced5b34b906dd2c40",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.14;\n\nimport \"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol\";\n\n// *************************************\n// *   Minimum Viable OO Intergration  *\n// *************************************\n\n// This contract shows how to get up and running as quickly as posible with UMA's Optimistic Oracle.\n// We make a simple price request to the OO and return it to the user.\n\ncontract OO_GettingStarted {\n    \n    // Create an Optimistic oracle instance at the deployed address on Görli.\n    OptimisticOracleV2Interface oo = OptimisticOracleV2Interface(0x60E6140330F8FE31e785190F39C1B5e5e833c2a9);\n\n    // Use the yes no idetifier to ask arbitary questions, such as the weather on a particular day.\n    bytes32 identifier = bytes32(\"YES_OR_NO_QUERY\");\n\n    // Post the question in ancillary data. Note that this is a simplified form of ancillry data to work as an example. A real\n    // world prodition market would use something slightly more complex and would need to conform to a more robust structure.\n    bytes public ancillaryData =\n        bytes(\"Q:Will it rain today? A:1 for yes. 0 for no.\");\n\n    uint256 requestTime = 0; // Store the request time so we can re-use it later.\n\n    // Submit a data request to the Optimistic oracle.\n    function requestData() public {\n        requestTime = block.timestamp; // Set the request time to the current block time.\n        IERC20 bondCurrency = IERC20(0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747); // Use Görli WETH as the bond currency.\n        uint256 reward = 0; // Set the reward to 0 (so we dont have to fund it from this contract).\n\n        // Now, make the price request to the Optimistic oracle and set the liveness to 30 so it will settle quickly.\n        oo.requestPrice(identifier, requestTime, ancillaryData, bondCurrency, reward);\n        oo.setCustomLiveness(identifier, requestTime, ancillaryData, 30);\n    }\n\n    // Settle the request once it's gone through the liveness period of 30 seconds. This acts the finalize the voted on price.\n    // In a real world use of the Optimistic Oracle this should be longer to give time to disputers to catch bat price proposals.\n    function settleRequest() public {\n        oo.settle(address(this), identifier, requestTime, ancillaryData);\n    }\n\n    // Fetch the resolved price from the Optimistic Oracle that was settled.\n    function getSettledData() public view returns (int256) {\n        return oo.getRequest(address(this), identifier, requestTime, ancillaryData).resolvedPrice;\n    }\n}\n"
			},
			"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../../data-verification-mechanism/interfaces/FinderInterface.sol\";\n\n/**\n * @title Financial contract facing Oracle interface.\n * @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\n */\nabstract contract OptimisticOracleV2Interface {\n    event RequestPrice(\n        address indexed requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        address currency,\n        uint256 reward,\n        uint256 finalFee\n    );\n    event ProposePrice(\n        address indexed requester,\n        address indexed proposer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 proposedPrice,\n        uint256 expirationTimestamp,\n        address currency\n    );\n    event DisputePrice(\n        address indexed requester,\n        address indexed proposer,\n        address indexed disputer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 proposedPrice\n    );\n    event Settle(\n        address indexed requester,\n        address indexed proposer,\n        address indexed disputer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 price,\n        uint256 payout\n    );\n    // Struct representing the state of a price request.\n    enum State {\n        Invalid, // Never requested.\n        Requested, // Requested, no other actions taken.\n        Proposed, // Proposed, but not expired or disputed yet.\n        Expired, // Proposed, not disputed, past liveness.\n        Disputed, // Disputed, but no DVM price returned yet.\n        Resolved, // Disputed and DVM price is available.\n        Settled // Final price has been set in the contract (can get here from Expired or Resolved).\n    }\n\n    struct RequestSettings {\n        bool eventBased; // True if the request is set to be event-based.\n        bool refundOnDispute; // True if the requester should be refunded their reward on dispute.\n        bool callbackOnPriceProposed; // True if callbackOnPriceProposed callback is required.\n        bool callbackOnPriceDisputed; // True if callbackOnPriceDisputed callback is required.\n        bool callbackOnPriceSettled; // True if callbackOnPriceSettled callback is required.\n        uint256 bond; // Bond that the proposer and disputer must pay on top of the final fee.\n        uint256 customLiveness; // Custom liveness value set by the requester.\n    }\n\n    // Struct representing a price request.\n    struct Request {\n        address proposer; // Address of the proposer.\n        address disputer; // Address of the disputer.\n        IERC20 currency; // ERC20 token used to pay rewards and fees.\n        bool settled; // True if the request is settled.\n        RequestSettings requestSettings; // Custom settings associated with a request.\n        int256 proposedPrice; // Price that the proposer submitted.\n        int256 resolvedPrice; // Price resolved once the request is settled.\n        uint256 expirationTime; // Time at which the request auto-settles without a dispute.\n        uint256 reward; // Amount of the currency to pay to the proposer on settlement.\n        uint256 finalFee; // Final fee to pay to the Store upon request to the DVM.\n    }\n\n    // This value must be <= the Voting contract's `ancillaryBytesLimit` value otherwise it is possible\n    // that a price can be requested to this contract successfully, but cannot be disputed because the DVM refuses\n    // to accept a price request made with ancillary data length over a certain size.\n    uint256 public constant ancillaryBytesLimit = 8192;\n\n    function defaultLiveness() external view virtual returns (uint256);\n\n    function finder() external view virtual returns (FinderInterface);\n\n    function getCurrentTime() external view virtual returns (uint256);\n\n    // Note: this is required so that typechain generates a return value with named fields.\n    mapping(bytes32 => Request) public requests;\n\n    /**\n     * @notice Requests a new price.\n     * @param identifier price identifier being requested.\n     * @param timestamp timestamp of the price being requested.\n     * @param ancillaryData ancillary data representing additional args being passed with the price request.\n     * @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n     * @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n     *               which could make sense if the contract requests and proposes the value in the same call or\n     *               provides its own reward system.\n     * @return totalBond default bond (final fee) + final fee that the proposer and disputer will be required to pay.\n     * This can be changed with a subsequent call to setBond().\n     */\n    function requestPrice(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        IERC20 currency,\n        uint256 reward\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Set the proposal bond associated with a price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param bond custom bond amount to set.\n     * @return totalBond new bond + final fee that the proposer and disputer will be required to pay. This can be\n     * changed again with a subsequent call to setBond().\n     */\n    function setBond(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        uint256 bond\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Sets the request to refund the reward if the proposal is disputed. This can help to \"hedge\" the caller\n     * in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's\n     * bond, so there is still profit to be made even if the reward is refunded.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     */\n    function setRefundOnDispute(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual;\n\n    /**\n     * @notice Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before\n     * being auto-resolved.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param customLiveness new custom liveness.\n     */\n    function setCustomLiveness(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        uint256 customLiveness\n    ) external virtual;\n\n    /**\n     * @notice Sets the request to be an \"event-based\" request.\n     * @dev Calling this method has a few impacts on the request:\n     *\n     * 1. The timestamp at which the request is evaluated is the time of the proposal, not the timestamp associated\n     *    with the request.\n     *\n     * 2. The proposer cannot propose the \"too early\" value (TOO_EARLY_RESPONSE). This is to ensure that a proposer who\n     *    prematurely proposes a response loses their bond.\n     *\n     * 3. RefundoOnDispute is automatically set, meaning disputes trigger the reward to be automatically refunded to\n     *    the requesting contract.\n     *\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     */\n    function setEventBased(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual;\n\n    /**\n     * @notice Sets which callbacks should be enabled for the request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param callbackOnPriceProposed whether to enable the callback onPriceProposed.\n     * @param callbackOnPriceDisputed whether to enable the callback onPriceDisputed.\n     * @param callbackOnPriceSettled whether to enable the callback onPriceSettled.\n     */\n    function setCallbacks(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        bool callbackOnPriceProposed,\n        bool callbackOnPriceDisputed,\n        bool callbackOnPriceSettled\n    ) external virtual;\n\n    /**\n     * @notice Proposes a price value on another address' behalf. Note: this address will receive any rewards that come\n     * from this proposal. However, any bonds are pulled from the caller.\n     * @param proposer address to set as the proposer.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param proposedPrice price being proposed.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the proposer once settled if the proposal is correct.\n     */\n    function proposePriceFor(\n        address proposer,\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        int256 proposedPrice\n    ) public virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Proposes a price value for an existing price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param proposedPrice price being proposed.\n     * @return totalBond the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to\n     * the proposer once settled if the proposal is correct.\n     */\n    function proposePrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        int256 proposedPrice\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Disputes a price request with an active proposal on another address' behalf. Note: this address will\n     * receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\n     * @param disputer address to set as the disputer.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the disputer once settled if the dispute was value (the proposal was incorrect).\n     */\n    function disputePriceFor(\n        address disputer,\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Disputes a price value for an existing price request with an active proposal.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return totalBond the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to\n     * the disputer once settled if the dispute was valid (the proposal was incorrect).\n     */\n    function disputePrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Retrieves a price that was previously requested by a caller. Reverts if the request is not settled\n     * or settleable. Note: this method is not view so that this call may actually settle the price request if it\n     * hasn't been settled.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return resolved price.\n     */\n    function settleAndGetPrice(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (int256);\n\n    /**\n     * @notice Attempts to settle an outstanding price request. Will revert if it isn't settleable.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return payout the amount that the \"winner\" (proposer or disputer) receives on settlement. This amount includes\n     * the returned bonds as well as additional rewards.\n     */\n    function settle(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (uint256 payout);\n\n    /**\n     * @notice Gets the current data structure containing all information about a price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return the Request data structure.\n     */\n    function getRequest(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (Request memory);\n\n    /**\n     * @notice Returns the state of a price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return the State enum value.\n     */\n    function getState(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (State);\n\n    /**\n     * @notice Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return true if price has resolved or settled, false otherwise.\n     */\n    function hasPrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (bool);\n\n    function stampAncillaryData(bytes memory ancillaryData, address requester)\n        public\n        view\n        virtual\n        returns (bytes memory);\n}\n"
			},
			"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n/**\n * @title Provides addresses of the live contracts implementing certain interfaces.\n * @dev Examples are the Oracle or Store interfaces.\n */\ninterface FinderInterface {\n    /**\n     * @notice Updates the address of the contract that implements `interfaceName`.\n     * @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\n     * @param implementationAddress address of the deployed contract that implements the interface.\n     */\n    function changeImplementationAddress(bytes32 interfaceName, address implementationAddress) external;\n\n    /**\n     * @notice Gets the address of the contract that implements the given `interfaceName`.\n     * @param interfaceName queried interface.\n     * @return implementationAddress address of the deployed contract that implements the interface.\n     */\n    function getImplementationAddress(bytes32 interfaceName) external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol": {
				"OO_GettingStarted": {
					"abi": [
						{
							"inputs": [],
							"name": "ancillaryData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSettledData",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "settleRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":516:2638  contract OO_GettingStarted {... */\n  mstore(0x40, 0x80)\n    /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":694:736  0x60E6140330F8FE31e785190F39C1B5e5e833c2a9 */\n  0x60e6140330f8fe31e785190f39c1b5e5e833c2a9\n    /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":633:737  OptimisticOracleV2Interface oo = OptimisticOracleV2Interface(0x60E6140330F8FE31e785190F39C1B5e5e833c2a9) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":865:891  bytes32(\"YES_OR_NO_QUERY\") */\n  0x5945535f4f525f4e4f5f51554552590000000000000000000000000000000000\n    /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":844:891  bytes32 identifier = bytes32(\"YES_OR_NO_QUERY\") */\n  0x01\n  sstore\n    /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1188:1241  bytes(\"Q:Will it rain today? A:1 for yes. 0 for no.\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2c\n  dup2\n  mstore\n  0x20\n  add\n  data_5ab016cd407eeb7eb6c98d673defa07faf609e036677b3fd39539ccda5e8e8fe\n  0x2c\n  swap2\n  codecopy\n    /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1151:1241  bytes public ancillaryData =... */\n  0x02\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1270:1271  0 */\n  0x00\n    /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1248:1271  uint256 requestTime = 0 */\n  0x03\n  sstore\n    /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":516:2638  contract OO_GettingStarted {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  jump(tag_4)\n    /* \"#utility.yul\":7:105   */\ntag_5:\n    /* \"#utility.yul\":58:64   */\n  0x00\n    /* \"#utility.yul\":92:97   */\n  dup2\n    /* \"#utility.yul\":86:98   */\n  mload\n    /* \"#utility.yul\":76:98   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:105   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":111:291   */\ntag_6:\n    /* \"#utility.yul\":159:236   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":156:157   */\n  0x00\n    /* \"#utility.yul\":149:237   */\n  mstore\n    /* \"#utility.yul\":256:260   */\n  0x41\n    /* \"#utility.yul\":253:254   */\n  0x04\n    /* \"#utility.yul\":246:261   */\n  mstore\n    /* \"#utility.yul\":280:284   */\n  0x24\n    /* \"#utility.yul\":277:278   */\n  0x00\n    /* \"#utility.yul\":270:285   */\n  revert\n    /* \"#utility.yul\":297:477   */\ntag_7:\n    /* \"#utility.yul\":345:422   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":342:343   */\n  0x00\n    /* \"#utility.yul\":335:423   */\n  mstore\n    /* \"#utility.yul\":442:446   */\n  0x22\n    /* \"#utility.yul\":439:440   */\n  0x04\n    /* \"#utility.yul\":432:447   */\n  mstore\n    /* \"#utility.yul\":466:470   */\n  0x24\n    /* \"#utility.yul\":463:464   */\n  0x00\n    /* \"#utility.yul\":456:471   */\n  revert\n    /* \"#utility.yul\":483:803   */\ntag_8:\n    /* \"#utility.yul\":527:533   */\n  0x00\n    /* \"#utility.yul\":564:565   */\n  0x02\n    /* \"#utility.yul\":558:562   */\n  dup3\n    /* \"#utility.yul\":554:566   */\n  div\n    /* \"#utility.yul\":544:566   */\n  swap1\n  pop\n    /* \"#utility.yul\":611:612   */\n  0x01\n    /* \"#utility.yul\":605:609   */\n  dup3\n    /* \"#utility.yul\":601:613   */\n  and\n    /* \"#utility.yul\":632:650   */\n  dup1\n    /* \"#utility.yul\":622:703   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":688:692   */\n  0x7f\n    /* \"#utility.yul\":680:686   */\n  dup3\n    /* \"#utility.yul\":676:693   */\n  and\n    /* \"#utility.yul\":666:693   */\n  swap2\n  pop\n    /* \"#utility.yul\":622:703   */\ntag_30:\n    /* \"#utility.yul\":750:752   */\n  0x20\n    /* \"#utility.yul\":742:748   */\n  dup3\n    /* \"#utility.yul\":739:753   */\n  lt\n    /* \"#utility.yul\":719:737   */\n  dup2\n    /* \"#utility.yul\":716:754   */\n  sub\n    /* \"#utility.yul\":713:797   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":769:787   */\n  tag_32\n  tag_7\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":713:797   */\ntag_31:\n    /* \"#utility.yul\":534:803   */\n  pop\n    /* \"#utility.yul\":483:803   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:949   */\ntag_9:\n    /* \"#utility.yul\":857:861   */\n  0x00\n    /* \"#utility.yul\":880:883   */\n  dup2\n    /* \"#utility.yul\":872:883   */\n  swap1\n  pop\n    /* \"#utility.yul\":903:906   */\n  dup2\n    /* \"#utility.yul\":900:901   */\n  0x00\n    /* \"#utility.yul\":893:907   */\n  mstore\n    /* \"#utility.yul\":937:941   */\n  0x20\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":924:942   */\n  keccak256\n    /* \"#utility.yul\":916:942   */\n  swap1\n  pop\n    /* \"#utility.yul\":809:949   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":955:1048   */\ntag_10:\n    /* \"#utility.yul\":992:998   */\n  0x00\n    /* \"#utility.yul\":1039:1041   */\n  0x20\n    /* \"#utility.yul\":1034:1036   */\n  0x1f\n    /* \"#utility.yul\":1027:1032   */\n  dup4\n    /* \"#utility.yul\":1023:1037   */\n  add\n    /* \"#utility.yul\":1019:1042   */\n  div\n    /* \"#utility.yul\":1009:1042   */\n  swap1\n  pop\n    /* \"#utility.yul\":955:1048   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1054:1161   */\ntag_11:\n    /* \"#utility.yul\":1098:1106   */\n  0x00\n    /* \"#utility.yul\":1148:1153   */\n  dup3\n    /* \"#utility.yul\":1142:1146   */\n  dup3\n    /* \"#utility.yul\":1138:1154   */\n  shl\n    /* \"#utility.yul\":1117:1154   */\n  swap1\n  pop\n    /* \"#utility.yul\":1054:1161   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1167:1560   */\ntag_12:\n    /* \"#utility.yul\":1236:1242   */\n  0x00\n    /* \"#utility.yul\":1286:1287   */\n  0x08\n    /* \"#utility.yul\":1274:1284   */\n  dup4\n    /* \"#utility.yul\":1270:1288   */\n  mul\n    /* \"#utility.yul\":1309:1406   */\n  tag_37\n    /* \"#utility.yul\":1339:1405   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1328:1337   */\n  dup3\n    /* \"#utility.yul\":1309:1406   */\n  tag_11\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1427:1466   */\n  tag_38\n    /* \"#utility.yul\":1457:1465   */\n  dup7\n    /* \"#utility.yul\":1446:1455   */\n  dup4\n    /* \"#utility.yul\":1427:1466   */\n  tag_11\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1415:1466   */\n  swap6\n  pop\n    /* \"#utility.yul\":1499:1503   */\n  dup1\n    /* \"#utility.yul\":1495:1504   */\n  not\n    /* \"#utility.yul\":1488:1493   */\n  dup5\n    /* \"#utility.yul\":1484:1505   */\n  and\n    /* \"#utility.yul\":1475:1505   */\n  swap4\n  pop\n    /* \"#utility.yul\":1548:1552   */\n  dup1\n    /* \"#utility.yul\":1538:1546   */\n  dup7\n    /* \"#utility.yul\":1534:1553   */\n  and\n    /* \"#utility.yul\":1527:1532   */\n  dup5\n    /* \"#utility.yul\":1524:1554   */\n  or\n    /* \"#utility.yul\":1514:1554   */\n  swap3\n  pop\n    /* \"#utility.yul\":1243:1560   */\n  pop\n  pop\n    /* \"#utility.yul\":1167:1560   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1566:1643   */\ntag_13:\n    /* \"#utility.yul\":1603:1610   */\n  0x00\n    /* \"#utility.yul\":1632:1637   */\n  dup2\n    /* \"#utility.yul\":1621:1637   */\n  swap1\n  pop\n    /* \"#utility.yul\":1566:1643   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1649:1709   */\ntag_14:\n    /* \"#utility.yul\":1677:1680   */\n  0x00\n    /* \"#utility.yul\":1698:1703   */\n  dup2\n    /* \"#utility.yul\":1691:1703   */\n  swap1\n  pop\n    /* \"#utility.yul\":1649:1709   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1715:1857   */\ntag_15:\n    /* \"#utility.yul\":1765:1774   */\n  0x00\n    /* \"#utility.yul\":1798:1851   */\n  tag_42\n    /* \"#utility.yul\":1816:1850   */\n  tag_43\n    /* \"#utility.yul\":1825:1849   */\n  tag_44\n    /* \"#utility.yul\":1843:1848   */\n  dup5\n    /* \"#utility.yul\":1825:1849   */\n  tag_13\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1816:1850   */\n  tag_14\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1798:1851   */\n  tag_13\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1785:1851   */\n  swap1\n  pop\n    /* \"#utility.yul\":1715:1857   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1863:1938   */\ntag_16:\n    /* \"#utility.yul\":1906:1909   */\n  0x00\n    /* \"#utility.yul\":1927:1932   */\n  dup2\n    /* \"#utility.yul\":1920:1932   */\n  swap1\n  pop\n    /* \"#utility.yul\":1863:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1944:2213   */\ntag_17:\n    /* \"#utility.yul\":2054:2093   */\n  tag_47\n    /* \"#utility.yul\":2085:2092   */\n  dup4\n    /* \"#utility.yul\":2054:2093   */\n  tag_15\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2115:2206   */\n  tag_48\n    /* \"#utility.yul\":2164:2205   */\n  tag_49\n    /* \"#utility.yul\":2188:2204   */\n  dup3\n    /* \"#utility.yul\":2164:2205   */\n  tag_16\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":2156:2162   */\n  dup5\n    /* \"#utility.yul\":2149:2153   */\n  dup5\n    /* \"#utility.yul\":2143:2154   */\n  sload\n    /* \"#utility.yul\":2115:2206   */\n  tag_12\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2109:2113   */\n  dup3\n    /* \"#utility.yul\":2102:2207   */\n  sstore\n    /* \"#utility.yul\":2020:2213   */\n  pop\n    /* \"#utility.yul\":1944:2213   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2219:2292   */\ntag_18:\n    /* \"#utility.yul\":2264:2267   */\n  0x00\n    /* \"#utility.yul\":2219:2292   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2298:2487   */\ntag_19:\n    /* \"#utility.yul\":2375:2407   */\n  tag_52\n  tag_18\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2416:2481   */\n  tag_53\n    /* \"#utility.yul\":2474:2480   */\n  dup2\n    /* \"#utility.yul\":2466:2472   */\n  dup5\n    /* \"#utility.yul\":2460:2464   */\n  dup5\n    /* \"#utility.yul\":2416:2481   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2351:2487   */\n  pop\n    /* \"#utility.yul\":2298:2487   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2493:2679   */\ntag_20:\n    /* \"#utility.yul\":2553:2673   */\ntag_55:\n    /* \"#utility.yul\":2570:2573   */\n  dup2\n    /* \"#utility.yul\":2563:2568   */\n  dup2\n    /* \"#utility.yul\":2560:2574   */\n  lt\n    /* \"#utility.yul\":2553:2673   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2624:2663   */\n  tag_58\n    /* \"#utility.yul\":2661:2662   */\n  0x00\n    /* \"#utility.yul\":2654:2659   */\n  dup3\n    /* \"#utility.yul\":2624:2663   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2597:2598   */\n  0x01\n    /* \"#utility.yul\":2590:2595   */\n  dup2\n    /* \"#utility.yul\":2586:2599   */\n  add\n    /* \"#utility.yul\":2577:2599   */\n  swap1\n  pop\n    /* \"#utility.yul\":2553:2673   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":2493:2679   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2685:3226   */\ntag_21:\n    /* \"#utility.yul\":2785:2787   */\n  0x1f\n    /* \"#utility.yul\":2780:2783   */\n  dup3\n    /* \"#utility.yul\":2777:2788   */\n  gt\n    /* \"#utility.yul\":2774:3219   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2819:2856   */\n  tag_61\n    /* \"#utility.yul\":2850:2855   */\n  dup2\n    /* \"#utility.yul\":2819:2856   */\n  tag_9\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2902:2931   */\n  tag_62\n    /* \"#utility.yul\":2920:2930   */\n  dup5\n    /* \"#utility.yul\":2902:2931   */\n  tag_10\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2892:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2932   */\n  add\n    /* \"#utility.yul\":3085:3087   */\n  0x20\n    /* \"#utility.yul\":3073:3083   */\n  dup6\n    /* \"#utility.yul\":3070:3088   */\n  lt\n    /* \"#utility.yul\":3067:3116   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":3106:3114   */\n  dup2\n    /* \"#utility.yul\":3091:3114   */\n  swap1\n  pop\n    /* \"#utility.yul\":3067:3116   */\ntag_63:\n    /* \"#utility.yul\":3129:3209   */\n  tag_64\n    /* \"#utility.yul\":3185:3207   */\n  tag_65\n    /* \"#utility.yul\":3203:3206   */\n  dup6\n    /* \"#utility.yul\":3185:3207   */\n  tag_10\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":3175:3183   */\n  dup4\n    /* \"#utility.yul\":3171:3208   */\n  add\n    /* \"#utility.yul\":3158:3169   */\n  dup3\n    /* \"#utility.yul\":3129:3209   */\n  tag_20\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2789:3219   */\n  pop\n  pop\n    /* \"#utility.yul\":2774:3219   */\ntag_60:\n    /* \"#utility.yul\":2685:3226   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3232:3349   */\ntag_22:\n    /* \"#utility.yul\":3286:3294   */\n  0x00\n    /* \"#utility.yul\":3336:3341   */\n  dup3\n    /* \"#utility.yul\":3330:3334   */\n  dup3\n    /* \"#utility.yul\":3326:3342   */\n  shr\n    /* \"#utility.yul\":3305:3342   */\n  swap1\n  pop\n    /* \"#utility.yul\":3232:3349   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3355:3524   */\ntag_23:\n    /* \"#utility.yul\":3399:3405   */\n  0x00\n    /* \"#utility.yul\":3432:3483   */\n  tag_68\n    /* \"#utility.yul\":3480:3481   */\n  0x00\n    /* \"#utility.yul\":3476:3482   */\n  not\n    /* \"#utility.yul\":3468:3473   */\n  dup5\n    /* \"#utility.yul\":3465:3466   */\n  0x08\n    /* \"#utility.yul\":3461:3474   */\n  mul\n    /* \"#utility.yul\":3432:3483   */\n  tag_22\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3428:3484   */\n  not\n    /* \"#utility.yul\":3513:3517   */\n  dup1\n    /* \"#utility.yul\":3507:3511   */\n  dup4\n    /* \"#utility.yul\":3503:3518   */\n  and\n    /* \"#utility.yul\":3493:3518   */\n  swap2\n  pop\n    /* \"#utility.yul\":3406:3524   */\n  pop\n    /* \"#utility.yul\":3355:3524   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3529:3824   */\ntag_24:\n    /* \"#utility.yul\":3605:3609   */\n  0x00\n    /* \"#utility.yul\":3751:3780   */\n  tag_70\n    /* \"#utility.yul\":3776:3779   */\n  dup4\n    /* \"#utility.yul\":3770:3774   */\n  dup4\n    /* \"#utility.yul\":3751:3780   */\n  tag_23\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3743:3780   */\n  swap2\n  pop\n    /* \"#utility.yul\":3813:3816   */\n  dup3\n    /* \"#utility.yul\":3810:3811   */\n  0x02\n    /* \"#utility.yul\":3806:3817   */\n  mul\n    /* \"#utility.yul\":3800:3804   */\n  dup3\n    /* \"#utility.yul\":3797:3818   */\n  or\n    /* \"#utility.yul\":3789:3818   */\n  swap1\n  pop\n    /* \"#utility.yul\":3529:3824   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3829:5219   */\ntag_2:\n    /* \"#utility.yul\":3944:3980   */\n  tag_72\n    /* \"#utility.yul\":3976:3979   */\n  dup3\n    /* \"#utility.yul\":3944:3980   */\n  tag_5\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":4045:4063   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4037:4043   */\n  dup2\n    /* \"#utility.yul\":4034:4064   */\n  gt\n    /* \"#utility.yul\":4031:4087   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":4067:4085   */\n  tag_74\n  tag_6\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":4031:4087   */\ntag_73:\n    /* \"#utility.yul\":4111:4149   */\n  tag_75\n    /* \"#utility.yul\":4143:4147   */\n  dup3\n    /* \"#utility.yul\":4137:4148   */\n  sload\n    /* \"#utility.yul\":4111:4149   */\n  tag_8\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4196:4262   */\n  tag_76\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4247:4253   */\n  dup3\n    /* \"#utility.yul\":4241:4245   */\n  dup6\n    /* \"#utility.yul\":4196:4262   */\n  tag_21\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":4289:4290   */\n  0x00\n    /* \"#utility.yul\":4313:4317   */\n  0x20\n    /* \"#utility.yul\":4300:4317   */\n  swap1\n  pop\n    /* \"#utility.yul\":4345:4347   */\n  0x1f\n    /* \"#utility.yul\":4337:4343   */\n  dup4\n    /* \"#utility.yul\":4334:4348   */\n  gt\n    /* \"#utility.yul\":4362:4363   */\n  0x01\n    /* \"#utility.yul\":4357:4974   */\n  dup2\n  eq\n  tag_78\n  jumpi\n    /* \"#utility.yul\":5018:5019   */\n  0x00\n    /* \"#utility.yul\":5035:5041   */\n  dup5\n    /* \"#utility.yul\":5032:5109   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":5084:5093   */\n  dup3\n    /* \"#utility.yul\":5079:5082   */\n  dup8\n    /* \"#utility.yul\":5075:5094   */\n  add\n    /* \"#utility.yul\":5069:5095   */\n  mload\n    /* \"#utility.yul\":5060:5095   */\n  swap1\n  pop\n    /* \"#utility.yul\":5032:5109   */\ntag_79:\n    /* \"#utility.yul\":5135:5202   */\n  tag_80\n    /* \"#utility.yul\":5195:5201   */\n  dup6\n    /* \"#utility.yul\":5188:5193   */\n  dup3\n    /* \"#utility.yul\":5135:5202   */\n  tag_24\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":5129:5133   */\n  dup7\n    /* \"#utility.yul\":5122:5203   */\n  sstore\n    /* \"#utility.yul\":4991:5213   */\n  pop\n    /* \"#utility.yul\":4327:5213   */\n  jump(tag_77)\n    /* \"#utility.yul\":4357:4974   */\ntag_78:\n    /* \"#utility.yul\":4409:4413   */\n  0x1f\n    /* \"#utility.yul\":4405:4414   */\n  not\n    /* \"#utility.yul\":4397:4403   */\n  dup5\n    /* \"#utility.yul\":4393:4415   */\n  and\n    /* \"#utility.yul\":4443:4479   */\n  tag_81\n    /* \"#utility.yul\":4474:4478   */\n  dup7\n    /* \"#utility.yul\":4443:4479   */\n  tag_9\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4501:4502   */\n  0x00\n    /* \"#utility.yul\":4515:4723   */\ntag_82:\n    /* \"#utility.yul\":4529:4536   */\n  dup3\n    /* \"#utility.yul\":4526:4527   */\n  dup2\n    /* \"#utility.yul\":4523:4537   */\n  lt\n    /* \"#utility.yul\":4515:4723   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":4608:4617   */\n  dup5\n    /* \"#utility.yul\":4603:4606   */\n  dup10\n    /* \"#utility.yul\":4599:4618   */\n  add\n    /* \"#utility.yul\":4593:4619   */\n  mload\n    /* \"#utility.yul\":4585:4591   */\n  dup3\n    /* \"#utility.yul\":4578:4620   */\n  sstore\n    /* \"#utility.yul\":4659:4660   */\n  0x01\n    /* \"#utility.yul\":4651:4657   */\n  dup3\n    /* \"#utility.yul\":4647:4661   */\n  add\n    /* \"#utility.yul\":4637:4661   */\n  swap2\n  pop\n    /* \"#utility.yul\":4706:4708   */\n  0x20\n    /* \"#utility.yul\":4695:4704   */\n  dup6\n    /* \"#utility.yul\":4691:4709   */\n  add\n    /* \"#utility.yul\":4678:4709   */\n  swap5\n  pop\n    /* \"#utility.yul\":4552:4556   */\n  0x20\n    /* \"#utility.yul\":4549:4550   */\n  dup2\n    /* \"#utility.yul\":4545:4557   */\n  add\n    /* \"#utility.yul\":4540:4557   */\n  swap1\n  pop\n    /* \"#utility.yul\":4515:4723   */\n  jump(tag_82)\ntag_84:\n    /* \"#utility.yul\":4751:4757   */\n  dup7\n    /* \"#utility.yul\":4742:4749   */\n  dup4\n    /* \"#utility.yul\":4739:4758   */\n  lt\n    /* \"#utility.yul\":4736:4915   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":4809:4818   */\n  dup5\n    /* \"#utility.yul\":4804:4807   */\n  dup10\n    /* \"#utility.yul\":4800:4819   */\n  add\n    /* \"#utility.yul\":4794:4820   */\n  mload\n    /* \"#utility.yul\":4852:4900   */\n  tag_86\n    /* \"#utility.yul\":4894:4898   */\n  0x1f\n    /* \"#utility.yul\":4886:4892   */\n  dup10\n    /* \"#utility.yul\":4882:4899   */\n  and\n    /* \"#utility.yul\":4871:4880   */\n  dup3\n    /* \"#utility.yul\":4852:4900   */\n  tag_23\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4844:4850   */\n  dup4\n    /* \"#utility.yul\":4837:4901   */\n  sstore\n    /* \"#utility.yul\":4759:4915   */\n  pop\n    /* \"#utility.yul\":4736:4915   */\ntag_85:\n    /* \"#utility.yul\":4961:4962   */\n  0x01\n    /* \"#utility.yul\":4957:4958   */\n  0x02\n    /* \"#utility.yul\":4949:4955   */\n  dup9\n    /* \"#utility.yul\":4945:4959   */\n  mul\n    /* \"#utility.yul\":4941:4963   */\n  add\n    /* \"#utility.yul\":4935:4939   */\n  dup9\n    /* \"#utility.yul\":4928:4964   */\n  sstore\n    /* \"#utility.yul\":4364:4974   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4327:5213   */\ntag_77:\n  pop\n    /* \"#utility.yul\":3919:5219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3829:5219   */\n  pop\n  pop\n  jump\t// out\n    /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":516:2638  contract OO_GettingStarted {... */\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_5ab016cd407eeb7eb6c98d673defa07faf609e036677b3fd39539ccda5e8e8fe 513a57696c6c206974207261696e20746f6461793f20413a3120666f72207965732e203020666f72206e6f2e\n\nsub_0: assembly {\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":516:2638  contract OO_GettingStarted {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x606deecd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x65599057\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf25ffb20\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfa776152\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1386:2016  function requestData() public {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1151:1241  bytes public ancillaryData =... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2475:2636  function getSettledData() public view returns (int256) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2279:2392  function settleRequest() public {... */\n    tag_6:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1386:2016  function requestData() public {... */\n    tag_8:\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1440:1455  block.timestamp */\n      timestamp\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1426:1437  requestTime */\n      0x03\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1426:1455  requestTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1516:1535  IERC20 bondCurrency */\n      0x00\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1545:1587  0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747 */\n      0xe6b8a5cf854791412c1f6efc7caf629f5df1c747\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1516:1588  IERC20 bondCurrency = IERC20(0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747) */\n      swap1\n      pop\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1639:1653  uint256 reward */\n      0x00\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1858:1860  oo */\n      dup1\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1858:1873  oo.requestPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x11df92f1\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1874:1884  identifier */\n      sload(0x01)\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1886:1897  requestTime */\n      sload(0x03)\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1899:1912  ancillaryData */\n      0x02\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1914:1926  bondCurrency */\n      dup7\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1928:1934  reward */\n      dup7\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1858:1935  oo.requestPrice(identifier, requestTime, ancillaryData, bondCurrency, reward) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      pop\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1945:1947  oo */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1945:1965  oo.setCustomLiveness */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x473c45fe\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1966:1976  identifier */\n      sload(0x01)\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1978:1989  requestTime */\n      sload(0x03)\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1991:2004  ancillaryData */\n      0x02\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2006:2008  30 */\n      0x1e\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1945:2009  oo.setCustomLiveness(identifier, requestTime, ancillaryData, 30) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1416:2016  {... */\n      pop\n      pop\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1386:2016  function requestData() public {... */\n      jump\t// out\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":1151:1241  bytes public ancillaryData =... */\n    tag_10:\n      0x02\n      dup1\n      sload\n      tag_31\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_33\n      swap1\n      tag_32\n      jump\t// in\n    tag_33:\n      dup1\n      iszero\n      tag_34\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_35\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_34)\n    tag_35:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_36:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_36\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2475:2636  function getSettledData() public view returns (int256) {... */\n    tag_14:\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2522:2528  int256 */\n      0x00\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2547:2549  oo */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2547:2560  oo.getRequest */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9904f9b\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2569:2573  this */\n      address\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2576:2586  identifier */\n      sload(0x01)\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2588:2599  requestTime */\n      sload(0x03)\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2601:2614  ancillaryData */\n      0x02\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2547:2615  oo.getRequest(address(this), identifier, requestTime, ancillaryData) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      0x0200\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2547:2629  oo.getRequest(address(this), identifier, requestTime, ancillaryData).resolvedPrice */\n      0xc0\n      add\n      mload\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2540:2629  return oo.getRequest(address(this), identifier, requestTime, ancillaryData).resolvedPrice */\n      swap1\n      pop\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2475:2636  function getSettledData() public view returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2279:2392  function settleRequest() public {... */\n    tag_18:\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2321:2323  oo */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2321:2330  oo.settle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5e9a79a9\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2339:2343  this */\n      address\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2346:2356  identifier */\n      sload(0x01)\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2358:2369  requestTime */\n      sload(0x03)\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2371:2384  ancillaryData */\n      0x02\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2321:2385  oo.settle(address(this), identifier, requestTime, ancillaryData) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_45:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_48:\n      pop\n        /* \"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":2279:2392  function settleRequest() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:105   */\n    tag_49:\n        /* \"#utility.yul\":58:64   */\n      0x00\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":86:98   */\n      mload\n        /* \"#utility.yul\":76:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":111:279   */\n    tag_50:\n        /* \"#utility.yul\":194:205   */\n      0x00\n        /* \"#utility.yul\":228:234   */\n      dup3\n        /* \"#utility.yul\":223:226   */\n      dup3\n        /* \"#utility.yul\":216:235   */\n      mstore\n        /* \"#utility.yul\":268:272   */\n      0x20\n        /* \"#utility.yul\":263:266   */\n      dup3\n        /* \"#utility.yul\":259:273   */\n      add\n        /* \"#utility.yul\":244:273   */\n      swap1\n      pop\n        /* \"#utility.yul\":111:279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":285:531   */\n    tag_51:\n        /* \"#utility.yul\":366:367   */\n      0x00\n        /* \"#utility.yul\":376:489   */\n    tag_100:\n        /* \"#utility.yul\":390:396   */\n      dup4\n        /* \"#utility.yul\":387:388   */\n      dup2\n        /* \"#utility.yul\":384:397   */\n      lt\n        /* \"#utility.yul\":376:489   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":475:476   */\n      dup1\n        /* \"#utility.yul\":470:473   */\n      dup3\n        /* \"#utility.yul\":466:477   */\n      add\n        /* \"#utility.yul\":460:478   */\n      mload\n        /* \"#utility.yul\":456:457   */\n      dup2\n        /* \"#utility.yul\":451:454   */\n      dup5\n        /* \"#utility.yul\":447:458   */\n      add\n        /* \"#utility.yul\":440:479   */\n      mstore\n        /* \"#utility.yul\":412:414   */\n      0x20\n        /* \"#utility.yul\":409:410   */\n      dup2\n        /* \"#utility.yul\":405:415   */\n      add\n        /* \"#utility.yul\":400:415   */\n      swap1\n      pop\n        /* \"#utility.yul\":376:489   */\n      jump(tag_100)\n    tag_102:\n        /* \"#utility.yul\":523:524   */\n      0x00\n        /* \"#utility.yul\":514:520   */\n      dup5\n        /* \"#utility.yul\":509:512   */\n      dup5\n        /* \"#utility.yul\":505:521   */\n      add\n        /* \"#utility.yul\":498:525   */\n      mstore\n        /* \"#utility.yul\":347:531   */\n      pop\n        /* \"#utility.yul\":285:531   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":537:639   */\n    tag_52:\n        /* \"#utility.yul\":578:584   */\n      0x00\n        /* \"#utility.yul\":629:631   */\n      0x1f\n        /* \"#utility.yul\":625:632   */\n      not\n        /* \"#utility.yul\":620:622   */\n      0x1f\n        /* \"#utility.yul\":613:618   */\n      dup4\n        /* \"#utility.yul\":609:623   */\n      add\n        /* \"#utility.yul\":605:633   */\n      and\n        /* \"#utility.yul\":595:633   */\n      swap1\n      pop\n        /* \"#utility.yul\":537:639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:1018   */\n    tag_53:\n        /* \"#utility.yul\":731:734   */\n      0x00\n        /* \"#utility.yul\":759:797   */\n      tag_105\n        /* \"#utility.yul\":791:796   */\n      dup3\n        /* \"#utility.yul\":759:797   */\n      tag_49\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":813:883   */\n      tag_106\n        /* \"#utility.yul\":876:882   */\n      dup2\n        /* \"#utility.yul\":871:874   */\n      dup6\n        /* \"#utility.yul\":813:883   */\n      tag_50\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":806:883   */\n      swap4\n      pop\n        /* \"#utility.yul\":892:957   */\n      tag_107\n        /* \"#utility.yul\":950:956   */\n      dup2\n        /* \"#utility.yul\":945:948   */\n      dup6\n        /* \"#utility.yul\":938:942   */\n      0x20\n        /* \"#utility.yul\":931:936   */\n      dup7\n        /* \"#utility.yul\":927:943   */\n      add\n        /* \"#utility.yul\":892:957   */\n      tag_51\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":982:1011   */\n      tag_108\n        /* \"#utility.yul\":1004:1010   */\n      dup2\n        /* \"#utility.yul\":982:1011   */\n      tag_52\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":977:980   */\n      dup5\n        /* \"#utility.yul\":973:1012   */\n      add\n        /* \"#utility.yul\":966:1012   */\n      swap2\n      pop\n        /* \"#utility.yul\":735:1018   */\n      pop\n        /* \"#utility.yul\":645:1018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1024:1333   */\n    tag_12:\n        /* \"#utility.yul\":1135:1139   */\n      0x00\n        /* \"#utility.yul\":1173:1175   */\n      0x20\n        /* \"#utility.yul\":1162:1171   */\n      dup3\n        /* \"#utility.yul\":1158:1176   */\n      add\n        /* \"#utility.yul\":1150:1176   */\n      swap1\n      pop\n        /* \"#utility.yul\":1222:1231   */\n      dup2\n        /* \"#utility.yul\":1216:1220   */\n      dup2\n        /* \"#utility.yul\":1212:1232   */\n      sub\n        /* \"#utility.yul\":1208:1209   */\n      0x00\n        /* \"#utility.yul\":1197:1206   */\n      dup4\n        /* \"#utility.yul\":1193:1210   */\n      add\n        /* \"#utility.yul\":1186:1233   */\n      mstore\n        /* \"#utility.yul\":1250:1326   */\n      tag_110\n        /* \"#utility.yul\":1321:1325   */\n      dup2\n        /* \"#utility.yul\":1312:1318   */\n      dup5\n        /* \"#utility.yul\":1250:1326   */\n      tag_53\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1242:1326   */\n      swap1\n      pop\n        /* \"#utility.yul\":1024:1333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1339:1415   */\n    tag_54:\n        /* \"#utility.yul\":1375:1382   */\n      0x00\n        /* \"#utility.yul\":1404:1409   */\n      dup2\n        /* \"#utility.yul\":1393:1409   */\n      swap1\n      pop\n        /* \"#utility.yul\":1339:1415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1421:1536   */\n    tag_55:\n        /* \"#utility.yul\":1506:1529   */\n      tag_113\n        /* \"#utility.yul\":1523:1528   */\n      dup2\n        /* \"#utility.yul\":1506:1529   */\n      tag_54\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1501:1504   */\n      dup3\n        /* \"#utility.yul\":1494:1530   */\n      mstore\n        /* \"#utility.yul\":1421:1536   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1542:1760   */\n    tag_16:\n        /* \"#utility.yul\":1633:1637   */\n      0x00\n        /* \"#utility.yul\":1671:1673   */\n      0x20\n        /* \"#utility.yul\":1660:1669   */\n      dup3\n        /* \"#utility.yul\":1656:1674   */\n      add\n        /* \"#utility.yul\":1648:1674   */\n      swap1\n      pop\n        /* \"#utility.yul\":1684:1753   */\n      tag_115\n        /* \"#utility.yul\":1750:1751   */\n      0x00\n        /* \"#utility.yul\":1739:1748   */\n      dup4\n        /* \"#utility.yul\":1735:1752   */\n      add\n        /* \"#utility.yul\":1726:1732   */\n      dup5\n        /* \"#utility.yul\":1684:1753   */\n      tag_55\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1542:1760   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1766:1843   */\n    tag_56:\n        /* \"#utility.yul\":1803:1810   */\n      0x00\n        /* \"#utility.yul\":1832:1837   */\n      dup2\n        /* \"#utility.yul\":1821:1837   */\n      swap1\n      pop\n        /* \"#utility.yul\":1766:1843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1849:1967   */\n    tag_57:\n        /* \"#utility.yul\":1936:1960   */\n      tag_118\n        /* \"#utility.yul\":1954:1959   */\n      dup2\n        /* \"#utility.yul\":1936:1960   */\n      tag_56\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1931:1934   */\n      dup3\n        /* \"#utility.yul\":1924:1961   */\n      mstore\n        /* \"#utility.yul\":1849:1967   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1973:2050   */\n    tag_58:\n        /* \"#utility.yul\":2010:2017   */\n      0x00\n        /* \"#utility.yul\":2039:2044   */\n      dup2\n        /* \"#utility.yul\":2028:2044   */\n      swap1\n      pop\n        /* \"#utility.yul\":1973:2050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2056:2174   */\n    tag_59:\n        /* \"#utility.yul\":2143:2167   */\n      tag_121\n        /* \"#utility.yul\":2161:2166   */\n      dup2\n        /* \"#utility.yul\":2143:2167   */\n      tag_58\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2138:2141   */\n      dup3\n        /* \"#utility.yul\":2131:2168   */\n      mstore\n        /* \"#utility.yul\":2056:2174   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2180:2360   */\n    tag_60:\n        /* \"#utility.yul\":2228:2305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2225:2226   */\n      0x00\n        /* \"#utility.yul\":2218:2306   */\n      mstore\n        /* \"#utility.yul\":2325:2329   */\n      0x22\n        /* \"#utility.yul\":2322:2323   */\n      0x04\n        /* \"#utility.yul\":2315:2330   */\n      mstore\n        /* \"#utility.yul\":2349:2353   */\n      0x24\n        /* \"#utility.yul\":2346:2347   */\n      0x00\n        /* \"#utility.yul\":2339:2354   */\n      revert\n        /* \"#utility.yul\":2366:2686   */\n    tag_32:\n        /* \"#utility.yul\":2410:2416   */\n      0x00\n        /* \"#utility.yul\":2447:2448   */\n      0x02\n        /* \"#utility.yul\":2441:2445   */\n      dup3\n        /* \"#utility.yul\":2437:2449   */\n      div\n        /* \"#utility.yul\":2427:2449   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2495   */\n      0x01\n        /* \"#utility.yul\":2488:2492   */\n      dup3\n        /* \"#utility.yul\":2484:2496   */\n      and\n        /* \"#utility.yul\":2515:2533   */\n      dup1\n        /* \"#utility.yul\":2505:2586   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":2571:2575   */\n      0x7f\n        /* \"#utility.yul\":2563:2569   */\n      dup3\n        /* \"#utility.yul\":2559:2576   */\n      and\n        /* \"#utility.yul\":2549:2576   */\n      swap2\n      pop\n        /* \"#utility.yul\":2505:2586   */\n    tag_124:\n        /* \"#utility.yul\":2633:2635   */\n      0x20\n        /* \"#utility.yul\":2625:2631   */\n      dup3\n        /* \"#utility.yul\":2622:2636   */\n      lt\n        /* \"#utility.yul\":2602:2620   */\n      dup2\n        /* \"#utility.yul\":2599:2637   */\n      sub\n        /* \"#utility.yul\":2596:2680   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":2652:2670   */\n      tag_126\n      tag_60\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2596:2680   */\n    tag_125:\n        /* \"#utility.yul\":2417:2686   */\n      pop\n        /* \"#utility.yul\":2366:2686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2692:2832   */\n    tag_61:\n        /* \"#utility.yul\":2740:2744   */\n      0x00\n        /* \"#utility.yul\":2763:2766   */\n      dup2\n        /* \"#utility.yul\":2755:2766   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2789   */\n      dup2\n        /* \"#utility.yul\":2783:2784   */\n      0x00\n        /* \"#utility.yul\":2776:2790   */\n      mstore\n        /* \"#utility.yul\":2820:2824   */\n      0x20\n        /* \"#utility.yul\":2817:2818   */\n      0x00\n        /* \"#utility.yul\":2807:2825   */\n      keccak256\n        /* \"#utility.yul\":2799:2825   */\n      swap1\n      pop\n        /* \"#utility.yul\":2692:2832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:3687   */\n    tag_62:\n        /* \"#utility.yul\":2943:2946   */\n      0x00\n        /* \"#utility.yul\":2980:2985   */\n      dup2\n        /* \"#utility.yul\":2974:2986   */\n      sload\n        /* \"#utility.yul\":3009:3045   */\n      tag_129\n        /* \"#utility.yul\":3035:3044   */\n      dup2\n        /* \"#utility.yul\":3009:3045   */\n      tag_32\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3061:3131   */\n      tag_130\n        /* \"#utility.yul\":3124:3130   */\n      dup2\n        /* \"#utility.yul\":3119:3122   */\n      dup7\n        /* \"#utility.yul\":3061:3131   */\n      tag_50\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3054:3131   */\n      swap5\n      pop\n        /* \"#utility.yul\":3162:3163   */\n      0x01\n        /* \"#utility.yul\":3151:3160   */\n      dup3\n        /* \"#utility.yul\":3147:3164   */\n      and\n        /* \"#utility.yul\":3178:3179   */\n      0x00\n        /* \"#utility.yul\":3173:3337   */\n      dup2\n      eq\n      tag_132\n      jumpi\n        /* \"#utility.yul\":3351:3352   */\n      0x01\n        /* \"#utility.yul\":3346:3681   */\n      dup2\n      eq\n      tag_133\n      jumpi\n        /* \"#utility.yul\":3140:3681   */\n      jump(tag_131)\n        /* \"#utility.yul\":3173:3337   */\n    tag_132:\n        /* \"#utility.yul\":3257:3261   */\n      0xff\n        /* \"#utility.yul\":3253:3262   */\n      not\n        /* \"#utility.yul\":3242:3251   */\n      dup4\n        /* \"#utility.yul\":3238:3263   */\n      and\n        /* \"#utility.yul\":3233:3236   */\n      dup7\n        /* \"#utility.yul\":3226:3264   */\n      mstore\n        /* \"#utility.yul\":3317:3323   */\n      dup2\n        /* \"#utility.yul\":3310:3324   */\n      iszero\n        /* \"#utility.yul\":3303:3325   */\n      iszero\n        /* \"#utility.yul\":3297:3301   */\n      0x20\n        /* \"#utility.yul\":3293:3326   */\n      mul\n        /* \"#utility.yul\":3288:3291   */\n      dup7\n        /* \"#utility.yul\":3284:3327   */\n      add\n        /* \"#utility.yul\":3277:3327   */\n      swap4\n      pop\n        /* \"#utility.yul\":3173:3337   */\n      jump(tag_131)\n        /* \"#utility.yul\":3346:3681   */\n    tag_133:\n        /* \"#utility.yul\":3413:3450   */\n      tag_134\n        /* \"#utility.yul\":3444:3449   */\n      dup6\n        /* \"#utility.yul\":3413:3450   */\n      tag_61\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3472:3473   */\n      0x00\n        /* \"#utility.yul\":3486:3640   */\n    tag_135:\n        /* \"#utility.yul\":3500:3506   */\n      dup4\n        /* \"#utility.yul\":3497:3498   */\n      dup2\n        /* \"#utility.yul\":3494:3507   */\n      lt\n        /* \"#utility.yul\":3486:3640   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":3574:3581   */\n      dup2\n        /* \"#utility.yul\":3568:3582   */\n      sload\n        /* \"#utility.yul\":3564:3565   */\n      dup2\n        /* \"#utility.yul\":3559:3562   */\n      dup10\n        /* \"#utility.yul\":3555:3566   */\n      add\n        /* \"#utility.yul\":3548:3583   */\n      mstore\n        /* \"#utility.yul\":3624:3625   */\n      0x01\n        /* \"#utility.yul\":3615:3622   */\n      dup3\n        /* \"#utility.yul\":3611:3626   */\n      add\n        /* \"#utility.yul\":3600:3626   */\n      swap2\n      pop\n        /* \"#utility.yul\":3522:3526   */\n      0x20\n        /* \"#utility.yul\":3519:3520   */\n      dup2\n        /* \"#utility.yul\":3515:3527   */\n      add\n        /* \"#utility.yul\":3510:3527   */\n      swap1\n      pop\n        /* \"#utility.yul\":3486:3640   */\n      jump(tag_135)\n    tag_137:\n        /* \"#utility.yul\":3669:3670   */\n      dup1\n        /* \"#utility.yul\":3664:3667   */\n      dup9\n        /* \"#utility.yul\":3660:3671   */\n      add\n        /* \"#utility.yul\":3653:3671   */\n      swap6\n      pop\n        /* \"#utility.yul\":3353:3681   */\n      pop\n      pop\n        /* \"#utility.yul\":3140:3681   */\n    tag_131:\n      pop\n        /* \"#utility.yul\":2947:3687   */\n      pop\n      pop\n        /* \"#utility.yul\":2860:3687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3693:3819   */\n    tag_63:\n        /* \"#utility.yul\":3730:3737   */\n      0x00\n        /* \"#utility.yul\":3770:3812   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3763:3768   */\n      dup3\n        /* \"#utility.yul\":3759:3813   */\n      and\n        /* \"#utility.yul\":3748:3813   */\n      swap1\n      pop\n        /* \"#utility.yul\":3693:3819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3825:3885   */\n    tag_64:\n        /* \"#utility.yul\":3853:3856   */\n      0x00\n        /* \"#utility.yul\":3874:3879   */\n      dup2\n        /* \"#utility.yul\":3867:3879   */\n      swap1\n      pop\n        /* \"#utility.yul\":3825:3885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3891:4033   */\n    tag_65:\n        /* \"#utility.yul\":3941:3950   */\n      0x00\n        /* \"#utility.yul\":3974:4027   */\n      tag_141\n        /* \"#utility.yul\":3992:4026   */\n      tag_142\n        /* \"#utility.yul\":4001:4025   */\n      tag_143\n        /* \"#utility.yul\":4019:4024   */\n      dup5\n        /* \"#utility.yul\":4001:4025   */\n      tag_63\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3992:4026   */\n      tag_64\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3974:4027   */\n      tag_63\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3961:4027   */\n      swap1\n      pop\n        /* \"#utility.yul\":3891:4033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4039:4165   */\n    tag_66:\n        /* \"#utility.yul\":4089:4098   */\n      0x00\n        /* \"#utility.yul\":4122:4159   */\n      tag_145\n        /* \"#utility.yul\":4153:4158   */\n      dup3\n        /* \"#utility.yul\":4122:4159   */\n      tag_65\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4109:4159   */\n      swap1\n      pop\n        /* \"#utility.yul\":4039:4165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4171:4310   */\n    tag_67:\n        /* \"#utility.yul\":4234:4243   */\n      0x00\n        /* \"#utility.yul\":4267:4304   */\n      tag_147\n        /* \"#utility.yul\":4298:4303   */\n      dup3\n        /* \"#utility.yul\":4267:4304   */\n      tag_66\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4254:4304   */\n      swap1\n      pop\n        /* \"#utility.yul\":4171:4310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4316:4473   */\n    tag_68:\n        /* \"#utility.yul\":4416:4466   */\n      tag_149\n        /* \"#utility.yul\":4460:4465   */\n      dup2\n        /* \"#utility.yul\":4416:4466   */\n      tag_67\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4411:4414   */\n      dup3\n        /* \"#utility.yul\":4404:4467   */\n      mstore\n        /* \"#utility.yul\":4316:4473   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4479:5250   */\n    tag_21:\n        /* \"#utility.yul\":4712:4716   */\n      0x00\n        /* \"#utility.yul\":4750:4753   */\n      0xa0\n        /* \"#utility.yul\":4739:4748   */\n      dup3\n        /* \"#utility.yul\":4735:4754   */\n      add\n        /* \"#utility.yul\":4727:4754   */\n      swap1\n      pop\n        /* \"#utility.yul\":4764:4835   */\n      tag_151\n        /* \"#utility.yul\":4832:4833   */\n      0x00\n        /* \"#utility.yul\":4821:4830   */\n      dup4\n        /* \"#utility.yul\":4817:4834   */\n      add\n        /* \"#utility.yul\":4808:4814   */\n      dup9\n        /* \"#utility.yul\":4764:4835   */\n      tag_57\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4845:4917   */\n      tag_152\n        /* \"#utility.yul\":4913:4915   */\n      0x20\n        /* \"#utility.yul\":4902:4911   */\n      dup4\n        /* \"#utility.yul\":4898:4916   */\n      add\n        /* \"#utility.yul\":4889:4895   */\n      dup8\n        /* \"#utility.yul\":4845:4917   */\n      tag_59\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4964:4973   */\n      dup2\n        /* \"#utility.yul\":4958:4962   */\n      dup2\n        /* \"#utility.yul\":4954:4974   */\n      sub\n        /* \"#utility.yul\":4949:4951   */\n      0x40\n        /* \"#utility.yul\":4938:4947   */\n      dup4\n        /* \"#utility.yul\":4934:4952   */\n      add\n        /* \"#utility.yul\":4927:4975   */\n      mstore\n        /* \"#utility.yul\":4992:5065   */\n      tag_153\n        /* \"#utility.yul\":5060:5064   */\n      dup2\n        /* \"#utility.yul\":5051:5057   */\n      dup7\n        /* \"#utility.yul\":4992:5065   */\n      tag_62\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4984:5065   */\n      swap1\n      pop\n        /* \"#utility.yul\":5075:5160   */\n      tag_154\n        /* \"#utility.yul\":5156:5158   */\n      0x60\n        /* \"#utility.yul\":5145:5154   */\n      dup4\n        /* \"#utility.yul\":5141:5159   */\n      add\n        /* \"#utility.yul\":5132:5138   */\n      dup6\n        /* \"#utility.yul\":5075:5160   */\n      tag_68\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5170:5243   */\n      tag_155\n        /* \"#utility.yul\":5238:5241   */\n      0x80\n        /* \"#utility.yul\":5227:5236   */\n      dup4\n        /* \"#utility.yul\":5223:5242   */\n      add\n        /* \"#utility.yul\":5214:5220   */\n      dup5\n        /* \"#utility.yul\":5170:5243   */\n      tag_59\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4479:5250   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5256:5331   */\n    tag_69:\n        /* \"#utility.yul\":5289:5295   */\n      0x00\n        /* \"#utility.yul\":5322:5324   */\n      0x40\n        /* \"#utility.yul\":5316:5325   */\n      mload\n        /* \"#utility.yul\":5306:5325   */\n      swap1\n      pop\n        /* \"#utility.yul\":5256:5331   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5337:5454   */\n    tag_70:\n        /* \"#utility.yul\":5446:5447   */\n      0x00\n        /* \"#utility.yul\":5443:5444   */\n      dup1\n        /* \"#utility.yul\":5436:5448   */\n      revert\n        /* \"#utility.yul\":5583:5705   */\n    tag_72:\n        /* \"#utility.yul\":5656:5680   */\n      tag_160\n        /* \"#utility.yul\":5674:5679   */\n      dup2\n        /* \"#utility.yul\":5656:5680   */\n      tag_58\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5649:5654   */\n      dup2\n        /* \"#utility.yul\":5646:5681   */\n      eq\n        /* \"#utility.yul\":5636:5699   */\n      tag_161\n      jumpi\n        /* \"#utility.yul\":5695:5696   */\n      0x00\n        /* \"#utility.yul\":5692:5693   */\n      dup1\n        /* \"#utility.yul\":5685:5697   */\n      revert\n        /* \"#utility.yul\":5636:5699   */\n    tag_161:\n        /* \"#utility.yul\":5583:5705   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5711:5854   */\n    tag_73:\n        /* \"#utility.yul\":5768:5773   */\n      0x00\n        /* \"#utility.yul\":5799:5805   */\n      dup2\n        /* \"#utility.yul\":5793:5806   */\n      mload\n        /* \"#utility.yul\":5784:5806   */\n      swap1\n      pop\n        /* \"#utility.yul\":5815:5848   */\n      tag_163\n        /* \"#utility.yul\":5842:5847   */\n      dup2\n        /* \"#utility.yul\":5815:5848   */\n      tag_72\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5711:5854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5860:6211   */\n    tag_25:\n        /* \"#utility.yul\":5930:5936   */\n      0x00\n        /* \"#utility.yul\":5979:5981   */\n      0x20\n        /* \"#utility.yul\":5967:5976   */\n      dup3\n        /* \"#utility.yul\":5958:5965   */\n      dup5\n        /* \"#utility.yul\":5954:5977   */\n      sub\n        /* \"#utility.yul\":5950:5982   */\n      slt\n        /* \"#utility.yul\":5947:6066   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":5985:6064   */\n      tag_166\n      tag_70\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5947:6066   */\n    tag_165:\n        /* \"#utility.yul\":6105:6106   */\n      0x00\n        /* \"#utility.yul\":6130:6194   */\n      tag_167\n        /* \"#utility.yul\":6186:6193   */\n      dup5\n        /* \"#utility.yul\":6177:6183   */\n      dup3\n        /* \"#utility.yul\":6166:6175   */\n      dup6\n        /* \"#utility.yul\":6162:6184   */\n      add\n        /* \"#utility.yul\":6130:6194   */\n      tag_73\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6120:6194   */\n      swap2\n      pop\n        /* \"#utility.yul\":6076:6204   */\n      pop\n        /* \"#utility.yul\":5860:6211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6303   */\n    tag_74:\n        /* \"#utility.yul\":6263:6270   */\n      0x00\n        /* \"#utility.yul\":6292:6297   */\n      dup2\n        /* \"#utility.yul\":6281:6297   */\n      swap1\n      pop\n        /* \"#utility.yul\":6217:6303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6309:6469   */\n    tag_75:\n        /* \"#utility.yul\":6368:6377   */\n      0x00\n        /* \"#utility.yul\":6401:6463   */\n      tag_170\n        /* \"#utility.yul\":6419:6462   */\n      tag_171\n        /* \"#utility.yul\":6428:6461   */\n      tag_172\n        /* \"#utility.yul\":6455:6460   */\n      dup5\n        /* \"#utility.yul\":6428:6461   */\n      tag_74\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6419:6462   */\n      tag_64\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6401:6463   */\n      tag_58\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6388:6463   */\n      swap1\n      pop\n        /* \"#utility.yul\":6309:6469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6475:6624   */\n    tag_76:\n        /* \"#utility.yul\":6571:6617   */\n      tag_174\n        /* \"#utility.yul\":6611:6616   */\n      dup2\n        /* \"#utility.yul\":6571:6617   */\n      tag_75\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6566:6569   */\n      dup3\n        /* \"#utility.yul\":6559:6618   */\n      mstore\n        /* \"#utility.yul\":6475:6624   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6630:7282   */\n    tag_27:\n        /* \"#utility.yul\":6831:6835   */\n      0x00\n        /* \"#utility.yul\":6869:6872   */\n      0x80\n        /* \"#utility.yul\":6858:6867   */\n      dup3\n        /* \"#utility.yul\":6854:6873   */\n      add\n        /* \"#utility.yul\":6846:6873   */\n      swap1\n      pop\n        /* \"#utility.yul\":6883:6954   */\n      tag_176\n        /* \"#utility.yul\":6951:6952   */\n      0x00\n        /* \"#utility.yul\":6940:6949   */\n      dup4\n        /* \"#utility.yul\":6936:6953   */\n      add\n        /* \"#utility.yul\":6927:6933   */\n      dup8\n        /* \"#utility.yul\":6883:6954   */\n      tag_57\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6964:7036   */\n      tag_177\n        /* \"#utility.yul\":7032:7034   */\n      0x20\n        /* \"#utility.yul\":7021:7030   */\n      dup4\n        /* \"#utility.yul\":7017:7035   */\n      add\n        /* \"#utility.yul\":7008:7014   */\n      dup7\n        /* \"#utility.yul\":6964:7036   */\n      tag_59\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7083:7092   */\n      dup2\n        /* \"#utility.yul\":7077:7081   */\n      dup2\n        /* \"#utility.yul\":7073:7093   */\n      sub\n        /* \"#utility.yul\":7068:7070   */\n      0x40\n        /* \"#utility.yul\":7057:7066   */\n      dup4\n        /* \"#utility.yul\":7053:7071   */\n      add\n        /* \"#utility.yul\":7046:7094   */\n      mstore\n        /* \"#utility.yul\":7111:7184   */\n      tag_178\n        /* \"#utility.yul\":7179:7183   */\n      dup2\n        /* \"#utility.yul\":7170:7176   */\n      dup6\n        /* \"#utility.yul\":7111:7184   */\n      tag_62\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":7103:7184   */\n      swap1\n      pop\n        /* \"#utility.yul\":7194:7275   */\n      tag_179\n        /* \"#utility.yul\":7271:7273   */\n      0x60\n        /* \"#utility.yul\":7260:7269   */\n      dup4\n        /* \"#utility.yul\":7256:7274   */\n      add\n        /* \"#utility.yul\":7247:7253   */\n      dup5\n        /* \"#utility.yul\":7194:7275   */\n      tag_76\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6630:7282   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7288:7384   */\n    tag_77:\n        /* \"#utility.yul\":7325:7332   */\n      0x00\n        /* \"#utility.yul\":7354:7378   */\n      tag_181\n        /* \"#utility.yul\":7372:7377   */\n      dup3\n        /* \"#utility.yul\":7354:7378   */\n      tag_63\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7343:7378   */\n      swap1\n      pop\n        /* \"#utility.yul\":7288:7384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7390:7508   */\n    tag_78:\n        /* \"#utility.yul\":7477:7501   */\n      tag_183\n        /* \"#utility.yul\":7495:7500   */\n      dup2\n        /* \"#utility.yul\":7477:7501   */\n      tag_77\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7472:7475   */\n      dup3\n        /* \"#utility.yul\":7465:7502   */\n      mstore\n        /* \"#utility.yul\":7390:7508   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7514:8148   */\n    tag_39:\n        /* \"#utility.yul\":7706:7710   */\n      0x00\n        /* \"#utility.yul\":7744:7747   */\n      0x80\n        /* \"#utility.yul\":7733:7742   */\n      dup3\n        /* \"#utility.yul\":7729:7748   */\n      add\n        /* \"#utility.yul\":7721:7748   */\n      swap1\n      pop\n        /* \"#utility.yul\":7758:7829   */\n      tag_185\n        /* \"#utility.yul\":7826:7827   */\n      0x00\n        /* \"#utility.yul\":7815:7824   */\n      dup4\n        /* \"#utility.yul\":7811:7828   */\n      add\n        /* \"#utility.yul\":7802:7808   */\n      dup8\n        /* \"#utility.yul\":7758:7829   */\n      tag_78\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":7839:7911   */\n      tag_186\n        /* \"#utility.yul\":7907:7909   */\n      0x20\n        /* \"#utility.yul\":7896:7905   */\n      dup4\n        /* \"#utility.yul\":7892:7910   */\n      add\n        /* \"#utility.yul\":7883:7889   */\n      dup7\n        /* \"#utility.yul\":7839:7911   */\n      tag_57\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7921:7993   */\n      tag_187\n        /* \"#utility.yul\":7989:7991   */\n      0x40\n        /* \"#utility.yul\":7978:7987   */\n      dup4\n        /* \"#utility.yul\":7974:7992   */\n      add\n        /* \"#utility.yul\":7965:7971   */\n      dup6\n        /* \"#utility.yul\":7921:7993   */\n      tag_59\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":8040:8049   */\n      dup2\n        /* \"#utility.yul\":8034:8038   */\n      dup2\n        /* \"#utility.yul\":8030:8050   */\n      sub\n        /* \"#utility.yul\":8025:8027   */\n      0x60\n        /* \"#utility.yul\":8014:8023   */\n      dup4\n        /* \"#utility.yul\":8010:8028   */\n      add\n        /* \"#utility.yul\":8003:8051   */\n      mstore\n        /* \"#utility.yul\":8068:8141   */\n      tag_188\n        /* \"#utility.yul\":8136:8140   */\n      dup2\n        /* \"#utility.yul\":8127:8133   */\n      dup5\n        /* \"#utility.yul\":8068:8141   */\n      tag_62\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":8060:8141   */\n      swap1\n      pop\n        /* \"#utility.yul\":7514:8148   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8154:8271   */\n    tag_79:\n        /* \"#utility.yul\":8263:8264   */\n      0x00\n        /* \"#utility.yul\":8260:8261   */\n      dup1\n        /* \"#utility.yul\":8253:8265   */\n      revert\n        /* \"#utility.yul\":8277:8457   */\n    tag_80:\n        /* \"#utility.yul\":8325:8402   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8322:8323   */\n      0x00\n        /* \"#utility.yul\":8315:8403   */\n      mstore\n        /* \"#utility.yul\":8422:8426   */\n      0x41\n        /* \"#utility.yul\":8419:8420   */\n      0x04\n        /* \"#utility.yul\":8412:8427   */\n      mstore\n        /* \"#utility.yul\":8446:8450   */\n      0x24\n        /* \"#utility.yul\":8443:8444   */\n      0x00\n        /* \"#utility.yul\":8436:8451   */\n      revert\n        /* \"#utility.yul\":8463:8744   */\n    tag_81:\n        /* \"#utility.yul\":8546:8573   */\n      tag_192\n        /* \"#utility.yul\":8568:8572   */\n      dup3\n        /* \"#utility.yul\":8546:8573   */\n      tag_52\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":8538:8544   */\n      dup2\n        /* \"#utility.yul\":8534:8574   */\n      add\n        /* \"#utility.yul\":8676:8682   */\n      dup2\n        /* \"#utility.yul\":8664:8674   */\n      dup2\n        /* \"#utility.yul\":8661:8683   */\n      lt\n        /* \"#utility.yul\":8640:8658   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8628:8638   */\n      dup3\n        /* \"#utility.yul\":8625:8659   */\n      gt\n        /* \"#utility.yul\":8622:8684   */\n      or\n        /* \"#utility.yul\":8619:8707   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":8687:8705   */\n      tag_194\n      tag_80\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":8619:8707   */\n    tag_193:\n        /* \"#utility.yul\":8727:8737   */\n      dup1\n        /* \"#utility.yul\":8723:8725   */\n      0x40\n        /* \"#utility.yul\":8716:8738   */\n      mstore\n        /* \"#utility.yul\":8506:8744   */\n      pop\n        /* \"#utility.yul\":8463:8744   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8750:8879   */\n    tag_82:\n        /* \"#utility.yul\":8784:8790   */\n      0x00\n        /* \"#utility.yul\":8811:8831   */\n      tag_196\n      tag_69\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":8801:8831   */\n      swap1\n      pop\n        /* \"#utility.yul\":8840:8873   */\n      tag_197\n        /* \"#utility.yul\":8868:8872   */\n      dup3\n        /* \"#utility.yul\":8860:8866   */\n      dup3\n        /* \"#utility.yul\":8840:8873   */\n      tag_81\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":8750:8879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9008:9130   */\n    tag_84:\n        /* \"#utility.yul\":9081:9105   */\n      tag_200\n        /* \"#utility.yul\":9099:9104   */\n      dup2\n        /* \"#utility.yul\":9081:9105   */\n      tag_77\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":9074:9079   */\n      dup2\n        /* \"#utility.yul\":9071:9106   */\n      eq\n        /* \"#utility.yul\":9061:9124   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":9120:9121   */\n      0x00\n        /* \"#utility.yul\":9117:9118   */\n      dup1\n        /* \"#utility.yul\":9110:9122   */\n      revert\n        /* \"#utility.yul\":9061:9124   */\n    tag_201:\n        /* \"#utility.yul\":9008:9130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9136:9279   */\n    tag_85:\n        /* \"#utility.yul\":9193:9198   */\n      0x00\n        /* \"#utility.yul\":9224:9230   */\n      dup2\n        /* \"#utility.yul\":9218:9231   */\n      mload\n        /* \"#utility.yul\":9209:9231   */\n      swap1\n      pop\n        /* \"#utility.yul\":9240:9273   */\n      tag_203\n        /* \"#utility.yul\":9267:9272   */\n      dup2\n        /* \"#utility.yul\":9240:9273   */\n      tag_84\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":9136:9279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9285:9394   */\n    tag_86:\n        /* \"#utility.yul\":9335:9342   */\n      0x00\n        /* \"#utility.yul\":9364:9388   */\n      tag_205\n        /* \"#utility.yul\":9382:9387   */\n      dup3\n        /* \"#utility.yul\":9364:9388   */\n      tag_77\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":9353:9388   */\n      swap1\n      pop\n        /* \"#utility.yul\":9285:9394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9400:9548   */\n    tag_87:\n        /* \"#utility.yul\":9486:9523   */\n      tag_207\n        /* \"#utility.yul\":9517:9522   */\n      dup2\n        /* \"#utility.yul\":9486:9523   */\n      tag_86\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":9479:9484   */\n      dup2\n        /* \"#utility.yul\":9476:9524   */\n      eq\n        /* \"#utility.yul\":9466:9542   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":9538:9539   */\n      0x00\n        /* \"#utility.yul\":9535:9536   */\n      dup1\n        /* \"#utility.yul\":9528:9540   */\n      revert\n        /* \"#utility.yul\":9466:9542   */\n    tag_208:\n        /* \"#utility.yul\":9400:9548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9554:9723   */\n    tag_88:\n        /* \"#utility.yul\":9624:9629   */\n      0x00\n        /* \"#utility.yul\":9655:9661   */\n      dup2\n        /* \"#utility.yul\":9649:9662   */\n      mload\n        /* \"#utility.yul\":9640:9662   */\n      swap1\n      pop\n        /* \"#utility.yul\":9671:9717   */\n      tag_210\n        /* \"#utility.yul\":9711:9716   */\n      dup2\n        /* \"#utility.yul\":9671:9717   */\n      tag_87\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":9554:9723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9729:9819   */\n    tag_89:\n        /* \"#utility.yul\":9763:9770   */\n      0x00\n        /* \"#utility.yul\":9806:9811   */\n      dup2\n        /* \"#utility.yul\":9799:9812   */\n      iszero\n        /* \"#utility.yul\":9792:9813   */\n      iszero\n        /* \"#utility.yul\":9781:9813   */\n      swap1\n      pop\n        /* \"#utility.yul\":9729:9819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9825:9941   */\n    tag_90:\n        /* \"#utility.yul\":9895:9916   */\n      tag_213\n        /* \"#utility.yul\":9910:9915   */\n      dup2\n        /* \"#utility.yul\":9895:9916   */\n      tag_89\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":9888:9893   */\n      dup2\n        /* \"#utility.yul\":9885:9917   */\n      eq\n        /* \"#utility.yul\":9875:9935   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":9931:9932   */\n      0x00\n        /* \"#utility.yul\":9928:9929   */\n      dup1\n        /* \"#utility.yul\":9921:9933   */\n      revert\n        /* \"#utility.yul\":9875:9935   */\n    tag_214:\n        /* \"#utility.yul\":9825:9941   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9947:10084   */\n    tag_91:\n        /* \"#utility.yul\":10001:10006   */\n      0x00\n        /* \"#utility.yul\":10032:10038   */\n      dup2\n        /* \"#utility.yul\":10026:10039   */\n      mload\n        /* \"#utility.yul\":10017:10039   */\n      swap1\n      pop\n        /* \"#utility.yul\":10048:10078   */\n      tag_216\n        /* \"#utility.yul\":10072:10077   */\n      dup2\n        /* \"#utility.yul\":10048:10078   */\n      tag_90\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":9947:10084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10148:11693   */\n    tag_92:\n        /* \"#utility.yul\":10240:10245   */\n      0x00\n        /* \"#utility.yul\":10284:10288   */\n      0xe0\n        /* \"#utility.yul\":10272:10281   */\n      dup3\n        /* \"#utility.yul\":10267:10270   */\n      dup5\n        /* \"#utility.yul\":10263:10282   */\n      sub\n        /* \"#utility.yul\":10259:10289   */\n      slt\n        /* \"#utility.yul\":10256:10373   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":10292:10371   */\n      tag_219\n      tag_79\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":10256:10373   */\n    tag_218:\n        /* \"#utility.yul\":10391:10412   */\n      tag_220\n        /* \"#utility.yul\":10407:10411   */\n      0xe0\n        /* \"#utility.yul\":10391:10412   */\n      tag_82\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":10382:10412   */\n      swap1\n      pop\n        /* \"#utility.yul\":10477:10478   */\n      0x00\n        /* \"#utility.yul\":10517:10574   */\n      tag_221\n        /* \"#utility.yul\":10570:10573   */\n      dup5\n        /* \"#utility.yul\":10561:10567   */\n      dup3\n        /* \"#utility.yul\":10550:10559   */\n      dup6\n        /* \"#utility.yul\":10546:10568   */\n      add\n        /* \"#utility.yul\":10517:10574   */\n      tag_91\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":10510:10514   */\n      0x00\n        /* \"#utility.yul\":10503:10508   */\n      dup4\n        /* \"#utility.yul\":10499:10515   */\n      add\n        /* \"#utility.yul\":10492:10575   */\n      mstore\n        /* \"#utility.yul\":10422:10586   */\n      pop\n        /* \"#utility.yul\":10656:10658   */\n      0x20\n        /* \"#utility.yul\":10697:10754   */\n      tag_222\n        /* \"#utility.yul\":10750:10753   */\n      dup5\n        /* \"#utility.yul\":10741:10747   */\n      dup3\n        /* \"#utility.yul\":10730:10739   */\n      dup6\n        /* \"#utility.yul\":10726:10748   */\n      add\n        /* \"#utility.yul\":10697:10754   */\n      tag_91\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":10690:10694   */\n      0x20\n        /* \"#utility.yul\":10683:10688   */\n      dup4\n        /* \"#utility.yul\":10679:10695   */\n      add\n        /* \"#utility.yul\":10672:10755   */\n      mstore\n        /* \"#utility.yul\":10596:10766   */\n      pop\n        /* \"#utility.yul\":10844:10846   */\n      0x40\n        /* \"#utility.yul\":10885:10942   */\n      tag_223\n        /* \"#utility.yul\":10938:10941   */\n      dup5\n        /* \"#utility.yul\":10929:10935   */\n      dup3\n        /* \"#utility.yul\":10918:10927   */\n      dup6\n        /* \"#utility.yul\":10914:10936   */\n      add\n        /* \"#utility.yul\":10885:10942   */\n      tag_91\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":10878:10882   */\n      0x40\n        /* \"#utility.yul\":10871:10876   */\n      dup4\n        /* \"#utility.yul\":10867:10883   */\n      add\n        /* \"#utility.yul\":10860:10943   */\n      mstore\n        /* \"#utility.yul\":10776:10954   */\n      pop\n        /* \"#utility.yul\":11032:11034   */\n      0x60\n        /* \"#utility.yul\":11073:11130   */\n      tag_224\n        /* \"#utility.yul\":11126:11129   */\n      dup5\n        /* \"#utility.yul\":11117:11123   */\n      dup3\n        /* \"#utility.yul\":11106:11115   */\n      dup6\n        /* \"#utility.yul\":11102:11124   */\n      add\n        /* \"#utility.yul\":11073:11130   */\n      tag_91\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":11066:11070   */\n      0x60\n        /* \"#utility.yul\":11059:11064   */\n      dup4\n        /* \"#utility.yul\":11055:11071   */\n      add\n        /* \"#utility.yul\":11048:11131   */\n      mstore\n        /* \"#utility.yul\":10964:11142   */\n      pop\n        /* \"#utility.yul\":11219:11222   */\n      0x80\n        /* \"#utility.yul\":11261:11318   */\n      tag_225\n        /* \"#utility.yul\":11314:11317   */\n      dup5\n        /* \"#utility.yul\":11305:11311   */\n      dup3\n        /* \"#utility.yul\":11294:11303   */\n      dup6\n        /* \"#utility.yul\":11290:11312   */\n      add\n        /* \"#utility.yul\":11261:11318   */\n      tag_91\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":11254:11258   */\n      0x80\n        /* \"#utility.yul\":11247:11252   */\n      dup4\n        /* \"#utility.yul\":11243:11259   */\n      add\n        /* \"#utility.yul\":11236:11319   */\n      mstore\n        /* \"#utility.yul\":11152:11330   */\n      pop\n        /* \"#utility.yul\":11389:11392   */\n      0xa0\n        /* \"#utility.yul\":11431:11491   */\n      tag_226\n        /* \"#utility.yul\":11487:11490   */\n      dup5\n        /* \"#utility.yul\":11478:11484   */\n      dup3\n        /* \"#utility.yul\":11467:11476   */\n      dup6\n        /* \"#utility.yul\":11463:11485   */\n      add\n        /* \"#utility.yul\":11431:11491   */\n      tag_73\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":11424:11428   */\n      0xa0\n        /* \"#utility.yul\":11417:11422   */\n      dup4\n        /* \"#utility.yul\":11413:11429   */\n      add\n        /* \"#utility.yul\":11406:11492   */\n      mstore\n        /* \"#utility.yul\":11340:11503   */\n      pop\n        /* \"#utility.yul\":11572:11575   */\n      0xc0\n        /* \"#utility.yul\":11614:11674   */\n      tag_227\n        /* \"#utility.yul\":11670:11673   */\n      dup5\n        /* \"#utility.yul\":11661:11667   */\n      dup3\n        /* \"#utility.yul\":11650:11659   */\n      dup6\n        /* \"#utility.yul\":11646:11668   */\n      add\n        /* \"#utility.yul\":11614:11674   */\n      tag_73\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":11607:11611   */\n      0xc0\n        /* \"#utility.yul\":11600:11605   */\n      dup4\n        /* \"#utility.yul\":11596:11612   */\n      add\n        /* \"#utility.yul\":11589:11675   */\n      mstore\n        /* \"#utility.yul\":11513:11686   */\n      pop\n        /* \"#utility.yul\":10148:11693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11699:11819   */\n    tag_93:\n        /* \"#utility.yul\":11771:11794   */\n      tag_229\n        /* \"#utility.yul\":11788:11793   */\n      dup2\n        /* \"#utility.yul\":11771:11794   */\n      tag_54\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":11764:11769   */\n      dup2\n        /* \"#utility.yul\":11761:11795   */\n      eq\n        /* \"#utility.yul\":11751:11813   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":11809:11810   */\n      0x00\n        /* \"#utility.yul\":11806:11807   */\n      dup1\n        /* \"#utility.yul\":11799:11811   */\n      revert\n        /* \"#utility.yul\":11751:11813   */\n    tag_230:\n        /* \"#utility.yul\":11699:11819   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11825:11966   */\n    tag_94:\n        /* \"#utility.yul\":11881:11886   */\n      0x00\n        /* \"#utility.yul\":11912:11918   */\n      dup2\n        /* \"#utility.yul\":11906:11919   */\n      mload\n        /* \"#utility.yul\":11897:11919   */\n      swap1\n      pop\n        /* \"#utility.yul\":11928:11960   */\n      tag_232\n        /* \"#utility.yul\":11954:11959   */\n      dup2\n        /* \"#utility.yul\":11928:11960   */\n      tag_93\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":11825:11966   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12022:14118   */\n    tag_95:\n        /* \"#utility.yul\":12106:12111   */\n      0x00\n        /* \"#utility.yul\":12150:12156   */\n      0x0200\n        /* \"#utility.yul\":12138:12147   */\n      dup3\n        /* \"#utility.yul\":12133:12136   */\n      dup5\n        /* \"#utility.yul\":12129:12148   */\n      sub\n        /* \"#utility.yul\":12125:12157   */\n      slt\n        /* \"#utility.yul\":12122:12241   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":12160:12239   */\n      tag_235\n      tag_79\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":12122:12241   */\n    tag_234:\n        /* \"#utility.yul\":12259:12282   */\n      tag_236\n        /* \"#utility.yul\":12275:12281   */\n      0x0140\n        /* \"#utility.yul\":12259:12282   */\n      tag_82\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":12250:12282   */\n      swap1\n      pop\n        /* \"#utility.yul\":12345:12346   */\n      0x00\n        /* \"#utility.yul\":12385:12445   */\n      tag_237\n        /* \"#utility.yul\":12441:12444   */\n      dup5\n        /* \"#utility.yul\":12432:12438   */\n      dup3\n        /* \"#utility.yul\":12421:12430   */\n      dup6\n        /* \"#utility.yul\":12417:12439   */\n      add\n        /* \"#utility.yul\":12385:12445   */\n      tag_85\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":12378:12382   */\n      0x00\n        /* \"#utility.yul\":12371:12376   */\n      dup4\n        /* \"#utility.yul\":12367:12383   */\n      add\n        /* \"#utility.yul\":12360:12446   */\n      mstore\n        /* \"#utility.yul\":12292:12457   */\n      pop\n        /* \"#utility.yul\":12520:12522   */\n      0x20\n        /* \"#utility.yul\":12561:12621   */\n      tag_238\n        /* \"#utility.yul\":12617:12620   */\n      dup5\n        /* \"#utility.yul\":12608:12614   */\n      dup3\n        /* \"#utility.yul\":12597:12606   */\n      dup6\n        /* \"#utility.yul\":12593:12615   */\n      add\n        /* \"#utility.yul\":12561:12621   */\n      tag_85\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":12554:12558   */\n      0x20\n        /* \"#utility.yul\":12547:12552   */\n      dup4\n        /* \"#utility.yul\":12543:12559   */\n      add\n        /* \"#utility.yul\":12536:12622   */\n      mstore\n        /* \"#utility.yul\":12467:12633   */\n      pop\n        /* \"#utility.yul\":12696:12698   */\n      0x40\n        /* \"#utility.yul\":12737:12810   */\n      tag_239\n        /* \"#utility.yul\":12806:12809   */\n      dup5\n        /* \"#utility.yul\":12797:12803   */\n      dup3\n        /* \"#utility.yul\":12786:12795   */\n      dup6\n        /* \"#utility.yul\":12782:12804   */\n      add\n        /* \"#utility.yul\":12737:12810   */\n      tag_88\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":12730:12734   */\n      0x40\n        /* \"#utility.yul\":12723:12728   */\n      dup4\n        /* \"#utility.yul\":12719:12735   */\n      add\n        /* \"#utility.yul\":12712:12811   */\n      mstore\n        /* \"#utility.yul\":12643:12822   */\n      pop\n        /* \"#utility.yul\":12884:12886   */\n      0x60\n        /* \"#utility.yul\":12925:12982   */\n      tag_240\n        /* \"#utility.yul\":12978:12981   */\n      dup5\n        /* \"#utility.yul\":12969:12975   */\n      dup3\n        /* \"#utility.yul\":12958:12967   */\n      dup6\n        /* \"#utility.yul\":12954:12976   */\n      add\n        /* \"#utility.yul\":12925:12982   */\n      tag_91\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":12918:12922   */\n      0x60\n        /* \"#utility.yul\":12911:12916   */\n      dup4\n        /* \"#utility.yul\":12907:12923   */\n      add\n        /* \"#utility.yul\":12900:12983   */\n      mstore\n        /* \"#utility.yul\":12832:12994   */\n      pop\n        /* \"#utility.yul\":13064:13067   */\n      0x80\n        /* \"#utility.yul\":13106:13198   */\n      tag_241\n        /* \"#utility.yul\":13194:13197   */\n      dup5\n        /* \"#utility.yul\":13185:13191   */\n      dup3\n        /* \"#utility.yul\":13174:13183   */\n      dup6\n        /* \"#utility.yul\":13170:13192   */\n      add\n        /* \"#utility.yul\":13106:13198   */\n      tag_92\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":13099:13103   */\n      0x80\n        /* \"#utility.yul\":13092:13097   */\n      dup4\n        /* \"#utility.yul\":13088:13104   */\n      add\n        /* \"#utility.yul\":13081:13199   */\n      mstore\n        /* \"#utility.yul\":13004:13210   */\n      pop\n        /* \"#utility.yul\":13278:13281   */\n      0x0160\n        /* \"#utility.yul\":13320:13379   */\n      tag_242\n        /* \"#utility.yul\":13375:13378   */\n      dup5\n        /* \"#utility.yul\":13366:13372   */\n      dup3\n        /* \"#utility.yul\":13355:13364   */\n      dup6\n        /* \"#utility.yul\":13351:13373   */\n      add\n        /* \"#utility.yul\":13320:13379   */\n      tag_94\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":13313:13317   */\n      0xa0\n        /* \"#utility.yul\":13306:13311   */\n      dup4\n        /* \"#utility.yul\":13302:13318   */\n      add\n        /* \"#utility.yul\":13295:13380   */\n      mstore\n        /* \"#utility.yul\":13220:13391   */\n      pop\n        /* \"#utility.yul\":13459:13462   */\n      0x0180\n        /* \"#utility.yul\":13501:13560   */\n      tag_243\n        /* \"#utility.yul\":13556:13559   */\n      dup5\n        /* \"#utility.yul\":13547:13553   */\n      dup3\n        /* \"#utility.yul\":13536:13545   */\n      dup6\n        /* \"#utility.yul\":13532:13554   */\n      add\n        /* \"#utility.yul\":13501:13560   */\n      tag_94\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":13494:13498   */\n      0xc0\n        /* \"#utility.yul\":13487:13492   */\n      dup4\n        /* \"#utility.yul\":13483:13499   */\n      add\n        /* \"#utility.yul\":13476:13561   */\n      mstore\n        /* \"#utility.yul\":13401:13572   */\n      pop\n        /* \"#utility.yul\":13641:13644   */\n      0x01a0\n        /* \"#utility.yul\":13683:13743   */\n      tag_244\n        /* \"#utility.yul\":13739:13742   */\n      dup5\n        /* \"#utility.yul\":13730:13736   */\n      dup3\n        /* \"#utility.yul\":13719:13728   */\n      dup6\n        /* \"#utility.yul\":13715:13737   */\n      add\n        /* \"#utility.yul\":13683:13743   */\n      tag_73\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":13676:13680   */\n      0xe0\n        /* \"#utility.yul\":13669:13674   */\n      dup4\n        /* \"#utility.yul\":13665:13681   */\n      add\n        /* \"#utility.yul\":13658:13744   */\n      mstore\n        /* \"#utility.yul\":13582:13755   */\n      pop\n        /* \"#utility.yul\":13816:13819   */\n      0x01c0\n        /* \"#utility.yul\":13860:13920   */\n      tag_245\n        /* \"#utility.yul\":13916:13919   */\n      dup5\n        /* \"#utility.yul\":13907:13913   */\n      dup3\n        /* \"#utility.yul\":13896:13905   */\n      dup6\n        /* \"#utility.yul\":13892:13914   */\n      add\n        /* \"#utility.yul\":13860:13920   */\n      tag_73\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":13851:13857   */\n      0x0100\n        /* \"#utility.yul\":13844:13849   */\n      dup4\n        /* \"#utility.yul\":13840:13858   */\n      add\n        /* \"#utility.yul\":13833:13921   */\n      mstore\n        /* \"#utility.yul\":13765:13932   */\n      pop\n        /* \"#utility.yul\":13995:13998   */\n      0x01e0\n        /* \"#utility.yul\":14039:14099   */\n      tag_246\n        /* \"#utility.yul\":14095:14098   */\n      dup5\n        /* \"#utility.yul\":14086:14092   */\n      dup3\n        /* \"#utility.yul\":14075:14084   */\n      dup6\n        /* \"#utility.yul\":14071:14093   */\n      add\n        /* \"#utility.yul\":14039:14099   */\n      tag_73\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":14030:14036   */\n      0x0120\n        /* \"#utility.yul\":14023:14028   */\n      dup4\n        /* \"#utility.yul\":14019:14037   */\n      add\n        /* \"#utility.yul\":14012:14100   */\n      mstore\n        /* \"#utility.yul\":13942:14111   */\n      pop\n        /* \"#utility.yul\":12022:14118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14124:14524   */\n    tag_43:\n        /* \"#utility.yul\":14218:14224   */\n      0x00\n        /* \"#utility.yul\":14267:14270   */\n      0x0200\n        /* \"#utility.yul\":14255:14264   */\n      dup3\n        /* \"#utility.yul\":14246:14253   */\n      dup5\n        /* \"#utility.yul\":14242:14265   */\n      sub\n        /* \"#utility.yul\":14238:14271   */\n      slt\n        /* \"#utility.yul\":14235:14355   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":14274:14353   */\n      tag_249\n      tag_70\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":14235:14355   */\n    tag_248:\n        /* \"#utility.yul\":14394:14395   */\n      0x00\n        /* \"#utility.yul\":14419:14507   */\n      tag_250\n        /* \"#utility.yul\":14499:14506   */\n      dup5\n        /* \"#utility.yul\":14490:14496   */\n      dup3\n        /* \"#utility.yul\":14479:14488   */\n      dup6\n        /* \"#utility.yul\":14475:14497   */\n      add\n        /* \"#utility.yul\":14419:14507   */\n      tag_95\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":14409:14507   */\n      swap2\n      pop\n        /* \"#utility.yul\":14365:14517   */\n      pop\n        /* \"#utility.yul\":14124:14524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c834132b780ab9c99514e99f819d0a9bb4ade2ef70a9fa9a5ebdbad2d554cd9f64736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"array_dataslot_t_bytes_storage": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_bytes_storage": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5222:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "76:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "92:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:4",
														"type": ""
													}
												],
												"src": "7:98:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "139:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "156:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "159:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "149:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "149:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "149:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "253:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "246:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "246:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "277:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "270:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "270:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "111:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "325:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "335:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "442:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "432:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "432:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "432:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "463:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "466:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "297:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "534:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "544:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "558:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "564:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "554:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "575:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "605:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "601:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "579:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "652:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "666:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "680:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "688:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "676:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "676:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "666:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "632:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "625:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:26:4"
															},
															"nodeType": "YulIf",
															"src": "622:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "755:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "769:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "719:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "742:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "750:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "739:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "739:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "716:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:38:4"
															},
															"nodeType": "YulIf",
															"src": "713:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "518:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "527:6:4",
														"type": ""
													}
												],
												"src": "483:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "862:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "872:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "880:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "872:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "900:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "903:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "893:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "893:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "893:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "916:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "924:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "916:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "849:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "857:4:4",
														"type": ""
													}
												],
												"src": "809:140:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "999:49:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1009:33:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1027:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1034:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1039:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1019:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1019:23:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1009:6:4"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "982:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "992:6:4",
														"type": ""
													}
												],
												"src": "955:93:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1107:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1117:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1142:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1148:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1138:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1117:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1082:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1088:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1098:8:4",
														"type": ""
													}
												],
												"src": "1054:107:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:317:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1253:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1274:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1286:1:4",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1270:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1270:18:4"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1257:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1297:109:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1328:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1339:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1309:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:97:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1301:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1415:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:4"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1457:8:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1427:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1427:39:4"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1415:8:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1475:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1488:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1499:4:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1495:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1495:9:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1475:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1514:40:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1527:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1538:8:4"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1548:4:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1534:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:19:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1524:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:30:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1514:6:4"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1204:5:4",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1211:10:4",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1223:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1236:6:4",
														"type": ""
													}
												],
												"src": "1167:393:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1611:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1621:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1632:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1621:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1593:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1603:7:4",
														"type": ""
													}
												],
												"src": "1566:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1681:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1691:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1698:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1691:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1667:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1677:3:4",
														"type": ""
													}
												],
												"src": "1649:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1775:82:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1785:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1816:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1798:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1785:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1755:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1765:9:4",
														"type": ""
													}
												],
												"src": "1715:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1910:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1920:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1927:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1920:3:4"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1896:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1906:3:4",
														"type": ""
													}
												],
												"src": "1863:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2020:193:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2030:63:4",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2085:7:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2054:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:39:4"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2034:16:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2109:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2149:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2143:5:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2143:11:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2156:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2188:16:4"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2164:23:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:41:4"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2115:27:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2115:91:4"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2102:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:105:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2102:105:4"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1997:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2003:6:4",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2011:7:4",
														"type": ""
													}
												],
												"src": "1944:269:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2268:24:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2278:8:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2285:1:4",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:4"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2264:3:4",
														"type": ""
													}
												],
												"src": "2219:73:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:136:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2361:46:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2375:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2375:32:4"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2365:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2460:4:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2466:6:4"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2474:6:4"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2416:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2416:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2416:65:4"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2337:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2343:6:4",
														"type": ""
													}
												],
												"src": "2298:189:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2543:136:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2610:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2654:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2661:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2624:29:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2624:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2563:5:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2570:3:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2560:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2560:14:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2575:26:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2577:22:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2590:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2597:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2586:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2586:13:4"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2557:2:4",
																"statements": []
															},
															"src": "2553:120:4"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2531:5:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2538:3:4",
														"type": ""
													}
												],
												"src": "2493:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:463:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2789:430:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2803:53:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2850:5:4"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_bytes_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2819:30:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2819:37:4"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2807:8:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2869:63:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2892:8:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2920:10:4"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2902:17:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2902:29:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2888:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2888:44:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2873:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3089:27:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3091:23:4",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3106:8:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3091:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3073:10:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3085:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3070:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3070:18:4"
																		},
																		"nodeType": "YulIf",
																		"src": "3067:49:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3158:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3175:8:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3203:3:4"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3185:17:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3185:22:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3171:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3171:37:4"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3129:28:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3129:80:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3129:80:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2780:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2785:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2777:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:11:4"
															},
															"nodeType": "YulIf",
															"src": "2774:445:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2739:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2746:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2751:10:4",
														"type": ""
													}
												],
												"src": "2685:541:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3295:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3305:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3330:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3336:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3326:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3326:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3305:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3270:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3276:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3286:8:4",
														"type": ""
													}
												],
												"src": "3232:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3406:118:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3416:68:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3465:1:4",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3468:5:4"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3461:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3461:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3480:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3476:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3476:6:4"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3432:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3432:51:4"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3428:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3428:56:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3420:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3493:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3507:4:4"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3513:4:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3503:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:15:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3493:6:4"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3383:4:4",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3389:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3399:6:4",
														"type": ""
													}
												],
												"src": "3355:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3610:214:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3743:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3770:4:4"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3776:3:4"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3751:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3751:29:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3743:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3789:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3800:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3810:1:4",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3813:3:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3806:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3806:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3797:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:21:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3789:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3591:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3597:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3605:4:4",
														"type": ""
													}
												],
												"src": "3529:295:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3919:1300:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3930:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3976:3:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3944:31:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3944:36:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3934:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4065:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4067:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4067:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4067:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4037:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4034:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4034:30:4"
															},
															"nodeType": "YulIf",
															"src": "4031:56:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4097:52:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4143:4:4"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4137:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4137:11:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4111:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:38:4"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4101:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4241:4:4"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4247:6:4"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_bytes_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4196:44:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:66:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:66:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4272:18:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4289:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4276:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4300:17:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4313:4:4",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4300:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4364:610:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4378:37:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4397:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4409:4:4",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4405:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4405:9:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4393:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4393:22:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4382:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4429:50:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4474:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_bytes_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4443:30:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4443:36:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4433:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4492:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4501:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4496:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4560:163:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4585:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4603:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4608:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4599:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4599:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4593:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4593:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4578:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4578:42:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4578:42:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4637:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4651:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4659:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4647:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4647:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4637:6:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4678:31:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4695:9:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4706:2:4",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4691:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4691:18:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4678:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4526:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4529:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4523:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4523:14:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4538:21:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4540:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4549:1:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4552:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4545:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4545:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4540:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4519:3:4",
																					"statements": []
																				},
																				"src": "4515:208:4"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4759:156:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4777:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4804:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4809:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4800:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4800:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4794:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4794:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4781:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4844:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4871:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4886:6:4"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4894:4:4",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4882:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4882:17:4"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4852:18:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4852:48:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4837:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4837:64:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4837:64:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4742:7:4"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4751:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4739:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4739:19:4"
																				},
																				"nodeType": "YulIf",
																				"src": "4736:179:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4935:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4949:6:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4957:1:4",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4945:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4945:14:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4961:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4941:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4941:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4928:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4928:36:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4928:36:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4357:617:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4362:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4991:222:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5005:14:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5018:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5009:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5042:67:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5060:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5079:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5084:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5075:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5075:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5069:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5060:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5035:6:4"
																				},
																				"nodeType": "YulIf",
																				"src": "5032:77:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5129:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5188:5:4"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5195:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5135:52:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5135:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5122:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5122:81:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5122:81:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4983:230:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4337:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4345:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4334:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4334:14:4"
															},
															"nodeType": "YulSwitch",
															"src": "4327:886:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3908:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3914:3:4",
														"type": ""
													}
												],
												"src": "3829:1390:4"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527360e6140330f8fe31e785190f39c1b5e5e833c2a96000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5945535f4f525f4e4f5f515545525900000000000000000000000000000000006001556040518060600160405280602c815260200162000fc7602c913960029081620000a691906200033a565b506000600355348015620000b957600080fd5b5062000421565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014257607f821691505b602082108103620001585762000157620000fa565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001c27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000183565b620001ce868362000183565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200021b620002156200020f84620001e6565b620001f0565b620001e6565b9050919050565b6000819050919050565b6200023783620001fa565b6200024f620002468262000222565b84845462000190565b825550505050565b600090565b6200026662000257565b620002738184846200022c565b505050565b5b818110156200029b576200028f6000826200025c565b60018101905062000279565b5050565b601f821115620002ea57620002b4816200015e565b620002bf8462000173565b81016020851015620002cf578190505b620002e7620002de8562000173565b83018262000278565b50505b505050565b600082821c905092915050565b60006200030f60001984600802620002ef565b1980831691505092915050565b60006200032a8383620002fc565b9150826002028217905092915050565b6200034582620000c0565b67ffffffffffffffff811115620003615762000360620000cb565b5b6200036d825462000129565b6200037a8282856200029f565b600060209050601f831160018114620003b257600084156200039d578287015190505b620003a985826200031c565b86555062000419565b601f198416620003c2866200015e565b60005b82811015620003ec57848901518255600182019150602085019450602081019050620003c5565b868310156200040c578489015162000408601f891682620002fc565b8355505b6001600288020188555050505b505050505050565b610b9680620004316000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063606deecd14610051578063655990571461005b578063f25ffb2014610079578063fa77615214610097575b600080fd5b6100596100a1565b005b610063610207565b6040516100709190610481565b60405180910390f35b610081610295565b60405161008e91906104bc565b60405180910390f35b61009f610347565b005b42600381905550600073e6b8a5cf854791412c1f6efc7caf629f5df1c74790506000808054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311df92f1600154600354600286866040518663ffffffff1660e01b8152600401610128959493929190610681565b6020604051808303816000875af1158015610147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016b9190610716565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663473c45fe6001546003546002601e6040518563ffffffff1660e01b81526004016101d1949392919061077e565b600060405180830381600087803b1580156101eb57600080fd5b505af11580156101ff573d6000803e3d6000fd5b505050505050565b6002805461021490610538565b80601f016020809104026020016040519081016040528092919081815260200182805461024090610538565b801561028d5780601f106102625761010080835404028352916020019161028d565b820191906000526020600020905b81548152906001019060200180831161027057829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9904f9b3060015460035460026040518563ffffffff1660e01b81526004016102fc94939291906107eb565b61020060405180830381865afa15801561031a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033e9190610b32565b60c00151905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635e9a79a93060015460035460026040518563ffffffff1660e01b81526004016103ab94939291906107eb565b6020604051808303816000875af11580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee9190610716565b50565b600081519050919050565b600082825260208201905092915050565b60005b8381101561042b578082015181840152602081019050610410565b60008484015250505050565b6000601f19601f8301169050919050565b6000610453826103f1565b61045d81856103fc565b935061046d81856020860161040d565b61047681610437565b840191505092915050565b6000602082019050818103600083015261049b8184610448565b905092915050565b6000819050919050565b6104b6816104a3565b82525050565b60006020820190506104d160008301846104ad565b92915050565b6000819050919050565b6104ea816104d7565b82525050565b6000819050919050565b610503816104f0565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061055057607f821691505b60208210810361056357610562610509565b5b50919050565b60008190508160005260206000209050919050565b6000815461058b81610538565b61059581866103fc565b945060018216600081146105b057600181146105c6576105f9565b60ff1983168652811515602002860193506105f9565b6105cf85610569565b60005b838110156105f1578154818901526001820191506020810190506105d2565b808801955050505b50505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061064761064261063d84610602565b610622565b610602565b9050919050565b60006106598261062c565b9050919050565b600061066b8261064e565b9050919050565b61067b81610660565b82525050565b600060a08201905061069660008301886104e1565b6106a360208301876104fa565b81810360408301526106b5818661057e565b90506106c46060830185610672565b6106d160808301846104fa565b9695505050505050565b6000604051905090565b600080fd5b6106f3816104f0565b81146106fe57600080fd5b50565b600081519050610710816106ea565b92915050565b60006020828403121561072c5761072b6106e5565b5b600061073a84828501610701565b91505092915050565b6000819050919050565b600061076861076361075e84610743565b610622565b6104f0565b9050919050565b6107788161074d565b82525050565b600060808201905061079360008301876104e1565b6107a060208301866104fa565b81810360408301526107b2818561057e565b90506107c1606083018461076f565b95945050505050565b60006107d582610602565b9050919050565b6107e5816107ca565b82525050565b600060808201905061080060008301876107dc565b61080d60208301866104e1565b61081a60408301856104fa565b818103606083015261082c818461057e565b905095945050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61087482610437565b810181811067ffffffffffffffff821117156108935761089261083c565b5b80604052505050565b60006108a66106db565b90506108b2828261086b565b919050565b6108c0816107ca565b81146108cb57600080fd5b50565b6000815190506108dd816108b7565b92915050565b60006108ee826107ca565b9050919050565b6108fe816108e3565b811461090957600080fd5b50565b60008151905061091b816108f5565b92915050565b60008115159050919050565b61093681610921565b811461094157600080fd5b50565b6000815190506109538161092d565b92915050565b600060e0828403121561096f5761096e610837565b5b61097960e061089c565b9050600061098984828501610944565b600083015250602061099d84828501610944565b60208301525060406109b184828501610944565b60408301525060606109c584828501610944565b60608301525060806109d984828501610944565b60808301525060a06109ed84828501610701565b60a08301525060c0610a0184828501610701565b60c08301525092915050565b610a16816104a3565b8114610a2157600080fd5b50565b600081519050610a3381610a0d565b92915050565b60006102008284031215610a5057610a4f610837565b5b610a5b61014061089c565b90506000610a6b848285016108ce565b6000830152506020610a7f848285016108ce565b6020830152506040610a938482850161090c565b6040830152506060610aa784828501610944565b6060830152506080610abb84828501610959565b608083015250610160610ad084828501610a24565b60a083015250610180610ae584828501610a24565b60c0830152506101a0610afa84828501610701565b60e0830152506101c0610b0f84828501610701565b610100830152506101e0610b2584828501610701565b6101208301525092915050565b60006102008284031215610b4957610b486106e5565b5b6000610b5784828501610a39565b9150509291505056fea2646970667358221220c834132b780ab9c99514e99f819d0a9bb4ade2ef70a9fa9a5ebdbad2d554cd9f64736f6c63430008100033513a57696c6c206974207261696e20746f6461793f20413a3120666f72207965732e203020666f72206e6f2e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x60E6140330F8FE31E785190F39C1B5E5E833C2A9 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x5945535F4F525F4E4F5F51554552590000000000000000000000000000000000 PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xFC7 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x2 SWAP1 DUP2 PUSH3 0xA6 SWAP2 SWAP1 PUSH3 0x33A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x421 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x142 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x158 JUMPI PUSH3 0x157 PUSH3 0xFA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1C2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x183 JUMP JUMPDEST PUSH3 0x1CE DUP7 DUP4 PUSH3 0x183 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x21B PUSH3 0x215 PUSH3 0x20F DUP5 PUSH3 0x1E6 JUMP JUMPDEST PUSH3 0x1F0 JUMP JUMPDEST PUSH3 0x1E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x237 DUP4 PUSH3 0x1FA JUMP JUMPDEST PUSH3 0x24F PUSH3 0x246 DUP3 PUSH3 0x222 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x190 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x266 PUSH3 0x257 JUMP JUMPDEST PUSH3 0x273 DUP2 DUP5 DUP5 PUSH3 0x22C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x29B JUMPI PUSH3 0x28F PUSH1 0x0 DUP3 PUSH3 0x25C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x279 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2EA JUMPI PUSH3 0x2B4 DUP2 PUSH3 0x15E JUMP JUMPDEST PUSH3 0x2BF DUP5 PUSH3 0x173 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2CF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2E7 PUSH3 0x2DE DUP6 PUSH3 0x173 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x278 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2EF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x32A DUP4 DUP4 PUSH3 0x2FC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x345 DUP3 PUSH3 0xC0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x361 JUMPI PUSH3 0x360 PUSH3 0xCB JUMP JUMPDEST JUMPDEST PUSH3 0x36D DUP3 SLOAD PUSH3 0x129 JUMP JUMPDEST PUSH3 0x37A DUP3 DUP3 DUP6 PUSH3 0x29F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3B2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x39D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x3A9 DUP6 DUP3 PUSH3 0x31C JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x419 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3C2 DUP7 PUSH3 0x15E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3EC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3C5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x40C JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x408 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x2FC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB96 DUP1 PUSH3 0x431 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x606DEECD EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x65599057 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xF25FFB20 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xFA776152 EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x347 JUMP JUMPDEST STOP JUMPDEST TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xE6B8A5CF854791412C1F6EFC7CAF629F5DF1C747 SWAP1 POP PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x11DF92F1 PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x147 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x473C45FE PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 PUSH1 0x1E PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x214 SWAP1 PUSH2 0x538 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x240 SWAP1 PUSH2 0x538 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x262 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x270 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9904F9B ADDRESS PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x200 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0xC0 ADD MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5E9A79A9 ADDRESS PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x42B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x410 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x453 DUP3 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x45D DUP2 DUP6 PUSH2 0x3FC JUMP JUMPDEST SWAP4 POP PUSH2 0x46D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40D JUMP JUMPDEST PUSH2 0x476 DUP2 PUSH2 0x437 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49B DUP2 DUP5 PUSH2 0x448 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B6 DUP2 PUSH2 0x4A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EA DUP2 PUSH2 0x4D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x503 DUP2 PUSH2 0x4F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x550 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x563 JUMPI PUSH2 0x562 PUSH2 0x509 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x58B DUP2 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x595 DUP2 DUP7 PUSH2 0x3FC JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x5B0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x5C6 JUMPI PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x5CF DUP6 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5F1 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5D2 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x647 PUSH2 0x642 PUSH2 0x63D DUP5 PUSH2 0x602 JUMP JUMPDEST PUSH2 0x622 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x659 DUP3 PUSH2 0x62C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66B DUP3 PUSH2 0x64E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x67B DUP2 PUSH2 0x660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x696 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x6A3 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x4FA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x6B5 DUP2 DUP7 PUSH2 0x57E JUMP JUMPDEST SWAP1 POP PUSH2 0x6C4 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x672 JUMP JUMPDEST PUSH2 0x6D1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4FA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F3 DUP2 PUSH2 0x4F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x710 DUP2 PUSH2 0x6EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x6E5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 PUSH2 0x763 PUSH2 0x75E DUP5 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x622 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x778 DUP2 PUSH2 0x74D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x793 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x7A0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4FA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x7B2 DUP2 DUP6 PUSH2 0x57E JUMP JUMPDEST SWAP1 POP PUSH2 0x7C1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x76F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D5 DUP3 PUSH2 0x602 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E5 DUP2 PUSH2 0x7CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x800 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x80D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x81A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4FA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x82C DUP2 DUP5 PUSH2 0x57E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x874 DUP3 PUSH2 0x437 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x893 JUMPI PUSH2 0x892 PUSH2 0x83C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 PUSH2 0x6DB JUMP JUMPDEST SWAP1 POP PUSH2 0x8B2 DUP3 DUP3 PUSH2 0x86B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C0 DUP2 PUSH2 0x7CA JUMP JUMPDEST DUP2 EQ PUSH2 0x8CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8DD DUP2 PUSH2 0x8B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EE DUP3 PUSH2 0x7CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FE DUP2 PUSH2 0x8E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x91B DUP2 PUSH2 0x8F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x936 DUP2 PUSH2 0x921 JUMP JUMPDEST DUP2 EQ PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x953 DUP2 PUSH2 0x92D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96F JUMPI PUSH2 0x96E PUSH2 0x837 JUMP JUMPDEST JUMPDEST PUSH2 0x979 PUSH1 0xE0 PUSH2 0x89C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x989 DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x99D DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x9B1 DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x9C5 DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x9D9 DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x9ED DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0xA01 DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA16 DUP2 PUSH2 0x4A3 JUMP JUMPDEST DUP2 EQ PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA33 DUP2 PUSH2 0xA0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA50 JUMPI PUSH2 0xA4F PUSH2 0x837 JUMP JUMPDEST JUMPDEST PUSH2 0xA5B PUSH2 0x140 PUSH2 0x89C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA6B DUP5 DUP3 DUP6 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xA7F DUP5 DUP3 DUP6 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xA93 DUP5 DUP3 DUP6 ADD PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xAA7 DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xABB DUP5 DUP3 DUP6 ADD PUSH2 0x959 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0xAD0 DUP5 DUP3 DUP6 ADD PUSH2 0xA24 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0xAE5 DUP5 DUP3 DUP6 ADD PUSH2 0xA24 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH2 0x1A0 PUSH2 0xAFA DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x1C0 PUSH2 0xB0F DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x1E0 PUSH2 0xB25 DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB49 JUMPI PUSH2 0xB48 PUSH2 0x6E5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB57 DUP5 DUP3 DUP6 ADD PUSH2 0xA39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 CALLVALUE SGT 0x2B PUSH25 0xAB9C99514E99F819D0A9BB4ADE2EF70A9FA9A5EBDBAD2D554 0xCD SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER MLOAD GASPRICE JUMPI PUSH10 0x6C6C206974207261696E KECCAK256 PUSH21 0x6F6461793F20413A3120666F72207965732E203020 PUSH7 0x6F72206E6F2E00 ",
							"sourceMap": "516:2122:1:-:0;;;694:42;633:104;;;;;;;;;;;;;;;;;;;;865:26;844:47;;1188:53;;;;;;;;;;;;;;;;;1151:90;;;;;;;:::i;:::-;;1270:1;1248:23;;516:2122;;;;;;;;;;;;7:98:4;58:6;92:5;86:12;76:22;;7:98;;;:::o;111:180::-;159:77;156:1;149:88;256:4;253:1;246:15;280:4;277:1;270:15;297:180;345:77;342:1;335:88;442:4;439:1;432:15;466:4;463:1;456:15;483:320;527:6;564:1;558:4;554:12;544:22;;611:1;605:4;601:12;632:18;622:81;;688:4;680:6;676:17;666:27;;622:81;750:2;742:6;739:14;719:18;716:38;713:84;;769:18;;:::i;:::-;713:84;534:269;483:320;;;:::o;809:140::-;857:4;880:3;872:11;;903:3;900:1;893:14;937:4;934:1;924:18;916:26;;809:140;;;:::o;955:93::-;992:6;1039:2;1034;1027:5;1023:14;1019:23;1009:33;;955:93;;;:::o;1054:107::-;1098:8;1148:5;1142:4;1138:16;1117:37;;1054:107;;;;:::o;1167:393::-;1236:6;1286:1;1274:10;1270:18;1309:97;1339:66;1328:9;1309:97;:::i;:::-;1427:39;1457:8;1446:9;1427:39;:::i;:::-;1415:51;;1499:4;1495:9;1488:5;1484:21;1475:30;;1548:4;1538:8;1534:19;1527:5;1524:30;1514:40;;1243:317;;1167:393;;;;;:::o;1566:77::-;1603:7;1632:5;1621:16;;1566:77;;;:::o;1649:60::-;1677:3;1698:5;1691:12;;1649:60;;;:::o;1715:142::-;1765:9;1798:53;1816:34;1825:24;1843:5;1825:24;:::i;:::-;1816:34;:::i;:::-;1798:53;:::i;:::-;1785:66;;1715:142;;;:::o;1863:75::-;1906:3;1927:5;1920:12;;1863:75;;;:::o;1944:269::-;2054:39;2085:7;2054:39;:::i;:::-;2115:91;2164:41;2188:16;2164:41;:::i;:::-;2156:6;2149:4;2143:11;2115:91;:::i;:::-;2109:4;2102:105;2020:193;1944:269;;;:::o;2219:73::-;2264:3;2219:73;:::o;2298:189::-;2375:32;;:::i;:::-;2416:65;2474:6;2466;2460:4;2416:65;:::i;:::-;2351:136;2298:189;;:::o;2493:186::-;2553:120;2570:3;2563:5;2560:14;2553:120;;;2624:39;2661:1;2654:5;2624:39;:::i;:::-;2597:1;2590:5;2586:13;2577:22;;2553:120;;;2493:186;;:::o;2685:541::-;2785:2;2780:3;2777:11;2774:445;;;2819:37;2850:5;2819:37;:::i;:::-;2902:29;2920:10;2902:29;:::i;:::-;2892:8;2888:44;3085:2;3073:10;3070:18;3067:49;;;3106:8;3091:23;;3067:49;3129:80;3185:22;3203:3;3185:22;:::i;:::-;3175:8;3171:37;3158:11;3129:80;:::i;:::-;2789:430;;2774:445;2685:541;;;:::o;3232:117::-;3286:8;3336:5;3330:4;3326:16;3305:37;;3232:117;;;;:::o;3355:169::-;3399:6;3432:51;3480:1;3476:6;3468:5;3465:1;3461:13;3432:51;:::i;:::-;3428:56;3513:4;3507;3503:15;3493:25;;3406:118;3355:169;;;;:::o;3529:295::-;3605:4;3751:29;3776:3;3770:4;3751:29;:::i;:::-;3743:37;;3813:3;3810:1;3806:11;3800:4;3797:21;3789:29;;3529:295;;;;:::o;3829:1390::-;3944:36;3976:3;3944:36;:::i;:::-;4045:18;4037:6;4034:30;4031:56;;;4067:18;;:::i;:::-;4031:56;4111:38;4143:4;4137:11;4111:38;:::i;:::-;4196:66;4255:6;4247;4241:4;4196:66;:::i;:::-;4289:1;4313:4;4300:17;;4345:2;4337:6;4334:14;4362:1;4357:617;;;;5018:1;5035:6;5032:77;;;5084:9;5079:3;5075:19;5069:26;5060:35;;5032:77;5135:67;5195:6;5188:5;5135:67;:::i;:::-;5129:4;5122:81;4991:222;4327:886;;4357:617;4409:4;4405:9;4397:6;4393:22;4443:36;4474:4;4443:36;:::i;:::-;4501:1;4515:208;4529:7;4526:1;4523:14;4515:208;;;4608:9;4603:3;4599:19;4593:26;4585:6;4578:42;4659:1;4651:6;4647:14;4637:24;;4706:2;4695:9;4691:18;4678:31;;4552:4;4549:1;4545:12;4540:17;;4515:208;;;4751:6;4742:7;4739:19;4736:179;;;4809:9;4804:3;4800:19;4794:26;4852:48;4894:4;4886:6;4882:17;4871:9;4852:48;:::i;:::-;4844:6;4837:64;4759:156;4736:179;4961:1;4957;4949:6;4945:14;4941:22;4935:4;4928:36;4364:610;;;4327:886;;3919:1300;;;3829:1390;;:::o;516:2122:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ancillaryData_98": {
									"entryPoint": 519,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getSettledData_174": {
									"entryPoint": 661,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@requestData_140": {
									"entryPoint": 161,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@settleRequest_156": {
									"entryPoint": 839,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 2316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 2596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_RequestSettings_$291_memory_ptr_fromMemory": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_Request_$314_memory_ptr_fromMemory": {
									"entryPoint": 2617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_Request_$314_memory_ptr_fromMemory": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_30_by_1_to_t_uint256_fromStack": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes_storage__to_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256_t_bytes_storage_t_contract$_IERC20_$77_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256_t_bytes_storage_t_rational_30_by_1__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_storage": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$77": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 1187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_30_by_1": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_30_by_1_to_t_uint256": {
									"entryPoint": 1869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1037,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 2103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$77": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14527:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "76:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "92:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:4",
														"type": ""
													}
												],
												"src": "7:98:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "206:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "223:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "228:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "216:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "216:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "216:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "244:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "263:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "268:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "259:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "259:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "244:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "178:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "183:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "194:11:4",
														"type": ""
													}
												],
												"src": "111:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "357:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "366:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "361:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "426:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "451:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "456:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "447:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "447:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "470:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "475:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "466:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "466:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "460:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "460:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "440:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "440:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "440:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "390:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "384:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "398:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "400:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "409:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "412:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "405:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "405:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "400:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "380:3:4",
																"statements": []
															},
															"src": "376:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "509:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "514:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "505:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "505:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "523:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "498:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "498:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "498:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "329:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "334:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "339:6:4",
														"type": ""
													}
												],
												"src": "285:246:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "585:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "595:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "613:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "620:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "629:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "625:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "625:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "568:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "578:6:4",
														"type": ""
													}
												],
												"src": "537:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:283:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "745:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "791:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "759:31:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "759:38:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "749:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "806:77:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "871:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "876:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "813:57:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:70:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "806:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "931:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "938:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "927:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "945:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "950:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "892:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "892:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "966:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "977:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1004:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "982:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "982:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "973:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "973:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "966:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "723:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "731:3:4",
														"type": ""
													}
												],
												"src": "645:373:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1140:193:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1150:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1162:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1173:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1158:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1158:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1150:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1197:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1208:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1193:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1193:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1216:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1222:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1212:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1212:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1186:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1242:84:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1312:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1321:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1250:61:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1250:76:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1242:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1124:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1135:4:4",
														"type": ""
													}
												],
												"src": "1024:309:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1383:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1393:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1404:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1393:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1365:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1375:7:4",
														"type": ""
													}
												],
												"src": "1339:76:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1484:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1501:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1523:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "1506:16:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1506:23:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:36:4"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1472:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1479:3:4",
														"type": ""
													}
												],
												"src": "1421:115:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1638:122:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1648:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1660:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1671:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1656:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1648:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1739:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1750:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1735:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1735:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1684:41:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:69:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1684:69:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1610:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1622:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1633:4:4",
														"type": ""
													}
												],
												"src": "1542:218:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1811:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1821:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1832:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1821:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1793:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1803:7:4",
														"type": ""
													}
												],
												"src": "1766:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1914:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1931:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1954:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "1936:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1936:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1924:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1924:37:4"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1902:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1909:3:4",
														"type": ""
													}
												],
												"src": "1849:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2039:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2028:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2000:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2010:7:4",
														"type": ""
													}
												],
												"src": "1973:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2121:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2138:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2161:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2143:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2109:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2116:3:4",
														"type": ""
													}
												],
												"src": "2056:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2225:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2322:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2315:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2346:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2349:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2339:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2339:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2180:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2417:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2427:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2441:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2447:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2437:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2437:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2427:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2458:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2488:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2494:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2484:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2484:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2462:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2535:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2549:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2563:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2571:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2559:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2559:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2549:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2515:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2508:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:26:4"
															},
															"nodeType": "YulIf",
															"src": "2505:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2638:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2652:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2652:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2652:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2602:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2625:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2633:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2622:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2622:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2599:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2599:38:4"
															},
															"nodeType": "YulIf",
															"src": "2596:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2401:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2410:6:4",
														"type": ""
													}
												],
												"src": "2366:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2745:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2755:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2763:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2755:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2783:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2786:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2776:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2776:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2799:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2817:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2820:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2807:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2807:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2799:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2732:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2740:4:4",
														"type": ""
													}
												],
												"src": "2692:140:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2947:740:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2957:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2980:5:4"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "2974:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:12:4"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "2961:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2995:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "3035:9:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "3009:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3009:36:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2999:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3054:77:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3119:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3124:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3061:57:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3061:70:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3054:3:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3180:157:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3233:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "3242:9:4"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3257:4:4",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "3253:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3253:9:4"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "3238:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3238:25:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "3226:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3226:38:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3226:38:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3277:50:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3288:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3297:4:4",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nodeType": "YulIdentifier",
																													"src": "3317:6:4"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "3310:6:4"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3310:14:4"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "3303:6:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3303:22:4"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "3293:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3293:33:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3284:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3284:43:4"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "3277:3:4"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3173:164:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3178:1:4",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3353:328:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3398:52:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "3444:5:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_bytes_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3413:30:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3413:37:4"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "3402:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3463:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3472:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3467:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3530:110:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "3559:3:4"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "3564:1:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3555:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3555:11:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "3574:7:4"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "3568:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3568:14:4"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "3548:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3548:35:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3548:35:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3600:26:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "3615:7:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3624:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3611:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3611:15:4"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "3600:7:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3497:1:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3500:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3494:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3494:13:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3508:21:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3510:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3519:1:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3522:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3515:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3515:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3510:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3490:3:4",
																					"statements": []
																				},
																				"src": "3486:154:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3653:18:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3664:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3669:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3660:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3660:11:4"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "3653:3:4"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3346:335:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3351:1:4",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "3151:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3162:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:17:4"
															},
															"nodeType": "YulSwitch",
															"src": "3140:541:4"
														}
													]
												},
												"name": "abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2928:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2935:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2943:3:4",
														"type": ""
													}
												],
												"src": "2860:827:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3738:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3748:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3763:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3770:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3759:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3748:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3720:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3730:7:4",
														"type": ""
													}
												],
												"src": "3693:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3857:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3867:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3874:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3867:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3843:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3853:3:4",
														"type": ""
													}
												],
												"src": "3825:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3951:82:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3961:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4019:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4001:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4001:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3992:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3992:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3974:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3974:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3961:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3931:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3941:9:4",
														"type": ""
													}
												],
												"src": "3891:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4099:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4109:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4153:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4122:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4109:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4079:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4089:9:4",
														"type": ""
													}
												],
												"src": "4039:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4244:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4254:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4298:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4267:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4267:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4254:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4224:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4234:9:4",
														"type": ""
													}
												],
												"src": "4171:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4394:79:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4411:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4460:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4416:43:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4416:50:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4404:63:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4404:63:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4382:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4389:3:4",
														"type": ""
													}
												],
												"src": "4316:157:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4717:533:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4727:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4739:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4750:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4727:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4808:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4821:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4832:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4817:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4817:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4764:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4764:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4889:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4902:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4913:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4898:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4898:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4845:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4938:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4949:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4934:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4934:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4958:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4964:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4954:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4954:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4927:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4927:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4927:48:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4984:81:4",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5051:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5060:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4992:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:73:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4984:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5132:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5145:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5156:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5141:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5141:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5075:56:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5075:85:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5075:85:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5214:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5227:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5238:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5223:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5223:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5170:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:73:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5170:73:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256_t_bytes_storage_t_contract$_IERC20_$77_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4657:9:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4669:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4677:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4685:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4693:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4701:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4712:4:4",
														"type": ""
													}
												],
												"src": "4479:771:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5296:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5306:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5322:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5316:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5316:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5306:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5289:6:4",
														"type": ""
													}
												],
												"src": "5256:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5426:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5443:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5446:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5436:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5436:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5436:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5337:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5549:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5569:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5559:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5559:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5559:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5460:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5626:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5683:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5692:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5695:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5685:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5685:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5685:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5649:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5674:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5656:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5656:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5646:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5646:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5639:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5639:43:4"
															},
															"nodeType": "YulIf",
															"src": "5636:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5619:5:4",
														"type": ""
													}
												],
												"src": "5583:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5774:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5784:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5799:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5793:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5793:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5784:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5842:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5815:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5815:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5815:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5752:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5760:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5768:5:4",
														"type": ""
													}
												],
												"src": "5711:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5937:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5983:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5985:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5985:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5985:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5958:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5967:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5954:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5954:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5979:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:32:4"
															},
															"nodeType": "YulIf",
															"src": "5947:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "6076:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6091:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6095:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6120:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6166:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6177:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6162:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6162:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6186:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6130:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6130:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6120:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5907:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5918:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5930:6:4",
														"type": ""
													}
												],
												"src": "5860:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6271:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6281:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6292:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6281:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_30_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6253:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6263:7:4",
														"type": ""
													}
												],
												"src": "6217:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6378:91:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6388:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6455:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_30_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "6428:26:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6428:33:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6419:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6419:43:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6401:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6401:62:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6388:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_30_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6358:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6368:9:4",
														"type": ""
													}
												],
												"src": "6309:160:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6549:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6566:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6611:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_30_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6571:39:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6571:46:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6559:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6559:59:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6559:59:4"
														}
													]
												},
												"name": "abi_encode_t_rational_30_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6537:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6544:3:4",
														"type": ""
													}
												],
												"src": "6475:149:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6836:446:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6846:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6858:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6869:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6854:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6854:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6846:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6927:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6940:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6951:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6936:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6936:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6883:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6883:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6883:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7008:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7021:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7032:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7017:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7017:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6964:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6964:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7057:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7068:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7053:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7053:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7077:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7083:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7073:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7073:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7046:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7046:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7046:48:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7103:81:4",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7170:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7179:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7111:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7111:73:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7103:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7247:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7260:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7271:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7256:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7256:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_30_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7194:52:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:81:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7194:81:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256_t_bytes_storage_t_rational_30_by_1__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6784:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6796:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6804:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6812:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6820:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6831:4:4",
														"type": ""
													}
												],
												"src": "6630:652:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7333:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7343:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7372:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7354:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7354:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7343:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7315:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7325:7:4",
														"type": ""
													}
												],
												"src": "7288:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7455:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7472:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7495:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7477:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7477:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7465:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7465:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7465:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7443:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7450:3:4",
														"type": ""
													}
												],
												"src": "7390:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7711:437:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7721:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7733:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7744:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7729:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7729:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7721:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7802:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7815:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7826:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7811:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7811:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7758:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7758:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7758:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7883:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7896:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7907:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7839:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7839:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7839:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7965:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7978:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7989:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7974:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7974:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7921:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7921:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8014:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8025:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8010:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8010:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8034:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8040:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8030:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8030:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8003:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8003:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8003:48:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8060:81:4",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8127:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8136:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8068:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8068:73:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8060:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes_storage__to_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7659:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7671:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7679:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7687:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7695:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7706:4:4",
														"type": ""
													}
												],
												"src": "7514:634:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8243:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8260:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8263:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8253:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8253:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8253:12:4"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "8154:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8305:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8322:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8325:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8315:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8315:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8315:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8419:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8422:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8412:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8412:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8412:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8443:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8446:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8436:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8436:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8436:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8277:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8506:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8516:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8538:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "8568:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8546:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8546:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8534:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8534:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8520:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8685:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8687:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8687:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8687:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8628:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8640:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8625:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8625:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8664:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8676:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8661:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8661:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8622:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8622:62:4"
															},
															"nodeType": "YulIf",
															"src": "8619:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8723:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8727:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8716:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8716:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8716:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8492:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8500:4:4",
														"type": ""
													}
												],
												"src": "8463:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8791:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8801:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "8811:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8811:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8801:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8860:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8868:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "8840:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8840:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8840:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8775:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8784:6:4",
														"type": ""
													}
												],
												"src": "8750:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8974:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8991:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8994:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8984:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8984:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8984:12:4"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "8885:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9051:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9108:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9117:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9120:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9110:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9110:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9110:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9074:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9099:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9081:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9081:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9071:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9071:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9064:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9064:43:4"
															},
															"nodeType": "YulIf",
															"src": "9061:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9044:5:4",
														"type": ""
													}
												],
												"src": "9008:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9199:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9209:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9224:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9218:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9218:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9209:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9267:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "9240:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9240:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9240:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9177:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9185:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9193:5:4",
														"type": ""
													}
												],
												"src": "9136:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9343:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9353:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9382:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "9364:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9364:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9353:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9325:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9335:7:4",
														"type": ""
													}
												],
												"src": "9285:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9456:92:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9526:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9535:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9538:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9528:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9528:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9528:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9479:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9517:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$77",
																					"nodeType": "YulIdentifier",
																					"src": "9486:30:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9486:37:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9476:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9476:48:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9469:56:4"
															},
															"nodeType": "YulIf",
															"src": "9466:76:4"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9449:5:4",
														"type": ""
													}
												],
												"src": "9400:148:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9630:93:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9640:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9655:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9649:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9649:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9640:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9711:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$77",
																	"nodeType": "YulIdentifier",
																	"src": "9671:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9671:46:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9671:46:4"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9608:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9616:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9624:5:4",
														"type": ""
													}
												],
												"src": "9554:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9771:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9781:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9806:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9799:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9799:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9792:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9792:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9781:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9753:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9763:7:4",
														"type": ""
													}
												],
												"src": "9729:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9865:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9919:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9928:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9931:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9921:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9921:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9921:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9888:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9910:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "9895:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9895:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9885:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9885:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9878:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9878:40:4"
															},
															"nodeType": "YulIf",
															"src": "9875:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9858:5:4",
														"type": ""
													}
												],
												"src": "9825:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10007:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10017:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10032:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10026:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10026:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10017:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10072:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "10048:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10048:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10048:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9985:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9993:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10001:5:4",
														"type": ""
													}
												],
												"src": "9947:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10246:1447:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10290:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "10292:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10292:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10292:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10267:3:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10272:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10263:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10263:19:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10284:4:4",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10259:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10259:30:4"
															},
															"nodeType": "YulIf",
															"src": "10256:117:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10382:30:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10407:4:4",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10391:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10391:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10382:5:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10422:164:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10463:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10477:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10467:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10503:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10510:4:4",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10499:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10499:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "10550:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "10561:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10546:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10546:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "10570:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "10517:28:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10517:57:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "10492:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10492:83:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10492:83:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10596:170:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10642:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10646:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10683:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10690:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10679:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10679:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "10730:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "10741:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10726:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10726:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "10750:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "10697:28:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10697:57:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "10672:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10672:83:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10672:83:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10776:178:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10830:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10844:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10834:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10871:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10878:4:4",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10867:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10867:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "10918:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "10929:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10914:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10914:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "10938:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "10885:28:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10885:57:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "10860:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10860:83:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "10860:83:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10964:178:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11018:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11032:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11022:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11059:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11066:4:4",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11055:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11055:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "11106:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "11117:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11102:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11102:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "11126:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "11073:28:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11073:57:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "11048:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11048:83:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11048:83:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11152:178:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11205:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11219:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11209:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11247:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11254:4:4",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11243:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11243:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "11294:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "11305:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11290:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11290:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "11314:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "11261:28:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11261:57:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "11236:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11236:83:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11236:83:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11340:163:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11375:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11389:3:4",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11379:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11417:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11424:4:4",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11413:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11413:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "11467:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "11478:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11463:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11463:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "11487:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "11431:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11431:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "11406:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11406:86:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11406:86:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11513:173:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11558:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11572:3:4",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11562:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11600:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11607:4:4",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11596:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11596:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "11650:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "11661:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11646:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11646:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "11670:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "11614:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11614:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "11589:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11589:86:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11589:86:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_RequestSettings_$291_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10221:9:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10232:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10240:5:4",
														"type": ""
													}
												],
												"src": "10148:1545:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11741:78:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11797:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11806:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11809:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11799:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11799:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11799:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11764:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11788:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "11771:16:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11771:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11761:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11761:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11754:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11754:42:4"
															},
															"nodeType": "YulIf",
															"src": "11751:62:4"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11734:5:4",
														"type": ""
													}
												],
												"src": "11699:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11887:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11897:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11912:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11906:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11906:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11897:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11954:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "11928:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11928:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11928:32:4"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11865:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11873:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11881:5:4",
														"type": ""
													}
												],
												"src": "11825:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12112:2006:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12158:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "12160:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12160:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12160:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12133:3:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12138:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12129:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12129:19:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12150:6:4",
																		"type": "",
																		"value": "0x0200"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12125:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12125:32:4"
															},
															"nodeType": "YulIf",
															"src": "12122:119:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12250:32:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12275:6:4",
																		"type": "",
																		"value": "0x0140"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12259:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12259:23:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12250:5:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12292:165:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12331:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12345:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12335:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12371:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12378:4:4",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12367:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12367:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "12421:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "12432:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12417:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12417:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "12441:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "12385:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12385:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "12360:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12360:86:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12360:86:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12467:166:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12506:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12520:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12510:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12547:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12554:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12543:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12543:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "12597:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "12608:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12593:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12593:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "12617:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "12561:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12561:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "12536:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12536:86:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12536:86:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12643:179:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12682:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12696:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12686:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12723:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12730:4:4",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12719:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12719:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "12786:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "12797:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12782:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12782:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "12806:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "12737:44:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12737:73:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "12712:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12712:99:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12712:99:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12832:162:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12870:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12884:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12874:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12911:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12918:4:4",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12907:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12907:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "12958:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "12969:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12954:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12954:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "12978:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "12925:28:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12925:57:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "12900:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12900:83:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12900:83:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13004:206:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13050:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13064:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13054:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13092:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13099:4:4",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13088:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13088:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "13174:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "13185:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13170:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13170:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "13194:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_struct$_RequestSettings_$291_memory_ptr_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "13106:63:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13106:92:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "13081:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13081:118:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "13081:118:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13220:171:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13264:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13278:3:4",
																		"type": "",
																		"value": "352"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13268:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13306:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13313:4:4",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13302:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13302:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "13355:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "13366:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13351:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13351:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "13375:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_int256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "13320:30:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13320:59:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "13295:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13295:85:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "13295:85:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13401:171:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13445:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13459:3:4",
																		"type": "",
																		"value": "384"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13449:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13487:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13494:4:4",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13483:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13483:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "13536:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "13547:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13532:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13532:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "13556:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_int256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "13501:30:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13501:59:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "13476:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13476:85:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "13476:85:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13582:173:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13627:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13641:3:4",
																		"type": "",
																		"value": "416"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13631:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13669:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13676:4:4",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13665:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13665:16:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "13719:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "13730:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13715:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13715:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "13739:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "13683:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13683:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "13658:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13658:86:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "13658:86:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13765:167:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13802:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13816:3:4",
																		"type": "",
																		"value": "448"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13806:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13844:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13851:6:4",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13840:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13840:18:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "13896:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "13907:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13892:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13892:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "13916:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "13860:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13860:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "13833:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13833:88:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "13833:88:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13942:169:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13981:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13995:3:4",
																		"type": "",
																		"value": "480"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13985:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14023:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14030:6:4",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14019:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14019:18:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "14075:9:4"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "14086:6:4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "14071:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14071:22:4"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "14095:3:4"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "14039:31:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14039:60:4"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "14012:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14012:88:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "14012:88:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_Request_$314_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12087:9:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12098:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12106:5:4",
														"type": ""
													}
												],
												"src": "12022:2096:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14225:299:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14272:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14274:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14274:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14274:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14246:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14255:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14242:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14242:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14267:3:4",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14238:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14238:33:4"
															},
															"nodeType": "YulIf",
															"src": "14235:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "14365:152:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14380:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14394:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14384:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14409:98:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14479:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14490:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14475:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14475:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14499:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_Request_$314_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14419:55:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14419:88:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14409:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Request_$314_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14195:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14206:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14218:6:4",
														"type": ""
													}
												],
												"src": "14124:400:4"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes_storage_t_contract$_IERC20_$77_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_30_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_30_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_30_by_1(value)))\n    }\n\n    function abi_encode_t_rational_30_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_30_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes_storage_t_rational_30_by_1__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_rational_30_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes_storage__to_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // struct OptimisticOracleV2Interface.RequestSettings\n    function abi_decode_t_struct$_RequestSettings_$291_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xe0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xe0)\n\n        {\n            // eventBased\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // refundOnDispute\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // callbackOnPriceProposed\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // callbackOnPriceDisputed\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // callbackOnPriceSettled\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // bond\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // customLiveness\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // struct OptimisticOracleV2Interface.Request\n    function abi_decode_t_struct$_Request_$314_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0200) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0140)\n\n        {\n            // proposer\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // disputer\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // currency\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // settled\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // requestSettings\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_struct$_RequestSettings_$291_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // proposedPrice\n\n            let offset := 352\n\n            mstore(add(value, 0xa0), abi_decode_t_int256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // resolvedPrice\n\n            let offset := 384\n\n            mstore(add(value, 0xc0), abi_decode_t_int256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // expirationTime\n\n            let offset := 416\n\n            mstore(add(value, 0xe0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // reward\n\n            let offset := 448\n\n            mstore(add(value, 0x0100), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // finalFee\n\n            let offset := 480\n\n            mstore(add(value, 0x0120), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Request_$314_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 512) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Request_$314_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063606deecd14610051578063655990571461005b578063f25ffb2014610079578063fa77615214610097575b600080fd5b6100596100a1565b005b610063610207565b6040516100709190610481565b60405180910390f35b610081610295565b60405161008e91906104bc565b60405180910390f35b61009f610347565b005b42600381905550600073e6b8a5cf854791412c1f6efc7caf629f5df1c74790506000808054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311df92f1600154600354600286866040518663ffffffff1660e01b8152600401610128959493929190610681565b6020604051808303816000875af1158015610147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016b9190610716565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663473c45fe6001546003546002601e6040518563ffffffff1660e01b81526004016101d1949392919061077e565b600060405180830381600087803b1580156101eb57600080fd5b505af11580156101ff573d6000803e3d6000fd5b505050505050565b6002805461021490610538565b80601f016020809104026020016040519081016040528092919081815260200182805461024090610538565b801561028d5780601f106102625761010080835404028352916020019161028d565b820191906000526020600020905b81548152906001019060200180831161027057829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9904f9b3060015460035460026040518563ffffffff1660e01b81526004016102fc94939291906107eb565b61020060405180830381865afa15801561031a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033e9190610b32565b60c00151905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635e9a79a93060015460035460026040518563ffffffff1660e01b81526004016103ab94939291906107eb565b6020604051808303816000875af11580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee9190610716565b50565b600081519050919050565b600082825260208201905092915050565b60005b8381101561042b578082015181840152602081019050610410565b60008484015250505050565b6000601f19601f8301169050919050565b6000610453826103f1565b61045d81856103fc565b935061046d81856020860161040d565b61047681610437565b840191505092915050565b6000602082019050818103600083015261049b8184610448565b905092915050565b6000819050919050565b6104b6816104a3565b82525050565b60006020820190506104d160008301846104ad565b92915050565b6000819050919050565b6104ea816104d7565b82525050565b6000819050919050565b610503816104f0565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061055057607f821691505b60208210810361056357610562610509565b5b50919050565b60008190508160005260206000209050919050565b6000815461058b81610538565b61059581866103fc565b945060018216600081146105b057600181146105c6576105f9565b60ff1983168652811515602002860193506105f9565b6105cf85610569565b60005b838110156105f1578154818901526001820191506020810190506105d2565b808801955050505b50505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061064761064261063d84610602565b610622565b610602565b9050919050565b60006106598261062c565b9050919050565b600061066b8261064e565b9050919050565b61067b81610660565b82525050565b600060a08201905061069660008301886104e1565b6106a360208301876104fa565b81810360408301526106b5818661057e565b90506106c46060830185610672565b6106d160808301846104fa565b9695505050505050565b6000604051905090565b600080fd5b6106f3816104f0565b81146106fe57600080fd5b50565b600081519050610710816106ea565b92915050565b60006020828403121561072c5761072b6106e5565b5b600061073a84828501610701565b91505092915050565b6000819050919050565b600061076861076361075e84610743565b610622565b6104f0565b9050919050565b6107788161074d565b82525050565b600060808201905061079360008301876104e1565b6107a060208301866104fa565b81810360408301526107b2818561057e565b90506107c1606083018461076f565b95945050505050565b60006107d582610602565b9050919050565b6107e5816107ca565b82525050565b600060808201905061080060008301876107dc565b61080d60208301866104e1565b61081a60408301856104fa565b818103606083015261082c818461057e565b905095945050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61087482610437565b810181811067ffffffffffffffff821117156108935761089261083c565b5b80604052505050565b60006108a66106db565b90506108b2828261086b565b919050565b6108c0816107ca565b81146108cb57600080fd5b50565b6000815190506108dd816108b7565b92915050565b60006108ee826107ca565b9050919050565b6108fe816108e3565b811461090957600080fd5b50565b60008151905061091b816108f5565b92915050565b60008115159050919050565b61093681610921565b811461094157600080fd5b50565b6000815190506109538161092d565b92915050565b600060e0828403121561096f5761096e610837565b5b61097960e061089c565b9050600061098984828501610944565b600083015250602061099d84828501610944565b60208301525060406109b184828501610944565b60408301525060606109c584828501610944565b60608301525060806109d984828501610944565b60808301525060a06109ed84828501610701565b60a08301525060c0610a0184828501610701565b60c08301525092915050565b610a16816104a3565b8114610a2157600080fd5b50565b600081519050610a3381610a0d565b92915050565b60006102008284031215610a5057610a4f610837565b5b610a5b61014061089c565b90506000610a6b848285016108ce565b6000830152506020610a7f848285016108ce565b6020830152506040610a938482850161090c565b6040830152506060610aa784828501610944565b6060830152506080610abb84828501610959565b608083015250610160610ad084828501610a24565b60a083015250610180610ae584828501610a24565b60c0830152506101a0610afa84828501610701565b60e0830152506101c0610b0f84828501610701565b610100830152506101e0610b2584828501610701565b6101208301525092915050565b60006102008284031215610b4957610b486106e5565b5b6000610b5784828501610a39565b9150509291505056fea2646970667358221220c834132b780ab9c99514e99f819d0a9bb4ade2ef70a9fa9a5ebdbad2d554cd9f64736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x606DEECD EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x65599057 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xF25FFB20 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xFA776152 EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x347 JUMP JUMPDEST STOP JUMPDEST TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xE6B8A5CF854791412C1F6EFC7CAF629F5DF1C747 SWAP1 POP PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x11DF92F1 PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x147 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x473C45FE PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 PUSH1 0x1E PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x214 SWAP1 PUSH2 0x538 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x240 SWAP1 PUSH2 0x538 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x262 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x270 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9904F9B ADDRESS PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x200 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0xC0 ADD MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5E9A79A9 ADDRESS PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x42B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x410 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x453 DUP3 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x45D DUP2 DUP6 PUSH2 0x3FC JUMP JUMPDEST SWAP4 POP PUSH2 0x46D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40D JUMP JUMPDEST PUSH2 0x476 DUP2 PUSH2 0x437 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49B DUP2 DUP5 PUSH2 0x448 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B6 DUP2 PUSH2 0x4A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EA DUP2 PUSH2 0x4D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x503 DUP2 PUSH2 0x4F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x550 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x563 JUMPI PUSH2 0x562 PUSH2 0x509 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x58B DUP2 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x595 DUP2 DUP7 PUSH2 0x3FC JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x5B0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x5C6 JUMPI PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x5CF DUP6 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5F1 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5D2 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x647 PUSH2 0x642 PUSH2 0x63D DUP5 PUSH2 0x602 JUMP JUMPDEST PUSH2 0x622 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x659 DUP3 PUSH2 0x62C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66B DUP3 PUSH2 0x64E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x67B DUP2 PUSH2 0x660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x696 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x6A3 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x4FA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x6B5 DUP2 DUP7 PUSH2 0x57E JUMP JUMPDEST SWAP1 POP PUSH2 0x6C4 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x672 JUMP JUMPDEST PUSH2 0x6D1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4FA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F3 DUP2 PUSH2 0x4F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x710 DUP2 PUSH2 0x6EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x6E5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 PUSH2 0x763 PUSH2 0x75E DUP5 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x622 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x778 DUP2 PUSH2 0x74D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x793 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x7A0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4FA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x7B2 DUP2 DUP6 PUSH2 0x57E JUMP JUMPDEST SWAP1 POP PUSH2 0x7C1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x76F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D5 DUP3 PUSH2 0x602 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E5 DUP2 PUSH2 0x7CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x800 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x7DC JUMP JUMPDEST PUSH2 0x80D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x81A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4FA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x82C DUP2 DUP5 PUSH2 0x57E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x874 DUP3 PUSH2 0x437 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x893 JUMPI PUSH2 0x892 PUSH2 0x83C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 PUSH2 0x6DB JUMP JUMPDEST SWAP1 POP PUSH2 0x8B2 DUP3 DUP3 PUSH2 0x86B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C0 DUP2 PUSH2 0x7CA JUMP JUMPDEST DUP2 EQ PUSH2 0x8CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8DD DUP2 PUSH2 0x8B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EE DUP3 PUSH2 0x7CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FE DUP2 PUSH2 0x8E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x91B DUP2 PUSH2 0x8F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x936 DUP2 PUSH2 0x921 JUMP JUMPDEST DUP2 EQ PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x953 DUP2 PUSH2 0x92D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96F JUMPI PUSH2 0x96E PUSH2 0x837 JUMP JUMPDEST JUMPDEST PUSH2 0x979 PUSH1 0xE0 PUSH2 0x89C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x989 DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x99D DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x9B1 DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x9C5 DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x9D9 DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x9ED DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0xA01 DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA16 DUP2 PUSH2 0x4A3 JUMP JUMPDEST DUP2 EQ PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA33 DUP2 PUSH2 0xA0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA50 JUMPI PUSH2 0xA4F PUSH2 0x837 JUMP JUMPDEST JUMPDEST PUSH2 0xA5B PUSH2 0x140 PUSH2 0x89C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA6B DUP5 DUP3 DUP6 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xA7F DUP5 DUP3 DUP6 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xA93 DUP5 DUP3 DUP6 ADD PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xAA7 DUP5 DUP3 DUP6 ADD PUSH2 0x944 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xABB DUP5 DUP3 DUP6 ADD PUSH2 0x959 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0xAD0 DUP5 DUP3 DUP6 ADD PUSH2 0xA24 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0xAE5 DUP5 DUP3 DUP6 ADD PUSH2 0xA24 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH2 0x1A0 PUSH2 0xAFA DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x1C0 PUSH2 0xB0F DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x1E0 PUSH2 0xB25 DUP5 DUP3 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB49 JUMPI PUSH2 0xB48 PUSH2 0x6E5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB57 DUP5 DUP3 DUP6 ADD PUSH2 0xA39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 CALLVALUE SGT 0x2B PUSH25 0xAB9C99514E99F819D0A9BB4ADE2EF70A9FA9A5EBDBAD2D554 0xCD SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "516:2122:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1386:630;;;:::i;:::-;;1151:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2475:161;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2279:113;;;:::i;:::-;;1386:630;1440:15;1426:11;:29;;;;1516:19;1545:42;1516:72;;1639:14;1858:2;;;;;;;;;;:15;;;1874:10;;1886:11;;1899:13;1914:12;1928:6;1858:77;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1945:2;;;;;;;;;;:20;;;1966:10;;1978:11;;1991:13;2006:2;1945:64;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:600;;1386:630::o;1151:90::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2475:161::-;2522:6;2547:2;;;;;;;;;;;:13;;;2569:4;2576:10;;2588:11;;2601:13;2547:68;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:82;;;2540:89;;2475:161;:::o;2279:113::-;2321:2;;;;;;;;;;:9;;;2339:4;2346:10;;2358:11;;2371:13;2321:64;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2279:113::o;7:98:4:-;58:6;92:5;86:12;76:22;;7:98;;;:::o;111:168::-;194:11;228:6;223:3;216:19;268:4;263:3;259:14;244:29;;111:168;;;;:::o;285:246::-;366:1;376:113;390:6;387:1;384:13;376:113;;;475:1;470:3;466:11;460:18;456:1;451:3;447:11;440:39;412:2;409:1;405:10;400:15;;376:113;;;523:1;514:6;509:3;505:16;498:27;347:184;285:246;;;:::o;537:102::-;578:6;629:2;625:7;620:2;613:5;609:14;605:28;595:38;;537:102;;;:::o;645:373::-;731:3;759:38;791:5;759:38;:::i;:::-;813:70;876:6;871:3;813:70;:::i;:::-;806:77;;892:65;950:6;945:3;938:4;931:5;927:16;892:65;:::i;:::-;982:29;1004:6;982:29;:::i;:::-;977:3;973:39;966:46;;735:283;645:373;;;;:::o;1024:309::-;1135:4;1173:2;1162:9;1158:18;1150:26;;1222:9;1216:4;1212:20;1208:1;1197:9;1193:17;1186:47;1250:76;1321:4;1312:6;1250:76;:::i;:::-;1242:84;;1024:309;;;;:::o;1339:76::-;1375:7;1404:5;1393:16;;1339:76;;;:::o;1421:115::-;1506:23;1523:5;1506:23;:::i;:::-;1501:3;1494:36;1421:115;;:::o;1542:218::-;1633:4;1671:2;1660:9;1656:18;1648:26;;1684:69;1750:1;1739:9;1735:17;1726:6;1684:69;:::i;:::-;1542:218;;;;:::o;1766:77::-;1803:7;1832:5;1821:16;;1766:77;;;:::o;1849:118::-;1936:24;1954:5;1936:24;:::i;:::-;1931:3;1924:37;1849:118;;:::o;1973:77::-;2010:7;2039:5;2028:16;;1973:77;;;:::o;2056:118::-;2143:24;2161:5;2143:24;:::i;:::-;2138:3;2131:37;2056:118;;:::o;2180:180::-;2228:77;2225:1;2218:88;2325:4;2322:1;2315:15;2349:4;2346:1;2339:15;2366:320;2410:6;2447:1;2441:4;2437:12;2427:22;;2494:1;2488:4;2484:12;2515:18;2505:81;;2571:4;2563:6;2559:17;2549:27;;2505:81;2633:2;2625:6;2622:14;2602:18;2599:38;2596:84;;2652:18;;:::i;:::-;2596:84;2417:269;2366:320;;;:::o;2692:140::-;2740:4;2763:3;2755:11;;2786:3;2783:1;2776:14;2820:4;2817:1;2807:18;2799:26;;2692:140;;;:::o;2860:827::-;2943:3;2980:5;2974:12;3009:36;3035:9;3009:36;:::i;:::-;3061:70;3124:6;3119:3;3061:70;:::i;:::-;3054:77;;3162:1;3151:9;3147:17;3178:1;3173:164;;;;3351:1;3346:335;;;;3140:541;;3173:164;3257:4;3253:9;3242;3238:25;3233:3;3226:38;3317:6;3310:14;3303:22;3297:4;3293:33;3288:3;3284:43;3277:50;;3173:164;;3346:335;3413:37;3444:5;3413:37;:::i;:::-;3472:1;3486:154;3500:6;3497:1;3494:13;3486:154;;;3574:7;3568:14;3564:1;3559:3;3555:11;3548:35;3624:1;3615:7;3611:15;3600:26;;3522:4;3519:1;3515:12;3510:17;;3486:154;;;3669:1;3664:3;3660:11;3653:18;;3353:328;;3140:541;;2947:740;;2860:827;;;;:::o;3693:126::-;3730:7;3770:42;3763:5;3759:54;3748:65;;3693:126;;;:::o;3825:60::-;3853:3;3874:5;3867:12;;3825:60;;;:::o;3891:142::-;3941:9;3974:53;3992:34;4001:24;4019:5;4001:24;:::i;:::-;3992:34;:::i;:::-;3974:53;:::i;:::-;3961:66;;3891:142;;;:::o;4039:126::-;4089:9;4122:37;4153:5;4122:37;:::i;:::-;4109:50;;4039:126;;;:::o;4171:139::-;4234:9;4267:37;4298:5;4267:37;:::i;:::-;4254:50;;4171:139;;;:::o;4316:157::-;4416:50;4460:5;4416:50;:::i;:::-;4411:3;4404:63;4316:157;;:::o;4479:771::-;4712:4;4750:3;4739:9;4735:19;4727:27;;4764:71;4832:1;4821:9;4817:17;4808:6;4764:71;:::i;:::-;4845:72;4913:2;4902:9;4898:18;4889:6;4845:72;:::i;:::-;4964:9;4958:4;4954:20;4949:2;4938:9;4934:18;4927:48;4992:73;5060:4;5051:6;4992:73;:::i;:::-;4984:81;;5075:85;5156:2;5145:9;5141:18;5132:6;5075:85;:::i;:::-;5170:73;5238:3;5227:9;5223:19;5214:6;5170:73;:::i;:::-;4479:771;;;;;;;;:::o;5256:75::-;5289:6;5322:2;5316:9;5306:19;;5256:75;:::o;5337:117::-;5446:1;5443;5436:12;5583:122;5656:24;5674:5;5656:24;:::i;:::-;5649:5;5646:35;5636:63;;5695:1;5692;5685:12;5636:63;5583:122;:::o;5711:143::-;5768:5;5799:6;5793:13;5784:22;;5815:33;5842:5;5815:33;:::i;:::-;5711:143;;;;:::o;5860:351::-;5930:6;5979:2;5967:9;5958:7;5954:23;5950:32;5947:119;;;5985:79;;:::i;:::-;5947:119;6105:1;6130:64;6186:7;6177:6;6166:9;6162:22;6130:64;:::i;:::-;6120:74;;6076:128;5860:351;;;;:::o;6217:86::-;6263:7;6292:5;6281:16;;6217:86;;;:::o;6309:160::-;6368:9;6401:62;6419:43;6428:33;6455:5;6428:33;:::i;:::-;6419:43;:::i;:::-;6401:62;:::i;:::-;6388:75;;6309:160;;;:::o;6475:149::-;6571:46;6611:5;6571:46;:::i;:::-;6566:3;6559:59;6475:149;;:::o;6630:652::-;6831:4;6869:3;6858:9;6854:19;6846:27;;6883:71;6951:1;6940:9;6936:17;6927:6;6883:71;:::i;:::-;6964:72;7032:2;7021:9;7017:18;7008:6;6964:72;:::i;:::-;7083:9;7077:4;7073:20;7068:2;7057:9;7053:18;7046:48;7111:73;7179:4;7170:6;7111:73;:::i;:::-;7103:81;;7194;7271:2;7260:9;7256:18;7247:6;7194:81;:::i;:::-;6630:652;;;;;;;:::o;7288:96::-;7325:7;7354:24;7372:5;7354:24;:::i;:::-;7343:35;;7288:96;;;:::o;7390:118::-;7477:24;7495:5;7477:24;:::i;:::-;7472:3;7465:37;7390:118;;:::o;7514:634::-;7706:4;7744:3;7733:9;7729:19;7721:27;;7758:71;7826:1;7815:9;7811:17;7802:6;7758:71;:::i;:::-;7839:72;7907:2;7896:9;7892:18;7883:6;7839:72;:::i;:::-;7921;7989:2;7978:9;7974:18;7965:6;7921:72;:::i;:::-;8040:9;8034:4;8030:20;8025:2;8014:9;8010:18;8003:48;8068:73;8136:4;8127:6;8068:73;:::i;:::-;8060:81;;7514:634;;;;;;;:::o;8154:117::-;8263:1;8260;8253:12;8277:180;8325:77;8322:1;8315:88;8422:4;8419:1;8412:15;8446:4;8443:1;8436:15;8463:281;8546:27;8568:4;8546:27;:::i;:::-;8538:6;8534:40;8676:6;8664:10;8661:22;8640:18;8628:10;8625:34;8622:62;8619:88;;;8687:18;;:::i;:::-;8619:88;8727:10;8723:2;8716:22;8506:238;8463:281;;:::o;8750:129::-;8784:6;8811:20;;:::i;:::-;8801:30;;8840:33;8868:4;8860:6;8840:33;:::i;:::-;8750:129;;;:::o;9008:122::-;9081:24;9099:5;9081:24;:::i;:::-;9074:5;9071:35;9061:63;;9120:1;9117;9110:12;9061:63;9008:122;:::o;9136:143::-;9193:5;9224:6;9218:13;9209:22;;9240:33;9267:5;9240:33;:::i;:::-;9136:143;;;;:::o;9285:109::-;9335:7;9364:24;9382:5;9364:24;:::i;:::-;9353:35;;9285:109;;;:::o;9400:148::-;9486:37;9517:5;9486:37;:::i;:::-;9479:5;9476:48;9466:76;;9538:1;9535;9528:12;9466:76;9400:148;:::o;9554:169::-;9624:5;9655:6;9649:13;9640:22;;9671:46;9711:5;9671:46;:::i;:::-;9554:169;;;;:::o;9729:90::-;9763:7;9806:5;9799:13;9792:21;9781:32;;9729:90;;;:::o;9825:116::-;9895:21;9910:5;9895:21;:::i;:::-;9888:5;9885:32;9875:60;;9931:1;9928;9921:12;9875:60;9825:116;:::o;9947:137::-;10001:5;10032:6;10026:13;10017:22;;10048:30;10072:5;10048:30;:::i;:::-;9947:137;;;;:::o;10148:1545::-;10240:5;10284:4;10272:9;10267:3;10263:19;10259:30;10256:117;;;10292:79;;:::i;:::-;10256:117;10391:21;10407:4;10391:21;:::i;:::-;10382:30;;10477:1;10517:57;10570:3;10561:6;10550:9;10546:22;10517:57;:::i;:::-;10510:4;10503:5;10499:16;10492:83;10422:164;10656:2;10697:57;10750:3;10741:6;10730:9;10726:22;10697:57;:::i;:::-;10690:4;10683:5;10679:16;10672:83;10596:170;10844:2;10885:57;10938:3;10929:6;10918:9;10914:22;10885:57;:::i;:::-;10878:4;10871:5;10867:16;10860:83;10776:178;11032:2;11073:57;11126:3;11117:6;11106:9;11102:22;11073:57;:::i;:::-;11066:4;11059:5;11055:16;11048:83;10964:178;11219:3;11261:57;11314:3;11305:6;11294:9;11290:22;11261:57;:::i;:::-;11254:4;11247:5;11243:16;11236:83;11152:178;11389:3;11431:60;11487:3;11478:6;11467:9;11463:22;11431:60;:::i;:::-;11424:4;11417:5;11413:16;11406:86;11340:163;11572:3;11614:60;11670:3;11661:6;11650:9;11646:22;11614:60;:::i;:::-;11607:4;11600:5;11596:16;11589:86;11513:173;10148:1545;;;;:::o;11699:120::-;11771:23;11788:5;11771:23;:::i;:::-;11764:5;11761:34;11751:62;;11809:1;11806;11799:12;11751:62;11699:120;:::o;11825:141::-;11881:5;11912:6;11906:13;11897:22;;11928:32;11954:5;11928:32;:::i;:::-;11825:141;;;;:::o;12022:2096::-;12106:5;12150:6;12138:9;12133:3;12129:19;12125:32;12122:119;;;12160:79;;:::i;:::-;12122:119;12259:23;12275:6;12259:23;:::i;:::-;12250:32;;12345:1;12385:60;12441:3;12432:6;12421:9;12417:22;12385:60;:::i;:::-;12378:4;12371:5;12367:16;12360:86;12292:165;12520:2;12561:60;12617:3;12608:6;12597:9;12593:22;12561:60;:::i;:::-;12554:4;12547:5;12543:16;12536:86;12467:166;12696:2;12737:73;12806:3;12797:6;12786:9;12782:22;12737:73;:::i;:::-;12730:4;12723:5;12719:16;12712:99;12643:179;12884:2;12925:57;12978:3;12969:6;12958:9;12954:22;12925:57;:::i;:::-;12918:4;12911:5;12907:16;12900:83;12832:162;13064:3;13106:92;13194:3;13185:6;13174:9;13170:22;13106:92;:::i;:::-;13099:4;13092:5;13088:16;13081:118;13004:206;13278:3;13320:59;13375:3;13366:6;13355:9;13351:22;13320:59;:::i;:::-;13313:4;13306:5;13302:16;13295:85;13220:171;13459:3;13501:59;13556:3;13547:6;13536:9;13532:22;13501:59;:::i;:::-;13494:4;13487:5;13483:16;13476:85;13401:171;13641:3;13683:60;13739:3;13730:6;13719:9;13715:22;13683:60;:::i;:::-;13676:4;13669:5;13665:16;13658:86;13582:173;13816:3;13860:60;13916:3;13907:6;13896:9;13892:22;13860:60;:::i;:::-;13851:6;13844:5;13840:18;13833:88;13765:167;13995:3;14039:60;14095:3;14086:6;14075:9;14071:22;14039:60;:::i;:::-;14030:6;14023:5;14019:18;14012:88;13942:169;12022:2096;;;;:::o;14124:400::-;14218:6;14267:3;14255:9;14246:7;14242:23;14238:33;14235:120;;;14274:79;;:::i;:::-;14235:120;14394:1;14419:88;14499:7;14490:6;14479:9;14475:22;14419:88;:::i;:::-;14409:98;;14365:152;14124:400;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "593200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ancillaryData()": "infinite",
								"getSettledData()": "infinite",
								"requestData()": "infinite",
								"settleRequest()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 516,
									"end": 2638,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 694,
									"end": 736,
									"name": "PUSH",
									"source": 1,
									"value": "60E6140330F8FE31E785190F39C1B5E5E833C2A9"
								},
								{
									"begin": 633,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 633,
									"end": 737,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 633,
									"end": 737,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 633,
									"end": 737,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 633,
									"end": 737,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 865,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "5945535F4F525F4E4F5F51554552590000000000000000000000000000000000"
								},
								{
									"begin": 844,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 844,
									"end": 891,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "PUSH",
									"source": 1,
									"value": "2C"
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "PUSH data",
									"source": 1,
									"value": "5AB016CD407EEB7EB6C98D673DEFA07FAF609E036677B3FD39539CCDA5E8E8FE"
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "PUSH",
									"source": 1,
									"value": "2C"
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1241,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1241,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1151,
									"end": 1241,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1241,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1151,
									"end": 1241,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1241,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1151,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1241,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1151,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1241,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1270,
									"end": 1271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1248,
									"end": 1271,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1248,
									"end": 1271,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 105,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 7,
									"end": 105,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 58,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 97,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 86,
									"end": 98,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 76,
									"end": 98,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 76,
									"end": 98,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 105,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 105,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 105,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 105,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 111,
									"end": 291,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 111,
									"end": 291,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 159,
									"end": 236,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 156,
									"end": 157,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 237,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 256,
									"end": 260,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 253,
									"end": 254,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 246,
									"end": 261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 280,
									"end": 284,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 277,
									"end": 278,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 285,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 297,
									"end": 477,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 297,
									"end": 477,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 345,
									"end": 422,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 423,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 442,
									"end": 446,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 439,
									"end": 440,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 432,
									"end": 447,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 466,
									"end": 470,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 463,
									"end": 464,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 471,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 483,
									"end": 803,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 483,
									"end": 803,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 527,
									"end": 533,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 565,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 558,
									"end": 562,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 554,
									"end": 566,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 544,
									"end": 566,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 544,
									"end": 566,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 611,
									"end": 612,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 605,
									"end": 609,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 601,
									"end": 613,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 632,
									"end": 650,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 703,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 622,
									"end": 703,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 688,
									"end": 692,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 680,
									"end": 686,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 676,
									"end": 693,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 666,
									"end": 693,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 666,
									"end": 693,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 622,
									"end": 703,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 622,
									"end": 703,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 750,
									"end": 752,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 742,
									"end": 748,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 739,
									"end": 753,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 719,
									"end": 737,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 716,
									"end": 754,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 713,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 713,
									"end": 797,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 769,
									"end": 787,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 769,
									"end": 787,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 769,
									"end": 787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 769,
									"end": 787,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 769,
									"end": 787,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 713,
									"end": 797,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 713,
									"end": 797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 534,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 483,
									"end": 803,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 483,
									"end": 803,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 483,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 483,
									"end": 803,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 949,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 809,
									"end": 949,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 883,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 872,
									"end": 883,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 872,
									"end": 883,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 903,
									"end": 906,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 900,
									"end": 901,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 893,
									"end": 907,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 937,
									"end": 941,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 916,
									"end": 942,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 916,
									"end": 942,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 949,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 809,
									"end": 949,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 809,
									"end": 949,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 949,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 955,
									"end": 1048,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 1048,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 992,
									"end": 998,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1039,
									"end": 1041,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1034,
									"end": 1036,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1027,
									"end": 1032,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1037,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1019,
									"end": 1042,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1009,
									"end": 1042,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1009,
									"end": 1042,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 955,
									"end": 1048,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 955,
									"end": 1048,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 955,
									"end": 1048,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 955,
									"end": 1048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1098,
									"end": 1106,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1148,
									"end": 1153,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1154,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1054,
									"end": 1161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1236,
									"end": 1242,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1274,
									"end": 1284,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1406,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1339,
									"end": 1405,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1328,
									"end": 1337,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1406,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1406,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1309,
									"end": 1406,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1427,
									"end": 1466,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1457,
									"end": 1465,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1427,
									"end": 1466,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1427,
									"end": 1466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1427,
									"end": 1466,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1427,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1415,
									"end": 1466,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 1415,
									"end": 1466,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1499,
									"end": 1503,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1495,
									"end": 1504,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1488,
									"end": 1493,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1484,
									"end": 1505,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1475,
									"end": 1505,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1475,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1548,
									"end": 1552,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1538,
									"end": 1546,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1534,
									"end": 1553,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1527,
									"end": 1532,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1524,
									"end": 1554,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1514,
									"end": 1554,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1514,
									"end": 1554,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1243,
									"end": 1560,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1243,
									"end": 1560,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1560,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1566,
									"end": 1643,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1566,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1610,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 1637,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1566,
									"end": 1643,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1566,
									"end": 1643,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1566,
									"end": 1643,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1566,
									"end": 1643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1649,
									"end": 1709,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1649,
									"end": 1709,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1677,
									"end": 1680,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1698,
									"end": 1703,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1691,
									"end": 1703,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1691,
									"end": 1703,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1649,
									"end": 1709,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1649,
									"end": 1709,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1649,
									"end": 1709,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1649,
									"end": 1709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1715,
									"end": 1857,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1715,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1765,
									"end": 1774,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1798,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1816,
									"end": 1850,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1825,
									"end": 1849,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1843,
									"end": 1848,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1825,
									"end": 1849,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1825,
									"end": 1849,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1825,
									"end": 1849,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1825,
									"end": 1849,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1816,
									"end": 1850,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1816,
									"end": 1850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1816,
									"end": 1850,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1816,
									"end": 1850,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1798,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1798,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1798,
									"end": 1851,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1798,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1785,
									"end": 1851,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1785,
									"end": 1851,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1715,
									"end": 1857,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1715,
									"end": 1857,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1715,
									"end": 1857,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1715,
									"end": 1857,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1863,
									"end": 1938,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1863,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 1909,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1927,
									"end": 1932,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1920,
									"end": 1932,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1920,
									"end": 1932,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1863,
									"end": 1938,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1863,
									"end": 1938,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1863,
									"end": 1938,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1863,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 2213,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1944,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 2085,
									"end": 2092,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2054,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2093,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 2054,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2115,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 2164,
									"end": 2205,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 2188,
									"end": 2204,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2164,
									"end": 2205,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2164,
									"end": 2205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2164,
									"end": 2205,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 2164,
									"end": 2205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2156,
									"end": 2162,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2149,
									"end": 2153,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2143,
									"end": 2154,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2115,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2115,
									"end": 2206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2115,
									"end": 2206,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 2115,
									"end": 2206,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2109,
									"end": 2113,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2102,
									"end": 2207,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2020,
									"end": 2213,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 2213,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 2213,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 2213,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 2213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2219,
									"end": 2292,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 2219,
									"end": 2292,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2264,
									"end": 2267,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2219,
									"end": 2292,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2219,
									"end": 2292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2298,
									"end": 2487,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2298,
									"end": 2487,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 2375,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 2375,
									"end": 2407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2407,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 2375,
									"end": 2407,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2416,
									"end": 2481,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 2474,
									"end": 2480,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2466,
									"end": 2472,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2460,
									"end": 2464,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2416,
									"end": 2481,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 2416,
									"end": 2481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2416,
									"end": 2481,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 2416,
									"end": 2481,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2351,
									"end": 2487,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2298,
									"end": 2487,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2298,
									"end": 2487,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2298,
									"end": 2487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2493,
									"end": 2679,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2493,
									"end": 2679,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2573,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2563,
									"end": 2568,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2560,
									"end": 2574,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2661,
									"end": 2662,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2654,
									"end": 2659,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2597,
									"end": 2598,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2590,
									"end": 2595,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2586,
									"end": 2599,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2577,
									"end": 2599,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2577,
									"end": 2599,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2493,
									"end": 2679,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2493,
									"end": 2679,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2493,
									"end": 2679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2685,
									"end": 3226,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2685,
									"end": 3226,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2785,
									"end": 2787,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2780,
									"end": 2783,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2777,
									"end": 2788,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2774,
									"end": 3219,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2774,
									"end": 3219,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2774,
									"end": 3219,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2819,
									"end": 2856,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2850,
									"end": 2855,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2819,
									"end": 2856,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2819,
									"end": 2856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2819,
									"end": 2856,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2819,
									"end": 2856,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2902,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 2920,
									"end": 2930,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2902,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2902,
									"end": 2931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2902,
									"end": 2931,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 2902,
									"end": 2931,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2892,
									"end": 2900,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2888,
									"end": 2932,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3085,
									"end": 3087,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3073,
									"end": 3083,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3070,
									"end": 3088,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3067,
									"end": 3116,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3067,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 3067,
									"end": 3116,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3106,
									"end": 3114,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3091,
									"end": 3114,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3091,
									"end": 3114,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3067,
									"end": 3116,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 3067,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3129,
									"end": 3209,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 3185,
									"end": 3207,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 3203,
									"end": 3206,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3185,
									"end": 3207,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 3185,
									"end": 3207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3185,
									"end": 3207,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 3185,
									"end": 3207,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3175,
									"end": 3183,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3171,
									"end": 3208,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3158,
									"end": 3169,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3129,
									"end": 3209,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3129,
									"end": 3209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3129,
									"end": 3209,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 3129,
									"end": 3209,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2789,
									"end": 3219,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2789,
									"end": 3219,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2774,
									"end": 3219,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2774,
									"end": 3219,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2685,
									"end": 3226,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2685,
									"end": 3226,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2685,
									"end": 3226,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2685,
									"end": 3226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3286,
									"end": 3294,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3336,
									"end": 3341,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3330,
									"end": 3334,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3326,
									"end": 3342,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3305,
									"end": 3342,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3305,
									"end": 3342,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3232,
									"end": 3349,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3399,
									"end": 3405,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3432,
									"end": 3483,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 3480,
									"end": 3481,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3476,
									"end": 3482,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3468,
									"end": 3473,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3465,
									"end": 3466,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 3461,
									"end": 3474,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3432,
									"end": 3483,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3432,
									"end": 3483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3432,
									"end": 3483,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 3432,
									"end": 3483,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3428,
									"end": 3484,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3513,
									"end": 3517,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3507,
									"end": 3511,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3518,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3493,
									"end": 3518,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3493,
									"end": 3518,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3406,
									"end": 3524,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3355,
									"end": 3524,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3605,
									"end": 3609,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3751,
									"end": 3780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 3776,
									"end": 3779,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3770,
									"end": 3774,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3751,
									"end": 3780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 3751,
									"end": 3780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3751,
									"end": 3780,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 3751,
									"end": 3780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3743,
									"end": 3780,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3743,
									"end": 3780,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3813,
									"end": 3816,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3810,
									"end": 3811,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3806,
									"end": 3817,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3800,
									"end": 3804,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3797,
									"end": 3818,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3789,
									"end": 3818,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3789,
									"end": 3818,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3529,
									"end": 3824,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3829,
									"end": 5219,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3829,
									"end": 5219,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3944,
									"end": 3980,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 3976,
									"end": 3979,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3944,
									"end": 3980,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 3944,
									"end": 3980,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3944,
									"end": 3980,
									"name": "tag",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 3944,
									"end": 3980,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4045,
									"end": 4063,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4037,
									"end": 4043,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4034,
									"end": 4064,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4031,
									"end": 4087,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4031,
									"end": 4087,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 4031,
									"end": 4087,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4067,
									"end": 4085,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 4067,
									"end": 4085,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 4067,
									"end": 4085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4067,
									"end": 4085,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 4067,
									"end": 4085,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4031,
									"end": 4087,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 4031,
									"end": 4087,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4111,
									"end": 4149,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 4143,
									"end": 4147,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4137,
									"end": 4148,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 4111,
									"end": 4149,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 4111,
									"end": 4149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4111,
									"end": 4149,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 4111,
									"end": 4149,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4196,
									"end": 4262,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4247,
									"end": 4253,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4241,
									"end": 4245,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4196,
									"end": 4262,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 4196,
									"end": 4262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4196,
									"end": 4262,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 4196,
									"end": 4262,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4289,
									"end": 4290,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4313,
									"end": 4317,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4300,
									"end": 4317,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4300,
									"end": 4317,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4345,
									"end": 4347,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4334,
									"end": 4348,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4362,
									"end": 4363,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5018,
									"end": 5019,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5035,
									"end": 5041,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5032,
									"end": 5109,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5032,
									"end": 5109,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 5032,
									"end": 5109,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5084,
									"end": 5093,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5079,
									"end": 5082,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 5075,
									"end": 5094,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5069,
									"end": 5095,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5060,
									"end": 5095,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5060,
									"end": 5095,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5032,
									"end": 5109,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 5032,
									"end": 5109,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5135,
									"end": 5202,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 5195,
									"end": 5201,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5135,
									"end": 5202,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 5135,
									"end": 5202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5135,
									"end": 5202,
									"name": "tag",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 5135,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5129,
									"end": 5133,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 5122,
									"end": 5203,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4991,
									"end": 5213,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4327,
									"end": 5213,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 4327,
									"end": 5213,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "tag",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4409,
									"end": 4413,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4405,
									"end": 4414,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4397,
									"end": 4403,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4393,
									"end": 4415,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4443,
									"end": 4479,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 4474,
									"end": 4478,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4443,
									"end": 4479,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 4443,
									"end": 4479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4443,
									"end": 4479,
									"name": "tag",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 4443,
									"end": 4479,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4501,
									"end": 4502,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4529,
									"end": 4536,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4526,
									"end": 4527,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4523,
									"end": 4537,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4608,
									"end": 4617,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4603,
									"end": 4606,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 4599,
									"end": 4618,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4593,
									"end": 4619,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4585,
									"end": 4591,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4578,
									"end": 4620,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4659,
									"end": 4660,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4651,
									"end": 4657,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4647,
									"end": 4661,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4637,
									"end": 4661,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4637,
									"end": 4661,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4706,
									"end": 4708,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4695,
									"end": 4704,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4691,
									"end": 4709,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4678,
									"end": 4709,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 4678,
									"end": 4709,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4552,
									"end": 4556,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4549,
									"end": 4550,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4545,
									"end": 4557,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4540,
									"end": 4557,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4540,
									"end": 4557,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "tag",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4751,
									"end": 4757,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4742,
									"end": 4749,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4739,
									"end": 4758,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 4736,
									"end": 4915,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4736,
									"end": 4915,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "85"
								},
								{
									"begin": 4736,
									"end": 4915,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4809,
									"end": 4818,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4804,
									"end": 4807,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 4800,
									"end": 4819,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4794,
									"end": 4820,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4852,
									"end": 4900,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 4894,
									"end": 4898,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4886,
									"end": 4892,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 4882,
									"end": 4899,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4871,
									"end": 4880,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4852,
									"end": 4900,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 4852,
									"end": 4900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4852,
									"end": 4900,
									"name": "tag",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 4852,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4844,
									"end": 4850,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4837,
									"end": 4901,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4759,
									"end": 4915,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4736,
									"end": 4915,
									"name": "tag",
									"source": 4,
									"value": "85"
								},
								{
									"begin": 4736,
									"end": 4915,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4961,
									"end": 4962,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4957,
									"end": 4958,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 4949,
									"end": 4955,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 4945,
									"end": 4959,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4941,
									"end": 4963,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4935,
									"end": 4939,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 4928,
									"end": 4964,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4974,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4974,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4974,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4327,
									"end": 5213,
									"name": "tag",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 4327,
									"end": 5213,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4327,
									"end": 5213,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3919,
									"end": 5219,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3919,
									"end": 5219,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3919,
									"end": 5219,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3829,
									"end": 5219,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3829,
									"end": 5219,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3829,
									"end": 5219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 2638,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c834132b780ab9c99514e99f819d0a9bb4ade2ef70a9fa9a5ebdbad2d554cd9f64736f6c63430008100033",
									".code": [
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "606DEECD"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "65599057"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "F25FFB20"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "FA776152"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 2638,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 2016,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1386,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1386,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1386,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 2016,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1386,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 2016,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1151,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1151,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2475,
											"end": 2636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2475,
											"end": 2636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2279,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 2016,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1386,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1455,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1426,
											"end": 1455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1455,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1587,
											"name": "PUSH",
											"source": 1,
											"value": "E6B8A5CF854791412C1F6EFC7CAF629F5DF1C747"
										},
										{
											"begin": 1516,
											"end": 1588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1873,
											"name": "PUSH",
											"source": 1,
											"value": "11DF92F1"
										},
										{
											"begin": 1874,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1874,
											"end": 1884,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1886,
											"end": 1897,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1886,
											"end": 1897,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1912,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1914,
											"end": 1926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1858,
											"end": 1935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1858,
											"end": 1935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "473C45FE"
										},
										{
											"begin": 1966,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1966,
											"end": 1976,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1978,
											"end": 1989,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2004,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2006,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1945,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 2016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 2016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 2016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1151,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1151,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "PUSH",
											"source": 1,
											"value": "A9904F9B"
										},
										{
											"begin": 2569,
											"end": 2573,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2586,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 2586,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2599,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2588,
											"end": 2599,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2614,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2547,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2547,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2547,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2629,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 2547,
											"end": 2629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2330,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2330,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2330,
											"name": "PUSH",
											"source": 1,
											"value": "5E9A79A9"
										},
										{
											"begin": 2339,
											"end": 2343,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2384,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2321,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2321,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 7,
											"end": 105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 58,
											"end": 64,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 86,
											"end": 98,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 76,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 76,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 111,
											"end": 279,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 111,
											"end": 279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 234,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 223,
											"end": 226,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 216,
											"end": 235,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 268,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 263,
											"end": 266,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 259,
											"end": 273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 244,
											"end": 273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 273,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 111,
											"end": 279,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 111,
											"end": 279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 111,
											"end": 279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 111,
											"end": 279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 111,
											"end": 279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 285,
											"end": 531,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 285,
											"end": 531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 366,
											"end": 367,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 489,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 376,
											"end": 489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 390,
											"end": 396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 397,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 376,
											"end": 489,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 376,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 376,
											"end": 489,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 475,
											"end": 476,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 470,
											"end": 473,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 460,
											"end": 478,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 456,
											"end": 457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 451,
											"end": 454,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 447,
											"end": 458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 440,
											"end": 479,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 405,
											"end": 415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 400,
											"end": 415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 400,
											"end": 415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 376,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 376,
											"end": 489,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 376,
											"end": 489,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 376,
											"end": 489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 523,
											"end": 524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 520,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 509,
											"end": 512,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 505,
											"end": 521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 525,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 347,
											"end": 531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 285,
											"end": 531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 285,
											"end": 531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 285,
											"end": 531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 285,
											"end": 531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 537,
											"end": 639,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 537,
											"end": 639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 631,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 625,
											"end": 632,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 620,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 609,
											"end": 623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 605,
											"end": 633,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 595,
											"end": 633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 595,
											"end": 633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 537,
											"end": 639,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 537,
											"end": 639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 537,
											"end": 639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 537,
											"end": 639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 1018,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 645,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 731,
											"end": 734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 791,
											"end": 796,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 759,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 759,
											"end": 797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 797,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 759,
											"end": 797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 813,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 876,
											"end": 882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 871,
											"end": 874,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 813,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 813,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 813,
											"end": 883,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 813,
											"end": 883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 806,
											"end": 883,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 806,
											"end": 883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 892,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 950,
											"end": 956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 945,
											"end": 948,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 938,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 931,
											"end": 936,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 927,
											"end": 943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 892,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 892,
											"end": 957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 892,
											"end": 957,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 892,
											"end": 957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 982,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 982,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 982,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 982,
											"end": 1011,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 982,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 977,
											"end": 980,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 735,
											"end": 1018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 1018,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 645,
											"end": 1018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 1018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 1018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 1018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1333,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1024,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1175,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1216,
											"end": 1220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1232,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1206,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1210,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1233,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1321,
											"end": 1325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1250,
											"end": 1326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1326,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1250,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1333,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1333,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1339,
											"end": 1415,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1339,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1339,
											"end": 1415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1339,
											"end": 1415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1339,
											"end": 1415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1339,
											"end": 1415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1536,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1421,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1523,
											"end": 1528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1506,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1506,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1504,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1760,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1542,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1673,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1660,
											"end": 1669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1656,
											"end": 1674,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1748,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1684,
											"end": 1753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1753,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1684,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1760,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1843,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1766,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1837,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1821,
											"end": 1837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1821,
											"end": 1837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1843,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1967,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1849,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1954,
											"end": 1959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1936,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1936,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1934,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2050,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1973,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2050,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2174,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2056,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2143,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2167,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2143,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2141,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2168,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2174,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2174,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2360,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2180,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2225,
											"end": 2226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2306,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2329,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2322,
											"end": 2323,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2315,
											"end": 2330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2353,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2354,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2686,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2366,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2416,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2448,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2441,
											"end": 2445,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2488,
											"end": 2492,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2515,
											"end": 2533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2505,
											"end": 2586,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 2563,
											"end": 2569,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2576,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2586,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2505,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2635,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2625,
											"end": 2631,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2622,
											"end": 2636,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2602,
											"end": 2620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2637,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2596,
											"end": 2680,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2652,
											"end": 2670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2680,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2596,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2686,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2832,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2692,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2766,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2766,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2824,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2817,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2825,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 3687,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2860,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2985,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 2986,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3009,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3009,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3009,
											"end": 3045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3009,
											"end": 3045,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3009,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3119,
											"end": 3122,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3061,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3131,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3061,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3131,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3163,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3164,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3178,
											"end": 3179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3337,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3337,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3173,
											"end": 3337,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3352,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3346,
											"end": 3681,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3681,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3346,
											"end": 3681,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3140,
											"end": 3681,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3337,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3173,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3261,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3253,
											"end": 3262,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3251,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3238,
											"end": 3263,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3233,
											"end": 3236,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3226,
											"end": 3264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3324,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3325,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3301,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3293,
											"end": 3326,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3284,
											"end": 3327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3327,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3173,
											"end": 3337,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3681,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3346,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3413,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3450,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3413,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3473,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3640,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3486,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3507,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3640,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3486,
											"end": 3640,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 3582,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3559,
											"end": 3562,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3583,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3625,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3615,
											"end": 3622,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3600,
											"end": 3626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3600,
											"end": 3626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3526,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3486,
											"end": 3640,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3640,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3486,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3670,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3667,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3660,
											"end": 3671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3671,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3353,
											"end": 3681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3353,
											"end": 3681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3681,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3140,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2947,
											"end": 3687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2947,
											"end": 3687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 3687,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 3687,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 3687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 3687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 3687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3819,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3693,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3768,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3813,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3748,
											"end": 3813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3748,
											"end": 3813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3825,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 4033,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3891,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3950,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3992,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4001,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4019,
											"end": 4024,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4001,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4001,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4001,
											"end": 4025,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4001,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3992,
											"end": 4026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4026,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3992,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3974,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4027,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3974,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3961,
											"end": 4027,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3961,
											"end": 4027,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 4033,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 4033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 4033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 4033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4039,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4089,
											"end": 4098,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4153,
											"end": 4158,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4122,
											"end": 4159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4122,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4310,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4171,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4234,
											"end": 4243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4298,
											"end": 4303,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4267,
											"end": 4304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4304,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4267,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4254,
											"end": 4304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4254,
											"end": 4304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4473,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4316,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4416,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4460,
											"end": 4465,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4416,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4416,
											"end": 4466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4416,
											"end": 4466,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4416,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 5250,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4479,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4753,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 4739,
											"end": 4748,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4735,
											"end": 4754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4754,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4832,
											"end": 4833,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4830,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 4834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4808,
											"end": 4814,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4764,
											"end": 4835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4835,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4764,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4913,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4902,
											"end": 4911,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4889,
											"end": 4895,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4845,
											"end": 4917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4917,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4845,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4962,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4954,
											"end": 4974,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4938,
											"end": 4947,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4952,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4927,
											"end": 4975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5060,
											"end": 5064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5051,
											"end": 5057,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4992,
											"end": 5065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 5065,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4992,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5075,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5156,
											"end": 5158,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5145,
											"end": 5154,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5138,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5075,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5075,
											"end": 5160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5075,
											"end": 5160,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5075,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5238,
											"end": 5241,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5227,
											"end": 5236,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5220,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5170,
											"end": 5243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5243,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5170,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 5250,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 5250,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 5250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 5250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 5250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 5250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 5250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 5250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 5250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5331,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5256,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5289,
											"end": 5295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5324,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5316,
											"end": 5325,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5325,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5331,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5454,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 5337,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5436,
											"end": 5448,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 5705,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5583,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5674,
											"end": 5679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 5656,
											"end": 5680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5680,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5656,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5681,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5685,
											"end": 5697,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 5705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 5705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5854,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5711,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5768,
											"end": 5773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5793,
											"end": 5806,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5815,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5842,
											"end": 5847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5815,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5815,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5815,
											"end": 5848,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5815,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5854,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5711,
											"end": 5854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5860,
											"end": 6211,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5860,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5981,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5967,
											"end": 5976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5958,
											"end": 5965,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5954,
											"end": 5977,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5950,
											"end": 5982,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5947,
											"end": 6066,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5947,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5947,
											"end": 6066,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5985,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5985,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 5985,
											"end": 6064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5985,
											"end": 6064,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5985,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5947,
											"end": 6066,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5947,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6105,
											"end": 6106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 6186,
											"end": 6193,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6177,
											"end": 6183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6166,
											"end": 6175,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6130,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6194,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 6130,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6076,
											"end": 6204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5860,
											"end": 6211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5860,
											"end": 6211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5860,
											"end": 6211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5860,
											"end": 6211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5860,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6303,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6217,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6263,
											"end": 6270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6309,
											"end": 6469,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 6309,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 6419,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6428,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6455,
											"end": 6460,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6428,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6428,
											"end": 6461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6428,
											"end": 6461,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6428,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6419,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6419,
											"end": 6462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6419,
											"end": 6462,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6419,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6401,
											"end": 6463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6388,
											"end": 6463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6388,
											"end": 6463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6309,
											"end": 6469,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6309,
											"end": 6469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6309,
											"end": 6469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6309,
											"end": 6469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6624,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6475,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6611,
											"end": 6616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 6571,
											"end": 6617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6617,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6571,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6569,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6559,
											"end": 6618,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 7282,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 6630,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 6872,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6858,
											"end": 6867,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6854,
											"end": 6873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6846,
											"end": 6873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6951,
											"end": 6952,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6949,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6927,
											"end": 6933,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6883,
											"end": 6954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7032,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6964,
											"end": 7036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7093,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7068,
											"end": 7070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7057,
											"end": 7066,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7053,
											"end": 7071,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7111,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7179,
											"end": 7183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7170,
											"end": 7176,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7111,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 7111,
											"end": 7184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7111,
											"end": 7184,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7111,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7103,
											"end": 7184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7103,
											"end": 7184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7271,
											"end": 7273,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7260,
											"end": 7269,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7256,
											"end": 7274,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7247,
											"end": 7253,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 7194,
											"end": 7275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7275,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7194,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 7282,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 7282,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 7282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 7282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 7282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 7282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 7282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 7282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7384,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 7288,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7325,
											"end": 7332,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7372,
											"end": 7377,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 7354,
											"end": 7378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7354,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7343,
											"end": 7378,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7343,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7390,
											"end": 7508,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 7390,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7477,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7495,
											"end": 7500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7477,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 7477,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7477,
											"end": 7501,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7477,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7390,
											"end": 7508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7390,
											"end": 7508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7390,
											"end": 7508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7514,
											"end": 8148,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 7514,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7706,
											"end": 7710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7747,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7733,
											"end": 7742,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7729,
											"end": 7748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 7826,
											"end": 7827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7811,
											"end": 7828,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7808,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 7758,
											"end": 7829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7829,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 7758,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7839,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 7907,
											"end": 7909,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7896,
											"end": 7905,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7883,
											"end": 7889,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7839,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 7839,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7839,
											"end": 7911,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 7839,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7921,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7989,
											"end": 7991,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7978,
											"end": 7987,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7974,
											"end": 7992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7971,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7921,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 7921,
											"end": 7993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7921,
											"end": 7993,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7921,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8040,
											"end": 8049,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8034,
											"end": 8038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8050,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8025,
											"end": 8027,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8014,
											"end": 8023,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8010,
											"end": 8028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8003,
											"end": 8051,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8068,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8136,
											"end": 8140,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8068,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 8068,
											"end": 8141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8068,
											"end": 8141,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8068,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8060,
											"end": 8141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8060,
											"end": 8141,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7514,
											"end": 8148,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 7514,
											"end": 8148,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7514,
											"end": 8148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7514,
											"end": 8148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7514,
											"end": 8148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7514,
											"end": 8148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7514,
											"end": 8148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7514,
											"end": 8148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8154,
											"end": 8271,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 8154,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8260,
											"end": 8261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8253,
											"end": 8265,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8457,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8277,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8402,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8322,
											"end": 8323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8315,
											"end": 8403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8422,
											"end": 8426,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 8419,
											"end": 8420,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8412,
											"end": 8427,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8446,
											"end": 8450,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8443,
											"end": 8444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 8451,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8744,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 8463,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8546,
											"end": 8573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 8568,
											"end": 8572,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8546,
											"end": 8573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 8546,
											"end": 8573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8546,
											"end": 8573,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 8546,
											"end": 8573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8538,
											"end": 8544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8534,
											"end": 8574,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8676,
											"end": 8682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8664,
											"end": 8674,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8661,
											"end": 8683,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8640,
											"end": 8658,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8628,
											"end": 8638,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8659,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 8684,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 8619,
											"end": 8707,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8619,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 8619,
											"end": 8707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8687,
											"end": 8705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8619,
											"end": 8707,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 8619,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8727,
											"end": 8737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8723,
											"end": 8725,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8716,
											"end": 8738,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8506,
											"end": 8744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8750,
											"end": 8879,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 8750,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8784,
											"end": 8790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8811,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 8811,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 8811,
											"end": 8831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8811,
											"end": 8831,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 8811,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8801,
											"end": 8831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8801,
											"end": 8831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8840,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8868,
											"end": 8872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8860,
											"end": 8866,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8840,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 8840,
											"end": 8873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8840,
											"end": 8873,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8840,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8750,
											"end": 8879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8750,
											"end": 8879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8750,
											"end": 8879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8750,
											"end": 8879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9008,
											"end": 9130,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 9008,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9081,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 9099,
											"end": 9104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9081,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 9081,
											"end": 9105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9081,
											"end": 9105,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 9081,
											"end": 9105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9074,
											"end": 9079,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9106,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9061,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 9061,
											"end": 9124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9120,
											"end": 9121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9117,
											"end": 9118,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9110,
											"end": 9122,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9061,
											"end": 9124,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 9061,
											"end": 9124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9008,
											"end": 9130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9008,
											"end": 9130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9279,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 9136,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9218,
											"end": 9231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9209,
											"end": 9231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9209,
											"end": 9231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9240,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 9267,
											"end": 9272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9240,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 9240,
											"end": 9273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9240,
											"end": 9273,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 9240,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9279,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9285,
											"end": 9394,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 9285,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9335,
											"end": 9342,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 9382,
											"end": 9387,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9364,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 9364,
											"end": 9388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9364,
											"end": 9388,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 9364,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9353,
											"end": 9388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9353,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9285,
											"end": 9394,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9285,
											"end": 9394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9285,
											"end": 9394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9285,
											"end": 9394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9400,
											"end": 9548,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 9400,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9486,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9517,
											"end": 9522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9486,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 9486,
											"end": 9523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9486,
											"end": 9523,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9486,
											"end": 9523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9479,
											"end": 9484,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9476,
											"end": 9524,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9466,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9466,
											"end": 9542,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9538,
											"end": 9539,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9535,
											"end": 9536,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9540,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9466,
											"end": 9542,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9466,
											"end": 9542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9400,
											"end": 9548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9400,
											"end": 9548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 9723,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 9554,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9624,
											"end": 9629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9655,
											"end": 9661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9649,
											"end": 9662,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9640,
											"end": 9662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9711,
											"end": 9716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 9671,
											"end": 9717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9717,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9671,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 9723,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 9723,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 9723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 9723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9554,
											"end": 9723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9729,
											"end": 9819,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 9729,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9763,
											"end": 9770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9806,
											"end": 9811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9799,
											"end": 9812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9792,
											"end": 9813,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9781,
											"end": 9813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9781,
											"end": 9813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9729,
											"end": 9819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9729,
											"end": 9819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9729,
											"end": 9819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9729,
											"end": 9819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9941,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 9825,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9895,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 9910,
											"end": 9915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9895,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 9895,
											"end": 9916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9895,
											"end": 9916,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 9895,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9888,
											"end": 9893,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9917,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9875,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 9875,
											"end": 9935,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9931,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9929,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9921,
											"end": 9933,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9875,
											"end": 9935,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 9875,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 10084,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 9947,
											"end": 10084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10032,
											"end": 10038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10026,
											"end": 10039,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10048,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10072,
											"end": 10077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10048,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 10048,
											"end": 10078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10048,
											"end": 10078,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10048,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 10084,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 10084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 10084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 10084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 10084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10148,
											"end": 11693,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 10148,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10240,
											"end": 10245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10284,
											"end": 10288,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 10272,
											"end": 10281,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10267,
											"end": 10270,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10282,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10259,
											"end": 10289,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 10292,
											"end": 10371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10391,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 10407,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 10391,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 10391,
											"end": 10412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10391,
											"end": 10412,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 10391,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10382,
											"end": 10412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10382,
											"end": 10412,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10477,
											"end": 10478,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10517,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 10570,
											"end": 10573,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10561,
											"end": 10567,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10559,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10546,
											"end": 10568,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10517,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 10517,
											"end": 10574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10517,
											"end": 10574,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 10517,
											"end": 10574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10510,
											"end": 10514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10503,
											"end": 10508,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10499,
											"end": 10515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10492,
											"end": 10575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10422,
											"end": 10586,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10656,
											"end": 10658,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10697,
											"end": 10754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 10750,
											"end": 10753,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10730,
											"end": 10739,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10726,
											"end": 10748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10697,
											"end": 10754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 10697,
											"end": 10754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10697,
											"end": 10754,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 10697,
											"end": 10754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10690,
											"end": 10694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10679,
											"end": 10695,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10672,
											"end": 10755,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10596,
											"end": 10766,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10885,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 10938,
											"end": 10941,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10929,
											"end": 10935,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10918,
											"end": 10927,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10914,
											"end": 10936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 10885,
											"end": 10942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10942,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 10885,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10878,
											"end": 10882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10871,
											"end": 10876,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10867,
											"end": 10883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10860,
											"end": 10943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10776,
											"end": 10954,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11032,
											"end": 11034,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11073,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 11126,
											"end": 11129,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11117,
											"end": 11123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11106,
											"end": 11115,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11102,
											"end": 11124,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11073,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 11073,
											"end": 11130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11073,
											"end": 11130,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 11073,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11066,
											"end": 11070,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11059,
											"end": 11064,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11055,
											"end": 11071,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11048,
											"end": 11131,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10964,
											"end": 11142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11219,
											"end": 11222,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 11261,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 11314,
											"end": 11317,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11311,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11294,
											"end": 11303,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11290,
											"end": 11312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11261,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 11261,
											"end": 11318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11261,
											"end": 11318,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 11261,
											"end": 11318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11254,
											"end": 11258,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 11247,
											"end": 11252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11243,
											"end": 11259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11236,
											"end": 11319,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11152,
											"end": 11330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11389,
											"end": 11392,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 11431,
											"end": 11491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 11487,
											"end": 11490,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11478,
											"end": 11484,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11467,
											"end": 11476,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11463,
											"end": 11485,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 11431,
											"end": 11491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11491,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 11431,
											"end": 11491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11428,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 11417,
											"end": 11422,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11413,
											"end": 11429,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11406,
											"end": 11492,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11340,
											"end": 11503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11572,
											"end": 11575,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 11614,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 11670,
											"end": 11673,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11667,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11650,
											"end": 11659,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11646,
											"end": 11668,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11614,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 11614,
											"end": 11674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11614,
											"end": 11674,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 11614,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11611,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 11600,
											"end": 11605,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11596,
											"end": 11612,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11513,
											"end": 11686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10148,
											"end": 11693,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10148,
											"end": 11693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10148,
											"end": 11693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10148,
											"end": 11693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10148,
											"end": 11693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11699,
											"end": 11819,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 11699,
											"end": 11819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11771,
											"end": 11794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 11788,
											"end": 11793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11771,
											"end": 11794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 11771,
											"end": 11794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11771,
											"end": 11794,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 11771,
											"end": 11794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11764,
											"end": 11769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11761,
											"end": 11795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11751,
											"end": 11813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 11751,
											"end": 11813,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11809,
											"end": 11810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11806,
											"end": 11807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11799,
											"end": 11811,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11751,
											"end": 11813,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 11751,
											"end": 11813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11699,
											"end": 11819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11699,
											"end": 11819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11825,
											"end": 11966,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 11825,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11881,
											"end": 11886,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11912,
											"end": 11918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11906,
											"end": 11919,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11897,
											"end": 11919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11897,
											"end": 11919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11928,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 11954,
											"end": 11959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11928,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 11928,
											"end": 11960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11928,
											"end": 11960,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 11928,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11825,
											"end": 11966,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11825,
											"end": 11966,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11825,
											"end": 11966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11825,
											"end": 11966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11825,
											"end": 11966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12022,
											"end": 14118,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 12022,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12106,
											"end": 12111,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12150,
											"end": 12156,
											"name": "PUSH",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 12138,
											"end": 12147,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12133,
											"end": 12136,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12129,
											"end": 12148,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12125,
											"end": 12157,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 12122,
											"end": 12241,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12122,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 12122,
											"end": 12241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12160,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 12160,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 12160,
											"end": 12239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12160,
											"end": 12239,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 12160,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12122,
											"end": 12241,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 12122,
											"end": 12241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12259,
											"end": 12282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 12275,
											"end": 12281,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 12259,
											"end": 12282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 12259,
											"end": 12282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12259,
											"end": 12282,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 12259,
											"end": 12282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12250,
											"end": 12282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12250,
											"end": 12282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12345,
											"end": 12346,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12385,
											"end": 12445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 12441,
											"end": 12444,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12432,
											"end": 12438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12421,
											"end": 12430,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12417,
											"end": 12439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12385,
											"end": 12445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 12385,
											"end": 12445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12385,
											"end": 12445,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 12385,
											"end": 12445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12378,
											"end": 12382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12371,
											"end": 12376,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12367,
											"end": 12383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12360,
											"end": 12446,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12292,
											"end": 12457,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12520,
											"end": 12522,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12561,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 12617,
											"end": 12620,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12608,
											"end": 12614,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12597,
											"end": 12606,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12561,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 12561,
											"end": 12621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12561,
											"end": 12621,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 12561,
											"end": 12621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12554,
											"end": 12558,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12547,
											"end": 12552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12543,
											"end": 12559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 12622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12467,
											"end": 12633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12696,
											"end": 12698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12737,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 12806,
											"end": 12809,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12797,
											"end": 12803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12786,
											"end": 12795,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12782,
											"end": 12804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12737,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 12737,
											"end": 12810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12737,
											"end": 12810,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 12737,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12730,
											"end": 12734,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12723,
											"end": 12728,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12719,
											"end": 12735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12712,
											"end": 12811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12643,
											"end": 12822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12884,
											"end": 12886,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 12925,
											"end": 12982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 12978,
											"end": 12981,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12969,
											"end": 12975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12958,
											"end": 12967,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12954,
											"end": 12976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12925,
											"end": 12982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 12925,
											"end": 12982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12925,
											"end": 12982,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 12925,
											"end": 12982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12918,
											"end": 12922,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 12911,
											"end": 12916,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12907,
											"end": 12923,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12900,
											"end": 12983,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12832,
											"end": 12994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13064,
											"end": 13067,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 13106,
											"end": 13198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 13194,
											"end": 13197,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13185,
											"end": 13191,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13174,
											"end": 13183,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13170,
											"end": 13192,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13106,
											"end": 13198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 13106,
											"end": 13198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13106,
											"end": 13198,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 13106,
											"end": 13198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13099,
											"end": 13103,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 13092,
											"end": 13097,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13088,
											"end": 13104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13081,
											"end": 13199,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13004,
											"end": 13210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13278,
											"end": 13281,
											"name": "PUSH",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 13320,
											"end": 13379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 13375,
											"end": 13378,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13366,
											"end": 13372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13355,
											"end": 13364,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13351,
											"end": 13373,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13320,
											"end": 13379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 13320,
											"end": 13379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13320,
											"end": 13379,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 13320,
											"end": 13379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13313,
											"end": 13317,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 13306,
											"end": 13311,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13302,
											"end": 13318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13295,
											"end": 13380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13220,
											"end": 13391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13459,
											"end": 13462,
											"name": "PUSH",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 13501,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 13556,
											"end": 13559,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13547,
											"end": 13553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13536,
											"end": 13545,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13532,
											"end": 13554,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13501,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 13501,
											"end": 13560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13501,
											"end": 13560,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 13501,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13494,
											"end": 13498,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 13487,
											"end": 13492,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13483,
											"end": 13499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13476,
											"end": 13561,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13401,
											"end": 13572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13641,
											"end": 13644,
											"name": "PUSH",
											"source": 4,
											"value": "1A0"
										},
										{
											"begin": 13683,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 13739,
											"end": 13742,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13730,
											"end": 13736,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13719,
											"end": 13728,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13715,
											"end": 13737,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13683,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 13683,
											"end": 13743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13683,
											"end": 13743,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 13683,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13676,
											"end": 13680,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 13669,
											"end": 13674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13665,
											"end": 13681,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13658,
											"end": 13744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13582,
											"end": 13755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13816,
											"end": 13819,
											"name": "PUSH",
											"source": 4,
											"value": "1C0"
										},
										{
											"begin": 13860,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 13916,
											"end": 13919,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13907,
											"end": 13913,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13896,
											"end": 13905,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13892,
											"end": 13914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13860,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 13860,
											"end": 13920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13860,
											"end": 13920,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 13860,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13851,
											"end": 13857,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 13844,
											"end": 13849,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13833,
											"end": 13921,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13765,
											"end": 13932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "PUSH",
											"source": 4,
											"value": "1E0"
										},
										{
											"begin": 14039,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 14095,
											"end": 14098,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14086,
											"end": 14092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14075,
											"end": 14084,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 14071,
											"end": 14093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14039,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 14039,
											"end": 14099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14039,
											"end": 14099,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 14039,
											"end": 14099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14030,
											"end": 14036,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 14023,
											"end": 14028,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14019,
											"end": 14037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14012,
											"end": 14100,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13942,
											"end": 14111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12022,
											"end": 14118,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12022,
											"end": 14118,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12022,
											"end": 14118,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12022,
											"end": 14118,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12022,
											"end": 14118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14124,
											"end": 14524,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 14124,
											"end": 14524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14218,
											"end": 14224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14267,
											"end": 14270,
											"name": "PUSH",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 14255,
											"end": 14264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14246,
											"end": 14253,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14242,
											"end": 14265,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14238,
											"end": 14271,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 14235,
											"end": 14355,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14235,
											"end": 14355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 14235,
											"end": 14355,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14274,
											"end": 14353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 14274,
											"end": 14353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 14274,
											"end": 14353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14274,
											"end": 14353,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 14274,
											"end": 14353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14235,
											"end": 14355,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 14235,
											"end": 14355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14394,
											"end": 14395,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14419,
											"end": 14507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 14499,
											"end": 14506,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14490,
											"end": 14496,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14479,
											"end": 14488,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 14475,
											"end": 14497,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14419,
											"end": 14507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 14419,
											"end": 14507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14419,
											"end": 14507,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 14419,
											"end": 14507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14409,
											"end": 14507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14365,
											"end": 14517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14124,
											"end": 14524,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14124,
											"end": 14524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14124,
											"end": 14524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14124,
											"end": 14524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14124,
											"end": 14524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								},
								"5AB016CD407EEB7EB6C98D673DEFA07FAF609E036677B3FD39539CCDA5E8E8FE": "513a57696c6c206974207261696e20746f6461793f20413a3120666f72207965732e203020666f72206e6f2e"
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol",
								"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol",
								"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ancillaryData()": "65599057",
							"getSettledData()": "f25ffb20",
							"requestData()": "606deecd",
							"settleRequest()": "fa776152"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ancillaryData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSettledData\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":\"OO_GettingStarted\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol\":{\"keccak256\":\"0x33e27f74463f4b4ab1e4b8ecdd5fb5fc30ee8b0e7be182a7ac1eaa0b7ed523a0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://82bfb6efcc1e06b54beb7085918ad5c67ab146ecd54c5caa38ef1028b6be1b78\",\"dweb:/ipfs/QmdhdVsdFJ3Nvm9xJK9fLTTWhw6qEfAtJzC4iDGLPo2har\"]},\"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol\":{\"keccak256\":\"0xfd8657b45e330608fd1978812dfc1923ef157624d9f2d4b2c555f57f6234ea6f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3e479707692c3f996b6bcbab944d95f3748383bbd4ce7cd614a7468415f539d9\",\"dweb:/ipfs/QmZj63CBeMEaKaKSmw3D7F8B3kYEDBosaAGjH13hgE16VJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 86,
								"contract": "gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol:OO_GettingStarted",
								"label": "oo",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(OptimisticOracleV2Interface)561"
							},
							{
								"astId": 92,
								"contract": "gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol:OO_GettingStarted",
								"label": "identifier",
								"offset": 0,
								"slot": "1",
								"type": "t_bytes32"
							},
							{
								"astId": 98,
								"contract": "gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol:OO_GettingStarted",
								"label": "ancillaryData",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes_storage"
							},
							{
								"astId": 101,
								"contract": "gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol:OO_GettingStarted",
								"label": "requestTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_contract(OptimisticOracleV2Interface)561": {
								"encoding": "inplace",
								"label": "contract OptimisticOracleV2Interface",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
				"FinderInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "interfaceName",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "implementationAddress",
									"type": "address"
								}
							],
							"name": "changeImplementationAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "interfaceName",
									"type": "bytes32"
								}
							],
							"name": "getImplementationAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Examples are the Oracle or Store interfaces.",
						"kind": "dev",
						"methods": {
							"changeImplementationAddress(bytes32,address)": {
								"params": {
									"implementationAddress": "address of the deployed contract that implements the interface.",
									"interfaceName": "bytes32 encoding of the interface name that is either changed or registered."
								}
							},
							"getImplementationAddress(bytes32)": {
								"params": {
									"interfaceName": "queried interface."
								},
								"returns": {
									"_0": "implementationAddress address of the deployed contract that implements the interface."
								}
							}
						},
						"title": "Provides addresses of the live contracts implementing certain interfaces.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"changeImplementationAddress(bytes32,address)": "31f9665e",
							"getImplementationAddress(bytes32)": "aafd5e40"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"changeImplementationAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"}],\"name\":\"getImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Examples are the Oracle or Store interfaces.\",\"kind\":\"dev\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"params\":{\"implementationAddress\":\"address of the deployed contract that implements the interface.\",\"interfaceName\":\"bytes32 encoding of the interface name that is either changed or registered.\"}},\"getImplementationAddress(bytes32)\":{\"params\":{\"interfaceName\":\"queried interface.\"},\"returns\":{\"_0\":\"implementationAddress address of the deployed contract that implements the interface.\"}}},\"title\":\"Provides addresses of the live contracts implementing certain interfaces.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"notice\":\"Updates the address of the contract that implements `interfaceName`.\"},\"getImplementationAddress(bytes32)\":{\"notice\":\"Gets the address of the contract that implements the given `interfaceName`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":\"FinderInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"changeImplementationAddress(bytes32,address)": {
								"notice": "Updates the address of the contract that implements `interfaceName`."
							},
							"getImplementationAddress(bytes32)": {
								"notice": "Gets the address of the contract that implements the given `interfaceName`."
							}
						},
						"version": 1
					}
				}
			},
			"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol": {
				"OptimisticOracleV2Interface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "disputer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "proposedPrice",
									"type": "int256"
								}
							],
							"name": "DisputePrice",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "proposedPrice",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expirationTimestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "ProposePrice",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "finalFee",
									"type": "uint256"
								}
							],
							"name": "RequestPrice",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "disputer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "price",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "payout",
									"type": "uint256"
								}
							],
							"name": "Settle",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ancillaryBytesLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultLiveness",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								}
							],
							"name": "disputePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBond",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "disputer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								}
							],
							"name": "disputePriceFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBond",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finder",
							"outputs": [
								{
									"internalType": "contract FinderInterface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								}
							],
							"name": "getRequest",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "proposer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "disputer",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "settled",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "bool",
													"name": "eventBased",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "refundOnDispute",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "callbackOnPriceProposed",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "callbackOnPriceDisputed",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "callbackOnPriceSettled",
													"type": "bool"
												},
												{
													"internalType": "uint256",
													"name": "bond",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "customLiveness",
													"type": "uint256"
												}
											],
											"internalType": "struct OptimisticOracleV2Interface.RequestSettings",
											"name": "requestSettings",
											"type": "tuple"
										},
										{
											"internalType": "int256",
											"name": "proposedPrice",
											"type": "int256"
										},
										{
											"internalType": "int256",
											"name": "resolvedPrice",
											"type": "int256"
										},
										{
											"internalType": "uint256",
											"name": "expirationTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "reward",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "finalFee",
											"type": "uint256"
										}
									],
									"internalType": "struct OptimisticOracleV2Interface.Request",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								}
							],
							"name": "getState",
							"outputs": [
								{
									"internalType": "enum OptimisticOracleV2Interface.State",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								}
							],
							"name": "hasPrice",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								},
								{
									"internalType": "int256",
									"name": "proposedPrice",
									"type": "int256"
								}
							],
							"name": "proposePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBond",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								},
								{
									"internalType": "int256",
									"name": "proposedPrice",
									"type": "int256"
								}
							],
							"name": "proposePriceFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBond",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								},
								{
									"internalType": "contract IERC20",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "requestPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBond",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "requests",
							"outputs": [
								{
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "disputer",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "settled",
									"type": "bool"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "eventBased",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "refundOnDispute",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "callbackOnPriceProposed",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "callbackOnPriceDisputed",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "callbackOnPriceSettled",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "bond",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "customLiveness",
											"type": "uint256"
										}
									],
									"internalType": "struct OptimisticOracleV2Interface.RequestSettings",
									"name": "requestSettings",
									"type": "tuple"
								},
								{
									"internalType": "int256",
									"name": "proposedPrice",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "resolvedPrice",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "expirationTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "finalFee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "bond",
									"type": "uint256"
								}
							],
							"name": "setBond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBond",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								},
								{
									"internalType": "bool",
									"name": "callbackOnPriceProposed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "callbackOnPriceDisputed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "callbackOnPriceSettled",
									"type": "bool"
								}
							],
							"name": "setCallbacks",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "customLiveness",
									"type": "uint256"
								}
							],
							"name": "setCustomLiveness",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								}
							],
							"name": "setEventBased",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								}
							],
							"name": "setRefundOnDispute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								}
							],
							"name": "settle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "payout",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								}
							],
							"name": "settleAndGetPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "ancillaryData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								}
							],
							"name": "stampAncillaryData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.",
						"kind": "dev",
						"methods": {
							"disputePrice(address,bytes32,uint256,bytes)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"identifier": "price identifier to identify the existing request.",
									"requester": "sender of the initial price request.",
									"timestamp": "timestamp to identify the existing request."
								},
								"returns": {
									"totalBond": "the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was valid (the proposal was incorrect)."
								}
							},
							"disputePriceFor(address,address,bytes32,uint256,bytes)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"disputer": "address to set as the disputer.",
									"identifier": "price identifier to identify the existing request.",
									"requester": "sender of the initial price request.",
									"timestamp": "timestamp to identify the existing request."
								},
								"returns": {
									"totalBond": "the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was value (the proposal was incorrect)."
								}
							},
							"getRequest(address,bytes32,uint256,bytes)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"identifier": "price identifier to identify the existing request.",
									"requester": "sender of the initial price request.",
									"timestamp": "timestamp to identify the existing request."
								},
								"returns": {
									"_0": "the Request data structure."
								}
							},
							"getState(address,bytes32,uint256,bytes)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"identifier": "price identifier to identify the existing request.",
									"requester": "sender of the initial price request.",
									"timestamp": "timestamp to identify the existing request."
								},
								"returns": {
									"_0": "the State enum value."
								}
							},
							"hasPrice(address,bytes32,uint256,bytes)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"identifier": "price identifier to identify the existing request.",
									"requester": "sender of the initial price request.",
									"timestamp": "timestamp to identify the existing request."
								},
								"returns": {
									"_0": "true if price has resolved or settled, false otherwise."
								}
							},
							"proposePrice(address,bytes32,uint256,bytes,int256)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"identifier": "price identifier to identify the existing request.",
									"proposedPrice": "price being proposed.",
									"requester": "sender of the initial price request.",
									"timestamp": "timestamp to identify the existing request."
								},
								"returns": {
									"totalBond": "the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct."
								}
							},
							"proposePriceFor(address,address,bytes32,uint256,bytes,int256)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"identifier": "price identifier to identify the existing request.",
									"proposedPrice": "price being proposed.",
									"proposer": "address to set as the proposer.",
									"requester": "sender of the initial price request.",
									"timestamp": "timestamp to identify the existing request."
								},
								"returns": {
									"totalBond": "the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct."
								}
							},
							"requestPrice(bytes32,uint256,bytes,address,uint256)": {
								"params": {
									"ancillaryData": "ancillary data representing additional args being passed with the price request.",
									"currency": "ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.",
									"identifier": "price identifier being requested.",
									"reward": "reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,               which could make sense if the contract requests and proposes the value in the same call or               provides its own reward system.",
									"timestamp": "timestamp of the price being requested."
								},
								"returns": {
									"totalBond": "default bond (final fee) + final fee that the proposer and disputer will be required to pay. This can be changed with a subsequent call to setBond()."
								}
							},
							"setBond(bytes32,uint256,bytes,uint256)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"bond": "custom bond amount to set.",
									"identifier": "price identifier to identify the existing request.",
									"timestamp": "timestamp to identify the existing request."
								},
								"returns": {
									"totalBond": "new bond + final fee that the proposer and disputer will be required to pay. This can be changed again with a subsequent call to setBond()."
								}
							},
							"setCallbacks(bytes32,uint256,bytes,bool,bool,bool)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"callbackOnPriceDisputed": "whether to enable the callback onPriceDisputed.",
									"callbackOnPriceProposed": "whether to enable the callback onPriceProposed.",
									"callbackOnPriceSettled": "whether to enable the callback onPriceSettled.",
									"identifier": "price identifier to identify the existing request.",
									"timestamp": "timestamp to identify the existing request."
								}
							},
							"setCustomLiveness(bytes32,uint256,bytes,uint256)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"customLiveness": "new custom liveness.",
									"identifier": "price identifier to identify the existing request.",
									"timestamp": "timestamp to identify the existing request."
								}
							},
							"setEventBased(bytes32,uint256,bytes)": {
								"details": "Calling this method has a few impacts on the request: 1. The timestamp at which the request is evaluated is the time of the proposal, not the timestamp associated    with the request. 2. The proposer cannot propose the \"too early\" value (TOO_EARLY_RESPONSE). This is to ensure that a proposer who    prematurely proposes a response loses their bond. 3. RefundoOnDispute is automatically set, meaning disputes trigger the reward to be automatically refunded to    the requesting contract.",
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"identifier": "price identifier to identify the existing request.",
									"timestamp": "timestamp to identify the existing request."
								}
							},
							"setRefundOnDispute(bytes32,uint256,bytes)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"identifier": "price identifier to identify the existing request.",
									"timestamp": "timestamp to identify the existing request."
								}
							},
							"settle(address,bytes32,uint256,bytes)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"identifier": "price identifier to identify the existing request.",
									"requester": "sender of the initial price request.",
									"timestamp": "timestamp to identify the existing request."
								},
								"returns": {
									"payout": "the amount that the \"winner\" (proposer or disputer) receives on settlement. This amount includes the returned bonds as well as additional rewards."
								}
							},
							"settleAndGetPrice(bytes32,uint256,bytes)": {
								"params": {
									"ancillaryData": "ancillary data of the price being requested.",
									"identifier": "price identifier to identify the existing request.",
									"timestamp": "timestamp to identify the existing request."
								},
								"returns": {
									"_0": "resolved price."
								}
							}
						},
						"title": "Financial contract facing Oracle interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ancillaryBytesLimit()": "c371dda7",
							"defaultLiveness()": "fe4e1983",
							"disputePrice(address,bytes32,uint256,bytes)": "fba7f1e3",
							"disputePriceFor(address,address,bytes32,uint256,bytes)": "76c7823f",
							"finder()": "b9a3c84c",
							"getCurrentTime()": "29cb924d",
							"getRequest(address,bytes32,uint256,bytes)": "a9904f9b",
							"getState(address,bytes32,uint256,bytes)": "ba4b930c",
							"hasPrice(address,bytes32,uint256,bytes)": "bc58ccaa",
							"proposePrice(address,bytes32,uint256,bytes,int256)": "b8b4f908",
							"proposePriceFor(address,address,bytes32,uint256,bytes,int256)": "7c82288f",
							"requestPrice(bytes32,uint256,bytes,address,uint256)": "11df92f1",
							"requests(bytes32)": "9d866985",
							"setBond(bytes32,uint256,bytes,uint256)": "ad5a755a",
							"setCallbacks(bytes32,uint256,bytes,bool,bool,bool)": "f327b075",
							"setCustomLiveness(bytes32,uint256,bytes,uint256)": "473c45fe",
							"setEventBased(bytes32,uint256,bytes)": "120698af",
							"setRefundOnDispute(bytes32,uint256,bytes)": "91f58dcb",
							"settle(address,bytes32,uint256,bytes)": "5e9a79a9",
							"settleAndGetPrice(bytes32,uint256,bytes)": "53b59239",
							"stampAncillaryData(bytes,address)": "af5d2f39"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"DisputePrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"ProposePrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"name\":\"RequestPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Settle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ancillaryBytesLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"disputePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"disputePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"eventBased\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refundOnDispute\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceProposed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceDisputed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceSettled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct OptimisticOracleV2Interface.RequestSettings\",\"name\":\"requestSettings\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"internalType\":\"struct OptimisticOracleV2Interface.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"enum OptimisticOracleV2Interface.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"proposePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"proposePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"requestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"eventBased\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refundOnDispute\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceProposed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceDisputed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceSettled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct OptimisticOracleV2Interface.RequestSettings\",\"name\":\"requestSettings\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"name\":\"setBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceProposed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceDisputed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceSettled\",\"type\":\"bool\"}],\"name\":\"setCallbacks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"name\":\"setCustomLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"setEventBased\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"setRefundOnDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"settleAndGetPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"stampAncillaryData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\",\"kind\":\"dev\",\"methods\":{\"disputePrice(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was valid (the proposal was incorrect).\"}},\"disputePriceFor(address,address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"disputer\":\"address to set as the disputer.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was value (the proposal was incorrect).\"}},\"getRequest(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"the Request data structure.\"}},\"getState(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"the State enum value.\"}},\"hasPrice(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"true if price has resolved or settled, false otherwise.\"}},\"proposePrice(address,bytes32,uint256,bytes,int256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"proposedPrice\":\"price being proposed.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct.\"}},\"proposePriceFor(address,address,bytes32,uint256,bytes,int256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"proposedPrice\":\"price being proposed.\",\"proposer\":\"address to set as the proposer.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct.\"}},\"requestPrice(bytes32,uint256,bytes,address,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data representing additional args being passed with the price request.\",\"currency\":\"ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\",\"identifier\":\"price identifier being requested.\",\"reward\":\"reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,               which could make sense if the contract requests and proposes the value in the same call or               provides its own reward system.\",\"timestamp\":\"timestamp of the price being requested.\"},\"returns\":{\"totalBond\":\"default bond (final fee) + final fee that the proposer and disputer will be required to pay. This can be changed with a subsequent call to setBond().\"}},\"setBond(bytes32,uint256,bytes,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"bond\":\"custom bond amount to set.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"new bond + final fee that the proposer and disputer will be required to pay. This can be changed again with a subsequent call to setBond().\"}},\"setCallbacks(bytes32,uint256,bytes,bool,bool,bool)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"callbackOnPriceDisputed\":\"whether to enable the callback onPriceDisputed.\",\"callbackOnPriceProposed\":\"whether to enable the callback onPriceProposed.\",\"callbackOnPriceSettled\":\"whether to enable the callback onPriceSettled.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"setCustomLiveness(bytes32,uint256,bytes,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"customLiveness\":\"new custom liveness.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"setEventBased(bytes32,uint256,bytes)\":{\"details\":\"Calling this method has a few impacts on the request: 1. The timestamp at which the request is evaluated is the time of the proposal, not the timestamp associated    with the request. 2. The proposer cannot propose the \\\"too early\\\" value (TOO_EARLY_RESPONSE). This is to ensure that a proposer who    prematurely proposes a response loses their bond. 3. RefundoOnDispute is automatically set, meaning disputes trigger the reward to be automatically refunded to    the requesting contract.\",\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"setRefundOnDispute(bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"settle(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"payout\":\"the amount that the \\\"winner\\\" (proposer or disputer) receives on settlement. This amount includes the returned bonds as well as additional rewards.\"}},\"settleAndGetPrice(bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"resolved price.\"}}},\"title\":\"Financial contract facing Oracle interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"disputePrice(address,bytes32,uint256,bytes)\":{\"notice\":\"Disputes a price value for an existing price request with an active proposal.\"},\"disputePriceFor(address,address,bytes32,uint256,bytes)\":{\"notice\":\"Disputes a price request with an active proposal on another address' behalf. Note: this address will receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\"},\"getRequest(address,bytes32,uint256,bytes)\":{\"notice\":\"Gets the current data structure containing all information about a price request.\"},\"getState(address,bytes32,uint256,bytes)\":{\"notice\":\"Returns the state of a price request.\"},\"hasPrice(address,bytes32,uint256,bytes)\":{\"notice\":\"Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\"},\"proposePrice(address,bytes32,uint256,bytes,int256)\":{\"notice\":\"Proposes a price value for an existing price request.\"},\"proposePriceFor(address,address,bytes32,uint256,bytes,int256)\":{\"notice\":\"Proposes a price value on another address' behalf. Note: this address will receive any rewards that come from this proposal. However, any bonds are pulled from the caller.\"},\"requestPrice(bytes32,uint256,bytes,address,uint256)\":{\"notice\":\"Requests a new price.\"},\"setBond(bytes32,uint256,bytes,uint256)\":{\"notice\":\"Set the proposal bond associated with a price request.\"},\"setCallbacks(bytes32,uint256,bytes,bool,bool,bool)\":{\"notice\":\"Sets which callbacks should be enabled for the request.\"},\"setCustomLiveness(bytes32,uint256,bytes,uint256)\":{\"notice\":\"Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before being auto-resolved.\"},\"setEventBased(bytes32,uint256,bytes)\":{\"notice\":\"Sets the request to be an \\\"event-based\\\" request.\"},\"setRefundOnDispute(bytes32,uint256,bytes)\":{\"notice\":\"Sets the request to refund the reward if the proposal is disputed. This can help to \\\"hedge\\\" the caller in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's bond, so there is still profit to be made even if the reward is refunded.\"},\"settle(address,bytes32,uint256,bytes)\":{\"notice\":\"Attempts to settle an outstanding price request. Will revert if it isn't settleable.\"},\"settleAndGetPrice(bytes32,uint256,bytes)\":{\"notice\":\"Retrieves a price that was previously requested by a caller. Reverts if the request is not settled or settleable. Note: this method is not view so that this call may actually settle the price request if it hasn't been settled.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol\":\"OptimisticOracleV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol\":{\"keccak256\":\"0xfd8657b45e330608fd1978812dfc1923ef157624d9f2d4b2c555f57f6234ea6f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3e479707692c3f996b6bcbab944d95f3748383bbd4ce7cd614a7468415f539d9\",\"dweb:/ipfs/QmZj63CBeMEaKaKSmw3D7F8B3kYEDBosaAGjH13hgE16VJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 338,
								"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
								"label": "requests",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(Request)314_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(Request)314_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct OptimisticOracleV2Interface.Request)",
								"numberOfBytes": "32",
								"value": "t_struct(Request)314_storage"
							},
							"t_struct(Request)314_storage": {
								"encoding": "inplace",
								"label": "struct OptimisticOracleV2Interface.Request",
								"members": [
									{
										"astId": 293,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "proposer",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 295,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "disputer",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 298,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "currency",
										"offset": 0,
										"slot": "2",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 300,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "settled",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 303,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "requestSettings",
										"offset": 0,
										"slot": "3",
										"type": "t_struct(RequestSettings)291_storage"
									},
									{
										"astId": 305,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "proposedPrice",
										"offset": 0,
										"slot": "6",
										"type": "t_int256"
									},
									{
										"astId": 307,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "resolvedPrice",
										"offset": 0,
										"slot": "7",
										"type": "t_int256"
									},
									{
										"astId": 309,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "expirationTime",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 311,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "reward",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 313,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "finalFee",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "352"
							},
							"t_struct(RequestSettings)291_storage": {
								"encoding": "inplace",
								"label": "struct OptimisticOracleV2Interface.RequestSettings",
								"members": [
									{
										"astId": 278,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "eventBased",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 280,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "refundOnDispute",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 282,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "callbackOnPriceProposed",
										"offset": 2,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 284,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "callbackOnPriceDisputed",
										"offset": 3,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 286,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "callbackOnPriceSettled",
										"offset": 4,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 288,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "bond",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 290,
										"contract": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol:OptimisticOracleV2Interface",
										"label": "customLiveness",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"disputePrice(address,bytes32,uint256,bytes)": {
								"notice": "Disputes a price value for an existing price request with an active proposal."
							},
							"disputePriceFor(address,address,bytes32,uint256,bytes)": {
								"notice": "Disputes a price request with an active proposal on another address' behalf. Note: this address will receive any rewards that come from this dispute. However, any bonds are pulled from the caller."
							},
							"getRequest(address,bytes32,uint256,bytes)": {
								"notice": "Gets the current data structure containing all information about a price request."
							},
							"getState(address,bytes32,uint256,bytes)": {
								"notice": "Returns the state of a price request."
							},
							"hasPrice(address,bytes32,uint256,bytes)": {
								"notice": "Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price)."
							},
							"proposePrice(address,bytes32,uint256,bytes,int256)": {
								"notice": "Proposes a price value for an existing price request."
							},
							"proposePriceFor(address,address,bytes32,uint256,bytes,int256)": {
								"notice": "Proposes a price value on another address' behalf. Note: this address will receive any rewards that come from this proposal. However, any bonds are pulled from the caller."
							},
							"requestPrice(bytes32,uint256,bytes,address,uint256)": {
								"notice": "Requests a new price."
							},
							"setBond(bytes32,uint256,bytes,uint256)": {
								"notice": "Set the proposal bond associated with a price request."
							},
							"setCallbacks(bytes32,uint256,bytes,bool,bool,bool)": {
								"notice": "Sets which callbacks should be enabled for the request."
							},
							"setCustomLiveness(bytes32,uint256,bytes,uint256)": {
								"notice": "Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before being auto-resolved."
							},
							"setEventBased(bytes32,uint256,bytes)": {
								"notice": "Sets the request to be an \"event-based\" request."
							},
							"setRefundOnDispute(bytes32,uint256,bytes)": {
								"notice": "Sets the request to refund the reward if the proposal is disputed. This can help to \"hedge\" the caller in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's bond, so there is still profit to be made even if the reward is refunded."
							},
							"settle(address,bytes32,uint256,bytes)": {
								"notice": "Attempts to settle an outstanding price request. Will revert if it isn't settleable."
							},
							"settleAndGetPrice(bytes32,uint256,bytes)": {
								"notice": "Retrieves a price that was previously requested by a caller. Reverts if the request is not settled or settleable. Note: this method is not view so that this call may actually settle the price request if it hasn't been settled."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0",
							"usedErrors": []
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol": {
				"ast": {
					"absolutePath": "gist-fba5d2812d940759f4f7585741b529a4/OO_GettingStarted.sol",
					"exportedSymbols": {
						"FinderInterface": [
							195
						],
						"IERC20": [
							77
						],
						"OO_GettingStarted": [
							175
						],
						"OptimisticOracleV2Interface": [
							561
						]
					},
					"id": 176,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:1"
						},
						{
							"absolutePath": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol",
							"file": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 562,
							"src": "68:149:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OO_GettingStarted",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175
							],
							"name": "OO_GettingStarted",
							"nameLocation": "525:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 86,
									"mutability": "mutable",
									"name": "oo",
									"nameLocation": "661:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "633:104:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_OptimisticOracleV2Interface_$561",
										"typeString": "contract OptimisticOracleV2Interface"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "OptimisticOracleV2Interface",
											"nameLocations": [
												"633:27:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 561,
											"src": "633:27:1"
										},
										"referencedDeclaration": 561,
										"src": "633:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_OptimisticOracleV2Interface_$561",
											"typeString": "contract OptimisticOracleV2Interface"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307836304536313430333330463846453331653738353139304633394331423565356538333363326139",
												"id": 84,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "694:42:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x60E6140330F8FE31e785190F39C1B5e5e833c2a9"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 83,
											"name": "OptimisticOracleV2Interface",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 561,
											"src": "666:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_OptimisticOracleV2Interface_$561_$",
												"typeString": "type(contract OptimisticOracleV2Interface)"
											}
										},
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "666:71:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_OptimisticOracleV2Interface_$561",
											"typeString": "contract OptimisticOracleV2Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 92,
									"mutability": "mutable",
									"name": "identifier",
									"nameLocation": "852:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "844:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 87,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "844:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5945535f4f525f4e4f5f5155455259",
												"id": 90,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "873:17:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9309974e6ae3a6f17ba5a0e7ffaaa9048ae786cf68926e4dfb293a348fda63af",
													"typeString": "literal_string \"YES_OR_NO_QUERY\""
												},
												"value": "YES_OR_NO_QUERY"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9309974e6ae3a6f17ba5a0e7ffaaa9048ae786cf68926e4dfb293a348fda63af",
													"typeString": "literal_string \"YES_OR_NO_QUERY\""
												}
											],
											"id": 89,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "865:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 88,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "865:7:1",
												"typeDescriptions": {}
											}
										},
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "865:26:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "65599057",
									"id": 98,
									"mutability": "mutable",
									"name": "ancillaryData",
									"nameLocation": "1164:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "1151:90:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 93,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1151:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "513a57696c6c206974207261696e20746f6461793f20413a3120666f72207965732e203020666f72206e6f2e",
												"id": 96,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1194:46:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5ab016cd407eeb7eb6c98d673defa07faf609e036677b3fd39539ccda5e8e8fe",
													"typeString": "literal_string \"Q:Will it rain today? A:1 for yes. 0 for no.\""
												},
												"value": "Q:Will it rain today? A:1 for yes. 0 for no."
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_5ab016cd407eeb7eb6c98d673defa07faf609e036677b3fd39539ccda5e8e8fe",
													"typeString": "literal_string \"Q:Will it rain today? A:1 for yes. 0 for no.\""
												}
											],
											"id": 95,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1188:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
												"typeString": "type(bytes storage pointer)"
											},
											"typeName": {
												"id": 94,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1188:5:1",
												"typeDescriptions": {}
											}
										},
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1188:53:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_memory_ptr",
											"typeString": "bytes memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 101,
									"mutability": "mutable",
									"name": "requestTime",
									"nameLocation": "1256:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "1248:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1248:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 100,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1270:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1416:600:1",
										"statements": [
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 104,
														"name": "requestTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1426:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 105,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1446:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1440:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1426:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1426:29:1"
											},
											{
												"assignments": [
													111
												],
												"declarations": [
													{
														"constant": false,
														"id": 111,
														"mutability": "mutable",
														"name": "bondCurrency",
														"nameLocation": "1523:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 139,
														"src": "1516:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 110,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 109,
																"name": "IERC20",
																"nameLocations": [
																	"1516:6:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 77,
																"src": "1516:6:1"
															},
															"referencedDeclaration": 77,
															"src": "1516:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307865366238613543463835343739313431326331663645464337434166363239663544663163373437",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1545:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 112,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1538:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1538:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1516:72:1"
											},
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1647:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 139,
														"src": "1639:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"hexValue": "30",
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1656:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1639:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "identifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1874:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 124,
															"name": "requestTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1886:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 125,
															"name": "ancillaryData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1899:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														{
															"id": 126,
															"name": "bondCurrency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1914:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 127,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1928:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															},
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 120,
															"name": "oo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1858:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_OptimisticOracleV2Interface_$561",
																"typeString": "contract OptimisticOracleV2Interface"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1861:12:1",
														"memberName": "requestPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 355,
														"src": "1858:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_contract$_IERC20_$77_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes32,uint256,bytes memory,contract IERC20,uint256) external returns (uint256)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1858:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1858:77:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "identifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1966:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 134,
															"name": "requestTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1978:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 135,
															"name": "ancillaryData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1991:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														},
														{
															"hexValue": "3330",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2006:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															},
															{
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															}
														],
														"expression": {
															"id": 130,
															"name": "oo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1945:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_OptimisticOracleV2Interface_$561",
																"typeString": "contract OptimisticOracleV2Interface"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1948:17:1",
														"memberName": "setCustomLiveness",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 391,
														"src": "1945:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,bytes memory,uint256) external"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1945:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1945:64:1"
											}
										]
									},
									"functionSelector": "606deecd",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestData",
									"nameLocation": "1395:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1406:2:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1416:0:1"
									},
									"scope": 175,
									"src": "1386:630:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "2311:81:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 148,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2339:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OO_GettingStarted_$175",
																		"typeString": "contract OO_GettingStarted"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OO_GettingStarted_$175",
																		"typeString": "contract OO_GettingStarted"
																	}
																],
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2331:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 146,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2331:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2331:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 150,
															"name": "identifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2346:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 151,
															"name": "requestTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2358:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 152,
															"name": "ancillaryData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2371:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														],
														"expression": {
															"id": 143,
															"name": "oo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2321:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_OptimisticOracleV2Interface_$561",
																"typeString": "contract OptimisticOracleV2Interface"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2324:6:1",
														"memberName": "settle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 507,
														"src": "2321:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (address,bytes32,uint256,bytes memory) external returns (uint256)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2321:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "2321:64:1"
											}
										]
									},
									"functionSelector": "fa776152",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "settleRequest",
									"nameLocation": "2288:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2301:2:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2311:0:1"
									},
									"scope": 175,
									"src": "2279:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "2530:106:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 165,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2569:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_OO_GettingStarted_$175",
																			"typeString": "contract OO_GettingStarted"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_OO_GettingStarted_$175",
																			"typeString": "contract OO_GettingStarted"
																		}
																	],
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2561:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 163,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2561:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2561:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 167,
																"name": "identifier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "2576:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 168,
																"name": "requestTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "2588:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 169,
																"name": "ancillaryData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2601:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															],
															"expression": {
																"id": 161,
																"name": "oo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "2547:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_OptimisticOracleV2Interface_$561",
																	"typeString": "contract OptimisticOracleV2Interface"
																}
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2550:10:1",
															"memberName": "getRequest",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 522,
															"src": "2547:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_struct$_Request_$314_memory_ptr_$",
																"typeString": "function (address,bytes32,uint256,bytes memory) view external returns (struct OptimisticOracleV2Interface.Request memory)"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2547:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Request_$314_memory_ptr",
															"typeString": "struct OptimisticOracleV2Interface.Request memory"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2616:13:1",
													"memberName": "resolvedPrice",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 307,
													"src": "2547:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 160,
												"id": 172,
												"nodeType": "Return",
												"src": "2540:89:1"
											}
										]
									},
									"functionSelector": "f25ffb20",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSettledData",
									"nameLocation": "2484:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2498:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2522:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 158,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2522:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:8:1"
									},
									"scope": 175,
									"src": "2475:161:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 176,
							"src": "516:2122:1",
							"usedErrors": []
						}
					],
					"src": "42:2597:1"
				},
				"id": 1
			},
			"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
				"ast": {
					"absolutePath": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol",
					"exportedSymbols": {
						"FinderInterface": [
							195
						]
					},
					"id": 196,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FinderInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 178,
								"nodeType": "StructuredDocumentation",
								"src": "67:144:2",
								"text": " @title Provides addresses of the live contracts implementing certain interfaces.\n @dev Examples are the Oracle or Store interfaces."
							},
							"fullyImplemented": false,
							"id": 195,
							"linearizedBaseContracts": [
								195
							],
							"name": "FinderInterface",
							"nameLocation": "222:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "244:300:2",
										"text": " @notice Updates the address of the contract that implements `interfaceName`.\n @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\n @param implementationAddress address of the deployed contract that implements the interface."
									},
									"functionSelector": "31f9665e",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeImplementationAddress",
									"nameLocation": "558:27:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "interfaceName",
												"nameLocation": "594:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "586:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 180,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "implementationAddress",
												"nameLocation": "617:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "609:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:54:2"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:0:2"
									},
									"scope": 195,
									"src": "549:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "655:250:2",
										"text": " @notice Gets the address of the contract that implements the given `interfaceName`.\n @param interfaceName queried interface.\n @return implementationAddress address of the deployed contract that implements the interface."
									},
									"functionSelector": "aafd5e40",
									"id": 194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementationAddress",
									"nameLocation": "919:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "interfaceName",
												"nameLocation": "952:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "944:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:23:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "990:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:9:2"
									},
									"scope": 195,
									"src": "910:89:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 196,
							"src": "212:789:2",
							"usedErrors": []
						}
					],
					"src": "42:960:2"
				},
				"id": 2
			},
			"https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol": {
				"ast": {
					"absolutePath": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleV2Interface.sol",
					"exportedSymbols": {
						"FinderInterface": [
							195
						],
						"IERC20": [
							77
						],
						"OptimisticOracleV2Interface": [
							561
						]
					},
					"id": 562,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 197,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 198,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 78,
							"src": "67:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/UMAprotocol/protocol/blob/master/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol",
							"file": "../../data-verification-mechanism/interfaces/FinderInterface.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 196,
							"src": "124:74:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "OptimisticOracleV2Interface",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 200,
								"nodeType": "StructuredDocumentation",
								"src": "200:175:3",
								"text": " @title Financial contract facing Oracle interface.\n @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."
							},
							"fullyImplemented": false,
							"id": 561,
							"linearizedBaseContracts": [
								561
							],
							"name": "OptimisticOracleV2Interface",
							"nameLocation": "394:27:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "f1679315ff325c257a944e0ca1bfe7b26616039e9511f9610d4ba3eca851027b",
									"id": 216,
									"name": "RequestPrice",
									"nameLocation": "434:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"indexed": true,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "472:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "456:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"indexed": false,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "499:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "491:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 203,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "527:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "519:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "552:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "546:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "546:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "583:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "575:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "609:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "601:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": false,
												"mutability": "mutable",
												"name": "finalFee",
												"nameLocation": "633:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "625:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "446:201:3"
									},
									"src": "428:220:3"
								},
								{
									"anonymous": false,
									"eventSelector": "6e51dd00371aabffa82cd401592f76ed51e98a9ea4b58751c70463a2c78b5ca1",
									"id": 234,
									"name": "ProposePrice",
									"nameLocation": "659:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "697:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "681:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposer",
												"nameLocation": "732:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "716:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "758:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "750:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 221,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "786:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "778:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"indexed": false,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "811:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "805:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "805:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposedPrice",
												"nameLocation": "841:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "834:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 227,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "834:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": false,
												"mutability": "mutable",
												"name": "expirationTimestamp",
												"nameLocation": "872:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "864:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "909:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "901:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:252:3"
									},
									"src": "653:271:3"
								},
								{
									"anonymous": false,
									"eventSelector": "5165909c3d1c01c5d1e121ac6f6d01dda1ba24bc9e1f975b5a375339c15be7f3",
									"id": 250,
									"name": "DisputePrice",
									"nameLocation": "935:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"indexed": true,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "973:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "957:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposer",
												"nameLocation": "1008:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "992:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"indexed": true,
												"mutability": "mutable",
												"name": "disputer",
												"nameLocation": "1042:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1026:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": false,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "1068:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1060:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1096:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1088:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": false,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "1121:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1115:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposedPrice",
												"nameLocation": "1151:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1144:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 247,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:223:3"
									},
									"src": "929:242:3"
								},
								{
									"anonymous": false,
									"eventSelector": "3f384afb4bd9f0aef0298c80399950011420eb33b0e1a750b20966270247b9a0",
									"id": 268,
									"name": "Settle",
									"nameLocation": "1182:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "1214:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1198:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposer",
												"nameLocation": "1249:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1233:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": true,
												"mutability": "mutable",
												"name": "disputer",
												"nameLocation": "1283:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1267:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "1309:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1301:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1337:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1329:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "1362:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1356:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1356:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1392:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1385:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 263,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "payout",
												"nameLocation": "1415:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1407:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:239:3"
									},
									"src": "1176:252:3"
								},
								{
									"canonicalName": "OptimisticOracleV2Interface.State",
									"id": 276,
									"members": [
										{
											"id": 269,
											"name": "Invalid",
											"nameLocation": "1511:7:3",
											"nodeType": "EnumValue",
											"src": "1511:7:3"
										},
										{
											"id": 270,
											"name": "Requested",
											"nameLocation": "1548:9:3",
											"nodeType": "EnumValue",
											"src": "1548:9:3"
										},
										{
											"id": 271,
											"name": "Proposed",
											"nameLocation": "1605:8:3",
											"nodeType": "EnumValue",
											"src": "1605:8:3"
										},
										{
											"id": 272,
											"name": "Expired",
											"nameLocation": "1669:7:3",
											"nodeType": "EnumValue",
											"src": "1669:7:3"
										},
										{
											"id": 273,
											"name": "Disputed",
											"nameLocation": "1728:8:3",
											"nodeType": "EnumValue",
											"src": "1728:8:3"
										},
										{
											"id": 274,
											"name": "Resolved",
											"nameLocation": "1790:8:3",
											"nodeType": "EnumValue",
											"src": "1790:8:3"
										},
										{
											"id": 275,
											"name": "Settled",
											"nameLocation": "1848:7:3",
											"nodeType": "EnumValue",
											"src": "1848:7:3"
										}
									],
									"name": "State",
									"nameLocation": "1495:5:3",
									"nodeType": "EnumDefinition",
									"src": "1490:456:3"
								},
								{
									"canonicalName": "OptimisticOracleV2Interface.RequestSettings",
									"id": 291,
									"members": [
										{
											"constant": false,
											"id": 278,
											"mutability": "mutable",
											"name": "eventBased",
											"nameLocation": "1990:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "1985:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 277,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1985:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 280,
											"mutability": "mutable",
											"name": "refundOnDispute",
											"nameLocation": "2064:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2059:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 279,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2059:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 282,
											"mutability": "mutable",
											"name": "callbackOnPriceProposed",
											"nameLocation": "2163:23:3",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2158:28:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 281,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2158:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 284,
											"mutability": "mutable",
											"name": "callbackOnPriceDisputed",
											"nameLocation": "2258:23:3",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2253:28:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 283,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2253:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 286,
											"mutability": "mutable",
											"name": "callbackOnPriceSettled",
											"nameLocation": "2353:22:3",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2348:27:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 285,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2348:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 288,
											"mutability": "mutable",
											"name": "bond",
											"nameLocation": "2449:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2441:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 287,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2441:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 290,
											"mutability": "mutable",
											"name": "customLiveness",
											"nameLocation": "2544:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2536:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 289,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2536:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RequestSettings",
									"nameLocation": "1959:15:3",
									"nodeType": "StructDefinition",
									"scope": 561,
									"src": "1952:660:3",
									"visibility": "public"
								},
								{
									"canonicalName": "OptimisticOracleV2Interface.Request",
									"id": 314,
									"members": [
										{
											"constant": false,
											"id": 293,
											"mutability": "mutable",
											"name": "proposer",
											"nameLocation": "2695:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "2687:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 292,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2687:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 295,
											"mutability": "mutable",
											"name": "disputer",
											"nameLocation": "2749:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "2741:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 294,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2741:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 298,
											"mutability": "mutable",
											"name": "currency",
											"nameLocation": "2802:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "2795:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 297,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 296,
													"name": "IERC20",
													"nameLocations": [
														"2795:6:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "2795:6:3"
												},
												"referencedDeclaration": 77,
												"src": "2795:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 300,
											"mutability": "mutable",
											"name": "settled",
											"nameLocation": "2870:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "2865:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 299,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2865:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 303,
											"mutability": "mutable",
											"name": "requestSettings",
											"nameLocation": "2938:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "2922:31:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RequestSettings_$291_storage_ptr",
												"typeString": "struct OptimisticOracleV2Interface.RequestSettings"
											},
											"typeName": {
												"id": 302,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 301,
													"name": "RequestSettings",
													"nameLocations": [
														"2922:15:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 291,
													"src": "2922:15:3"
												},
												"referencedDeclaration": 291,
												"src": "2922:15:3",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RequestSettings_$291_storage_ptr",
													"typeString": "struct OptimisticOracleV2Interface.RequestSettings"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 305,
											"mutability": "mutable",
											"name": "proposedPrice",
											"nameLocation": "3016:13:3",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "3009:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 304,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "3009:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 307,
											"mutability": "mutable",
											"name": "resolvedPrice",
											"nameLocation": "3084:13:3",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "3077:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 306,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "3077:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 309,
											"mutability": "mutable",
											"name": "expirationTime",
											"nameLocation": "3162:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "3154:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 308,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3154:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 311,
											"mutability": "mutable",
											"name": "reward",
											"nameLocation": "3255:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "3247:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3247:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 313,
											"mutability": "mutable",
											"name": "finalFee",
											"nameLocation": "3343:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "3335:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 312,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3335:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Request",
									"nameLocation": "2669:7:3",
									"nodeType": "StructDefinition",
									"scope": 561,
									"src": "2662:754:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c371dda7",
									"id": 317,
									"mutability": "constant",
									"name": "ancillaryBytesLimit",
									"nameLocation": "3751:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 561,
									"src": "3727:50:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 315,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3727:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "38313932",
										"id": 316,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3773:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8192_by_1",
											"typeString": "int_const 8192"
										},
										"value": "8192"
									},
									"visibility": "public"
								},
								{
									"functionSelector": "fe4e1983",
									"id": 322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultLiveness",
									"nameLocation": "3793:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3808:2:3"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "3842:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3842:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3841:9:3"
									},
									"scope": 561,
									"src": "3784:67:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "b9a3c84c",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finder",
									"nameLocation": "3866:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:3"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3906:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_FinderInterface_$195",
													"typeString": "contract FinderInterface"
												},
												"typeName": {
													"id": 325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 324,
														"name": "FinderInterface",
														"nameLocations": [
															"3906:15:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 195,
														"src": "3906:15:3"
													},
													"referencedDeclaration": 195,
													"src": "3906:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_FinderInterface_$195",
														"typeString": "contract FinderInterface"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3905:17:3"
									},
									"scope": 561,
									"src": "3857:66:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "29cb924d",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentTime",
									"nameLocation": "3938:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3952:2:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3986:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:9:3"
									},
									"scope": 561,
									"src": "3929:66:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"constant": false,
									"functionSelector": "9d866985",
									"id": 338,
									"mutability": "mutable",
									"name": "requests",
									"nameLocation": "4128:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 561,
									"src": "4093:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$314_storage_$",
										"typeString": "mapping(bytes32 => struct OptimisticOracleV2Interface.Request)"
									},
									"typeName": {
										"id": 337,
										"keyType": {
											"id": 334,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "4101:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "4093:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$314_storage_$",
											"typeString": "mapping(bytes32 => struct OptimisticOracleV2Interface.Request)"
										},
										"valueType": {
											"id": 336,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 335,
												"name": "Request",
												"nameLocations": [
													"4112:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "4112:7:3"
											},
											"referencedDeclaration": 314,
											"src": "4112:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Request_$314_storage_ptr",
												"typeString": "struct OptimisticOracleV2Interface.Request"
											}
										}
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "4143:854:3",
										"text": " @notice Requests a new price.\n @param identifier price identifier being requested.\n @param timestamp timestamp of the price being requested.\n @param ancillaryData ancillary data representing additional args being passed with the price request.\n @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n               which could make sense if the contract requests and proposes the value in the same call or\n               provides its own reward system.\n @return totalBond default bond (final fee) + final fee that the proposer and disputer will be required to pay.\n This can be changed with a subsequent call to setBond()."
									},
									"functionSelector": "11df92f1",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestPrice",
									"nameLocation": "5011:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "5041:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5033:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 340,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5033:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5069:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5061:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "5101:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5088:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5088:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "5131:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5124:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 346,
														"name": "IERC20",
														"nameLocations": [
															"5124:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5124:6:3"
													},
													"referencedDeclaration": 77,
													"src": "5124:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5157:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5149:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:146:3"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "totalBond",
												"nameLocation": "5204:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5196:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:19:3"
									},
									"scope": 561,
									"src": "5002:213:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "5221:516:3",
										"text": " @notice Set the proposal bond associated with a price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param bond custom bond amount to set.\n @return totalBond new bond + final fee that the proposer and disputer will be required to pay. This can be\n changed again with a subsequent call to setBond()."
									},
									"functionSelector": "ad5a755a",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBond",
									"nameLocation": "5751:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "5776:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "5768:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5804:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "5796:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5796:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "5836:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "5823:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5823:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "bond",
												"nameLocation": "5867:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "5859:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5859:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5758:119:3"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "totalBond",
												"nameLocation": "5912:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "5904:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5904:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5903:19:3"
									},
									"scope": 561,
									"src": "5742:181:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "5929:545:3",
										"text": " @notice Sets the request to refund the reward if the proposal is disputed. This can help to \"hedge\" the caller\n in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's\n bond, so there is still profit to be made even if the reward is refunded.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested."
									},
									"functionSelector": "91f58dcb",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRefundOnDispute",
									"nameLocation": "6488:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "6524:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "6516:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6516:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "6552:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "6544:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "6584:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "6571:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6571:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6506:97:3"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6620:0:3"
									},
									"scope": 561,
									"src": "6479:142:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "6627:426:3",
										"text": " @notice Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before\n being auto-resolved.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param customLiveness new custom liveness."
									},
									"functionSelector": "473c45fe",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCustomLiveness",
									"nameLocation": "7067:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "7102:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "7094:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7094:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "7130:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "7122:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7122:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "7162:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "7149:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "customLiveness",
												"nameLocation": "7193:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "7185:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7185:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7084:129:3"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7230:0:3"
									},
									"scope": 561,
									"src": "7058:173:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "7237:862:3",
										"text": " @notice Sets the request to be an \"event-based\" request.\n @dev Calling this method has a few impacts on the request:\n 1. The timestamp at which the request is evaluated is the time of the proposal, not the timestamp associated\n    with the request.\n 2. The proposer cannot propose the \"too early\" value (TOO_EARLY_RESPONSE). This is to ensure that a proposer who\n    prematurely proposes a response loses their bond.\n 3. RefundoOnDispute is automatically set, meaning disputes trigger the reward to be automatically refunded to\n    the requesting contract.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested."
									},
									"functionSelector": "120698af",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setEventBased",
									"nameLocation": "8113:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "8144:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8136:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 393,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "8172:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8164:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8164:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "8204:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8191:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8191:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8126:97:3"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8240:0:3"
									},
									"scope": 561,
									"src": "8104:137:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "8247:555:3",
										"text": " @notice Sets which callbacks should be enabled for the request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param callbackOnPriceProposed whether to enable the callback onPriceProposed.\n @param callbackOnPriceDisputed whether to enable the callback onPriceDisputed.\n @param callbackOnPriceSettled whether to enable the callback onPriceSettled."
									},
									"functionSelector": "f327b075",
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCallbacks",
									"nameLocation": "8816:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "8846:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "8838:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 403,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8838:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "8874:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "8866:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8866:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "8906:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "8893:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8893:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "callbackOnPriceProposed",
												"nameLocation": "8934:23:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "8929:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8929:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "callbackOnPriceDisputed",
												"nameLocation": "8972:23:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "8967:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8967:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "callbackOnPriceSettled",
												"nameLocation": "9010:22:3",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "9005:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9005:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8828:210:3"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9055:0:3"
									},
									"scope": 561,
									"src": "8807:249:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "9062:764:3",
										"text": " @notice Proposes a price value on another address' behalf. Note: this address will receive any rewards that come\n from this proposal. However, any bonds are pulled from the caller.\n @param proposer address to set as the proposer.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param proposedPrice price being proposed.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the proposer once settled if the proposal is correct."
									},
									"functionSelector": "7c82288f",
									"id": 435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proposePriceFor",
									"nameLocation": "9840:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "proposer",
												"nameLocation": "9873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9865:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "9899:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9891:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "9926:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9918:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 423,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9918:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "9954:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9946:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9946:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "9986:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "9973:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9973:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "proposedPrice",
												"nameLocation": "10016:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "10009:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 429,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9855:180:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "totalBond",
												"nameLocation": "10068:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "10060:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10059:19:3"
									},
									"scope": 561,
									"src": "9831:248:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "10085:586:3",
										"text": " @notice Proposes a price value for an existing price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param proposedPrice price being proposed.\n @return totalBond the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to\n the proposer once settled if the proposal is correct."
									},
									"functionSelector": "b8b4f908",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proposePrice",
									"nameLocation": "10685:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "10715:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10707:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10707:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "10742:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10734:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 439,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "10770:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10762:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10762:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "10802:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10789:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 443,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10789:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "proposedPrice",
												"nameLocation": "10832:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10825:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 445,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10825:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10697:154:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "totalBond",
												"nameLocation": "10886:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "10878:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10877:19:3"
									},
									"scope": 561,
									"src": "10676:221:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "10903:766:3",
										"text": " @notice Disputes a price request with an active proposal on another address' behalf. Note: this address will\n receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\n @param disputer address to set as the disputer.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the disputer once settled if the dispute was value (the proposal was incorrect)."
									},
									"functionSelector": "76c7823f",
									"id": 467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "disputePriceFor",
									"nameLocation": "11683:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "disputer",
												"nameLocation": "11716:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11708:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11708:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "11742:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11734:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "11769:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11761:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 457,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11761:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "11797:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11789:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11789:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "11829:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11816:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11816:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11698:150:3"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "totalBond",
												"nameLocation": "11881:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11873:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11873:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11872:19:3"
									},
									"scope": 561,
									"src": "11674:218:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "11898:587:3",
										"text": " @notice Disputes a price value for an existing price request with an active proposal.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return totalBond the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to\n the disputer once settled if the dispute was valid (the proposal was incorrect)."
									},
									"functionSelector": "fba7f1e3",
									"id": 481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "disputePrice",
									"nameLocation": "12499:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "12529:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "12521:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12521:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "12556:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "12548:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 471,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12548:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "12584:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "12576:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12576:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "12616:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "12603:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12603:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12511:124:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "totalBond",
												"nameLocation": "12670:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "12662:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12662:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12661:19:3"
									},
									"scope": 561,
									"src": "12490:191:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "12687:515:3",
										"text": " @notice Retrieves a price that was previously requested by a caller. Reverts if the request is not settled\n or settleable. Note: this method is not view so that this call may actually settle the price request if it\n hasn't been settled.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return resolved price."
									},
									"functionSelector": "53b59239",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settleAndGetPrice",
									"nameLocation": "13216:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "13251:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "13243:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 483,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13243:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "13279:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "13271:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13271:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "13311:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "13298:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13298:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13233:97:3"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "13357:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 490,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "13357:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13356:8:3"
									},
									"scope": 561,
									"src": "13207:158:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "13371:565:3",
										"text": " @notice Attempts to settle an outstanding price request. Will revert if it isn't settleable.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return payout the amount that the \"winner\" (proposer or disputer) receives on settlement. This amount includes\n the returned bonds as well as additional rewards."
									},
									"functionSelector": "5e9a79a9",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settle",
									"nameLocation": "13950:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "13974:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "13966:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13966:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "14001:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "13993:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 497,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13993:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "14029:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "14021:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14021:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "14061:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "14048:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14048:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13956:124:3"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "payout",
												"nameLocation": "14115:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "14107:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14107:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14106:16:3"
									},
									"scope": 561,
									"src": "13941:182:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "14129:429:3",
										"text": " @notice Gets the current data structure containing all information about a price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return the Request data structure."
									},
									"functionSelector": "a9904f9b",
									"id": 522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequest",
									"nameLocation": "14572:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "14600:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "14592:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14592:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "14627:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "14619:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 511,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14619:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "14655:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "14647:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14647:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "14687:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "14674:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14582:124:3"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "14736:14:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$314_memory_ptr",
													"typeString": "struct OptimisticOracleV2Interface.Request"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "Request",
														"nameLocations": [
															"14736:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 314,
														"src": "14736:7:3"
													},
													"referencedDeclaration": 314,
													"src": "14736:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$314_storage_ptr",
														"typeString": "struct OptimisticOracleV2Interface.Request"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14735:16:3"
									},
									"scope": 561,
									"src": "14563:189:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "14758:379:3",
										"text": " @notice Returns the state of a price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return the State enum value."
									},
									"functionSelector": "ba4b930c",
									"id": 537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getState",
									"nameLocation": "15151:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "15177:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "15169:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15169:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "15204:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "15196:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 526,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "15232:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "15224:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15224:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "15264:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "15251:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15251:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15159:124:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "15313:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$276",
													"typeString": "enum OptimisticOracleV2Interface.State"
												},
												"typeName": {
													"id": 534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 533,
														"name": "State",
														"nameLocations": [
															"15313:5:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 276,
														"src": "15313:5:3"
													},
													"referencedDeclaration": 276,
													"src": "15313:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$276",
														"typeString": "enum OptimisticOracleV2Interface.State"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15312:7:3"
									},
									"scope": 561,
									"src": "15142:178:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "15326:471:3",
										"text": " @notice Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return true if price has resolved or settled, false otherwise."
									},
									"functionSelector": "bc58ccaa",
									"id": 551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasPrice",
									"nameLocation": "15811:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "15837:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "15829:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15829:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "15864:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "15856:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 541,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15856:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "15892:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "15884:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15884:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "15924:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "15911:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15819:124:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "15973:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15973:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15972:6:3"
									},
									"scope": 561,
									"src": "15802:177:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"functionSelector": "af5d2f39",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stampAncillaryData",
									"nameLocation": "15994:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "ancillaryData",
												"nameLocation": "16026:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "16013:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16013:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "16049:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "16041:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16041:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16012:47:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "16121:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16121:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16120:14:3"
									},
									"scope": 561,
									"src": "15985:150:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 562,
							"src": "376:15761:3",
							"usedErrors": []
						}
					],
					"src": "42:16096:3"
				},
				"id": 3
			}
		}
	}
}