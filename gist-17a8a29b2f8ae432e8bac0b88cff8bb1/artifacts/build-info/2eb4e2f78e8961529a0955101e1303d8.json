{
	"id": "2eb4e2f78e8961529a0955101e1303d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\n\npragma solidity ^0.8.16;\n\nimport \"https://github.com/UMAprotocol/protocol/blob/7a93650a7494eaee83756382a18ecf11314499cf/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\";\n\n// ***************************************\n// *    Minimum Viable OOV3 Integration  *\n// ***************************************\n\n// This contract shows how to get up and running as quickly as possible with UMA's Optimistic Oracle V3.\n// We make a simple data assertion about the real world and let the OOV3 arbitrate the outcome.\n\ncontract OOV3_GettingStarted {\n    // Create an Optimistic Oracle V3 instance at the deployed address on GÃ¶rli.\n    OptimisticOracleV3Interface oov3 =\n        OptimisticOracleV3Interface(0x9923D42eF695B5dd9911D05Ac944d4cAca3c4EAB);\n\n    // Asserted claim. This is some truth statement about the world and can be verified by the network of disputers.\n    bytes public assertedClaim =\n        bytes(\"Hello world from rameshdon\");\n\n    // Each assertion has an associated assertionID that uniquly identifies the assertion. We will store this here.\n    bytes32 public assertionId;\n\n    // Assert the truth against the Optimistic Asserter. This uses the assertion with defaults method which defaults\n    // all values, such as a) challenge window to 120 seconds (2 mins), b) identifier to ASSERT_TRUTH, c) bond currency\n    //  to USDC and c) and default bond size to 0 (which means we dont need to worry about approvals in this example).\n    function assertTruth() public {\n        assertionId = oov3.assertTruthWithDefaults(assertedClaim, address(this));\n    }\n\n    // Settle the assertion, if it has not been disputed and it has passed the challenge window, and return the result.\n    // result\n    function settleAndGetAssertionResult() public returns (bool) {\n        return oov3.settleAndGetAssertionResult(assertionId);\n    }\n\n    // Just return the assertion result. Can only be called once the assertion has been settled.\n    function getAssertionResult() public view returns (bool) {\n        return oov3.getAssertionResult(assertionId);\n    }\n\n    // Return the full assertion object contain all information associated with the assertion. Can be called any time.\n    function getAssertion()\n        public\n        view\n        returns (OptimisticOracleV3Interface.Assertion memory)\n    {\n        return oov3.getAssertion(assertionId);\n    }\n}"
			},
			"https://github.com/UMAprotocol/protocol/blob/7a93650a7494eaee83756382a18ecf11314499cf/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.16;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Optimistic Oracle V3 Interface that callers must use to assert truths about the world.\n */\ninterface OptimisticOracleV3Interface {\n    // Struct grouping together the settings related to the escalation manager stored in the assertion.\n    struct EscalationManagerSettings {\n        bool arbitrateViaEscalationManager; // False if the DVM is used as an oracle (EscalationManager on True).\n        bool discardOracle; // False if Oracle result is used for resolving assertion after dispute.\n        bool validateDisputers; // True if the EM isDisputeAllowed should be checked on disputes.\n        address assertingCaller; // Stores msg.sender when assertion was made.\n        address escalationManager; // Address of the escalation manager (zero address if not configured).\n    }\n\n    // Struct for storing properties and lifecycle of an assertion.\n    struct Assertion {\n        EscalationManagerSettings escalationManagerSettings; // Settings related to the escalation manager.\n        address asserter; // Address of the asserter.\n        uint64 assertionTime; // Time of the assertion.\n        bool settled; // True if the request is settled.\n        IERC20 currency; // ERC20 token used to pay rewards and fees.\n        uint64 expirationTime; // Unix timestamp marking threshold when the assertion can no longer be disputed.\n        bool settlementResolution; // Resolution of the assertion (false till resolved).\n        bytes32 domainId; // Optional domain that can be used to relate the assertion to others in the escalationManager.\n        bytes32 identifier; // UMA DVM identifier to use for price requests in the event of a dispute.\n        uint256 bond; // Amount of currency that the asserter has bonded.\n        address callbackRecipient; // Address that receives the callback.\n        address disputer; // Address of the disputer.\n    }\n\n    // Struct for storing cached currency whitelist.\n    struct WhitelistedCurrency {\n        bool isWhitelisted; // True if the currency is whitelisted.\n        uint256 finalFee; // Final fee of the currency.\n    }\n\n    /**\n     * @notice Returns the default identifier used by the Optimistic Oracle V3.\n     * @return The default identifier.\n     */\n    function defaultIdentifier() external view returns (bytes32);\n\n    /**\n     * @notice Fetches information about a specific assertion and returns it.\n     * @param assertionId unique identifier for the assertion to fetch information for.\n     * @return assertion information about the assertion.\n     */\n    function getAssertion(bytes32 assertionId) external view returns (Assertion memory);\n\n    /**\n     * @notice Asserts a truth about the world, using the default currency and liveness. No callback recipient or\n     * escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage\n     * (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency.\n     * @dev The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).\n     * @param claim the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\n     * @param asserter receives bonds back at settlement. This could be msg.sender or\n     * any other account that the caller wants to receive the bond at settlement time.\n     * @return assertionId unique identifier for this assertion.\n     */\n    function assertTruthWithDefaults(bytes memory claim, address asserter) external returns (bytes32);\n\n    /**\n     * @notice Asserts a truth about the world, using a fully custom configuration.\n     * @dev The caller must approve this contract to spend at least bond amount of currency.\n     * @param claim the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\n     * @param asserter receives bonds back at settlement. This could be msg.sender or\n     * any other account that the caller wants to receive the bond at settlement time.\n     * @param callbackRecipient if configured, this address will receive a function call assertionResolvedCallback and\n     * assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The\n     * recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.\n     * @param escalationManager if configured, this address will control escalation properties of the assertion. This\n     * means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to\n     * validate disputes. Combining these, the asserter can define their own security properties for the assertion.\n     * escalationManager also _must_ implement the same callbacks as callbackRecipient.\n     * @param liveness time to wait before the assertion can be resolved. Assertion can be disputed in this time.\n     * @param currency bond currency pulled from the caller and held in escrow until the assertion is resolved.\n     * @param bond amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This\n     * must be >= getMinimumBond(address(currency)).\n     * @param identifier UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.\n     * @param domainId optional domain that can be used to relate this assertion to others in the escalationManager and\n     * can be used by the configured escalationManager to define custom behavior for groups of assertions. This is\n     * typically used for \"escalation games\" by changing bonds or other assertion properties based on the other\n     * assertions that have come before. If not needed this value should be 0 to save gas.\n     * @return assertionId unique identifier for this assertion.\n     */\n    function assertTruth(\n        bytes memory claim,\n        address asserter,\n        address callbackRecipient,\n        address escalationManager,\n        uint64 liveness,\n        IERC20 currency,\n        uint256 bond,\n        bytes32 identifier,\n        bytes32 domainId\n    ) external returns (bytes32);\n\n    /**\n     * @notice Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy\n     * of the information within this contract. This is used to save gas when making assertions as we can avoid an\n     * external call to the UMA contracts to fetch this.\n     * @param identifier identifier to fetch information for and store locally.\n     * @param currency currency to fetch information for and store locally.\n     */\n    function syncUmaParams(bytes32 identifier, address currency) external;\n\n    /**\n     * @notice Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the\n     * asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle\n     * result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an\n     * amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of\n     * the bond is returned to the asserter or disputer.\n     * @param assertionId unique identifier for the assertion to resolve.\n     */\n    function settleAssertion(bytes32 assertionId) external;\n\n    /**\n     * @notice Settles an assertion and returns the resolution.\n     * @param assertionId unique identifier for the assertion to resolve and return the resolution for.\n     * @return resolution of the assertion.\n     */\n    function settleAndGetAssertionResult(bytes32 assertionId) external returns (bool);\n\n    /**\n     * @notice Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then\n     * this will revert. If the assertion was disputed and configured to discard the oracle resolution return false.\n     * @param assertionId unique identifier for the assertion to fetch the resolution for.\n     * @return resolution of the assertion.\n     */\n    function getAssertionResult(bytes32 assertionId) external view returns (bool);\n\n    /**\n     * @notice Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the\n     * currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee.\n     * @param currency currency to calculate the minimum bond for.\n     * @return minimum bond amount.\n     */\n    function getMinimumBond(address currency) external view returns (uint256);\n\n    event AssertionMade(\n        bytes32 indexed assertionId,\n        bytes32 domainId,\n        bytes claim,\n        address indexed asserter,\n        address callbackRecipient,\n        address escalationManager,\n        address caller,\n        uint64 expirationTime,\n        IERC20 currency,\n        uint256 bond,\n        bytes32 indexed identifier\n    );\n\n    event AssertionDisputed(bytes32 indexed assertionId, address indexed caller, address indexed disputer);\n\n    event AssertionSettled(\n        bytes32 indexed assertionId,\n        address indexed bondRecipient,\n        bool disputed,\n        bool settlementResolution,\n        address settleCaller\n    );\n\n    event AdminPropertiesSet(IERC20 defaultCurrency, uint64 defaultLiveness, uint256 burnedBondPercentage);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol": {
				"OOV3_GettingStarted": {
					"abi": [
						{
							"inputs": [],
							"name": "assertTruth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "assertedClaim",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "assertionId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAssertion",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "bool",
													"name": "arbitrateViaEscalationManager",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "discardOracle",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "validateDisputers",
													"type": "bool"
												},
												{
													"internalType": "address",
													"name": "assertingCaller",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "escalationManager",
													"type": "address"
												}
											],
											"internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
											"name": "escalationManagerSettings",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "asserter",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "assertionTime",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "settled",
											"type": "bool"
										},
										{
											"internalType": "contract IERC20",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "settlementResolution",
											"type": "bool"
										},
										{
											"internalType": "bytes32",
											"name": "domainId",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "identifier",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "bond",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "callbackRecipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "disputer",
											"type": "address"
										}
									],
									"internalType": "struct OptimisticOracleV3Interface.Assertion",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAssertionResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "settleAndGetAssertionResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":586:2434  contract OOV3_GettingStarted {... */\n  mstore(0x40, 0x80)\n    /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":774:816  0x9923D42eF695B5dd9911D05Ac944d4cAca3c4EAB */\n  0x9923d42ef695b5dd9911d05ac944d4caca3c4eab\n    /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":703:817  OptimisticOracleV3Interface oov3 =... */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":978:1013  bytes(\"Hello world from rameshdon\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1a\n  dup2\n  mstore\n  0x20\n  add\n  0x48656c6c6f20776f726c642066726f6d2072616d657368646f6e000000000000\n  dup2\n  mstore\n  pop\n    /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":941:1013  bytes public assertedClaim =... */\n  0x01\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":586:2434  contract OOV3_GettingStarted {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  jump(tag_4)\n    /* \"#utility.yul\":7:105   */\ntag_5:\n    /* \"#utility.yul\":58:64   */\n  0x00\n    /* \"#utility.yul\":92:97   */\n  dup2\n    /* \"#utility.yul\":86:98   */\n  mload\n    /* \"#utility.yul\":76:98   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:105   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":111:291   */\ntag_6:\n    /* \"#utility.yul\":159:236   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":156:157   */\n  0x00\n    /* \"#utility.yul\":149:237   */\n  mstore\n    /* \"#utility.yul\":256:260   */\n  0x41\n    /* \"#utility.yul\":253:254   */\n  0x04\n    /* \"#utility.yul\":246:261   */\n  mstore\n    /* \"#utility.yul\":280:284   */\n  0x24\n    /* \"#utility.yul\":277:278   */\n  0x00\n    /* \"#utility.yul\":270:285   */\n  revert\n    /* \"#utility.yul\":297:477   */\ntag_7:\n    /* \"#utility.yul\":345:422   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":342:343   */\n  0x00\n    /* \"#utility.yul\":335:423   */\n  mstore\n    /* \"#utility.yul\":442:446   */\n  0x22\n    /* \"#utility.yul\":439:440   */\n  0x04\n    /* \"#utility.yul\":432:447   */\n  mstore\n    /* \"#utility.yul\":466:470   */\n  0x24\n    /* \"#utility.yul\":463:464   */\n  0x00\n    /* \"#utility.yul\":456:471   */\n  revert\n    /* \"#utility.yul\":483:803   */\ntag_8:\n    /* \"#utility.yul\":527:533   */\n  0x00\n    /* \"#utility.yul\":564:565   */\n  0x02\n    /* \"#utility.yul\":558:562   */\n  dup3\n    /* \"#utility.yul\":554:566   */\n  div\n    /* \"#utility.yul\":544:566   */\n  swap1\n  pop\n    /* \"#utility.yul\":611:612   */\n  0x01\n    /* \"#utility.yul\":605:609   */\n  dup3\n    /* \"#utility.yul\":601:613   */\n  and\n    /* \"#utility.yul\":632:650   */\n  dup1\n    /* \"#utility.yul\":622:703   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":688:692   */\n  0x7f\n    /* \"#utility.yul\":680:686   */\n  dup3\n    /* \"#utility.yul\":676:693   */\n  and\n    /* \"#utility.yul\":666:693   */\n  swap2\n  pop\n    /* \"#utility.yul\":622:703   */\ntag_30:\n    /* \"#utility.yul\":750:752   */\n  0x20\n    /* \"#utility.yul\":742:748   */\n  dup3\n    /* \"#utility.yul\":739:753   */\n  lt\n    /* \"#utility.yul\":719:737   */\n  dup2\n    /* \"#utility.yul\":716:754   */\n  sub\n    /* \"#utility.yul\":713:797   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":769:787   */\n  tag_32\n  tag_7\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":713:797   */\ntag_31:\n    /* \"#utility.yul\":534:803   */\n  pop\n    /* \"#utility.yul\":483:803   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:949   */\ntag_9:\n    /* \"#utility.yul\":857:861   */\n  0x00\n    /* \"#utility.yul\":880:883   */\n  dup2\n    /* \"#utility.yul\":872:883   */\n  swap1\n  pop\n    /* \"#utility.yul\":903:906   */\n  dup2\n    /* \"#utility.yul\":900:901   */\n  0x00\n    /* \"#utility.yul\":893:907   */\n  mstore\n    /* \"#utility.yul\":937:941   */\n  0x20\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":924:942   */\n  keccak256\n    /* \"#utility.yul\":916:942   */\n  swap1\n  pop\n    /* \"#utility.yul\":809:949   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":955:1048   */\ntag_10:\n    /* \"#utility.yul\":992:998   */\n  0x00\n    /* \"#utility.yul\":1039:1041   */\n  0x20\n    /* \"#utility.yul\":1034:1036   */\n  0x1f\n    /* \"#utility.yul\":1027:1032   */\n  dup4\n    /* \"#utility.yul\":1023:1037   */\n  add\n    /* \"#utility.yul\":1019:1042   */\n  div\n    /* \"#utility.yul\":1009:1042   */\n  swap1\n  pop\n    /* \"#utility.yul\":955:1048   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1054:1161   */\ntag_11:\n    /* \"#utility.yul\":1098:1106   */\n  0x00\n    /* \"#utility.yul\":1148:1153   */\n  dup3\n    /* \"#utility.yul\":1142:1146   */\n  dup3\n    /* \"#utility.yul\":1138:1154   */\n  shl\n    /* \"#utility.yul\":1117:1154   */\n  swap1\n  pop\n    /* \"#utility.yul\":1054:1161   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1167:1560   */\ntag_12:\n    /* \"#utility.yul\":1236:1242   */\n  0x00\n    /* \"#utility.yul\":1286:1287   */\n  0x08\n    /* \"#utility.yul\":1274:1284   */\n  dup4\n    /* \"#utility.yul\":1270:1288   */\n  mul\n    /* \"#utility.yul\":1309:1406   */\n  tag_37\n    /* \"#utility.yul\":1339:1405   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1328:1337   */\n  dup3\n    /* \"#utility.yul\":1309:1406   */\n  tag_11\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1427:1466   */\n  tag_38\n    /* \"#utility.yul\":1457:1465   */\n  dup7\n    /* \"#utility.yul\":1446:1455   */\n  dup4\n    /* \"#utility.yul\":1427:1466   */\n  tag_11\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1415:1466   */\n  swap6\n  pop\n    /* \"#utility.yul\":1499:1503   */\n  dup1\n    /* \"#utility.yul\":1495:1504   */\n  not\n    /* \"#utility.yul\":1488:1493   */\n  dup5\n    /* \"#utility.yul\":1484:1505   */\n  and\n    /* \"#utility.yul\":1475:1505   */\n  swap4\n  pop\n    /* \"#utility.yul\":1548:1552   */\n  dup1\n    /* \"#utility.yul\":1538:1546   */\n  dup7\n    /* \"#utility.yul\":1534:1553   */\n  and\n    /* \"#utility.yul\":1527:1532   */\n  dup5\n    /* \"#utility.yul\":1524:1554   */\n  or\n    /* \"#utility.yul\":1514:1554   */\n  swap3\n  pop\n    /* \"#utility.yul\":1243:1560   */\n  pop\n  pop\n    /* \"#utility.yul\":1167:1560   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1566:1643   */\ntag_13:\n    /* \"#utility.yul\":1603:1610   */\n  0x00\n    /* \"#utility.yul\":1632:1637   */\n  dup2\n    /* \"#utility.yul\":1621:1637   */\n  swap1\n  pop\n    /* \"#utility.yul\":1566:1643   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1649:1709   */\ntag_14:\n    /* \"#utility.yul\":1677:1680   */\n  0x00\n    /* \"#utility.yul\":1698:1703   */\n  dup2\n    /* \"#utility.yul\":1691:1703   */\n  swap1\n  pop\n    /* \"#utility.yul\":1649:1709   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1715:1857   */\ntag_15:\n    /* \"#utility.yul\":1765:1774   */\n  0x00\n    /* \"#utility.yul\":1798:1851   */\n  tag_42\n    /* \"#utility.yul\":1816:1850   */\n  tag_43\n    /* \"#utility.yul\":1825:1849   */\n  tag_44\n    /* \"#utility.yul\":1843:1848   */\n  dup5\n    /* \"#utility.yul\":1825:1849   */\n  tag_13\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1816:1850   */\n  tag_14\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1798:1851   */\n  tag_13\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1785:1851   */\n  swap1\n  pop\n    /* \"#utility.yul\":1715:1857   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1863:1938   */\ntag_16:\n    /* \"#utility.yul\":1906:1909   */\n  0x00\n    /* \"#utility.yul\":1927:1932   */\n  dup2\n    /* \"#utility.yul\":1920:1932   */\n  swap1\n  pop\n    /* \"#utility.yul\":1863:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1944:2213   */\ntag_17:\n    /* \"#utility.yul\":2054:2093   */\n  tag_47\n    /* \"#utility.yul\":2085:2092   */\n  dup4\n    /* \"#utility.yul\":2054:2093   */\n  tag_15\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2115:2206   */\n  tag_48\n    /* \"#utility.yul\":2164:2205   */\n  tag_49\n    /* \"#utility.yul\":2188:2204   */\n  dup3\n    /* \"#utility.yul\":2164:2205   */\n  tag_16\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":2156:2162   */\n  dup5\n    /* \"#utility.yul\":2149:2153   */\n  dup5\n    /* \"#utility.yul\":2143:2154   */\n  sload\n    /* \"#utility.yul\":2115:2206   */\n  tag_12\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2109:2113   */\n  dup3\n    /* \"#utility.yul\":2102:2207   */\n  sstore\n    /* \"#utility.yul\":2020:2213   */\n  pop\n    /* \"#utility.yul\":1944:2213   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2219:2292   */\ntag_18:\n    /* \"#utility.yul\":2264:2267   */\n  0x00\n    /* \"#utility.yul\":2219:2292   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2298:2487   */\ntag_19:\n    /* \"#utility.yul\":2375:2407   */\n  tag_52\n  tag_18\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2416:2481   */\n  tag_53\n    /* \"#utility.yul\":2474:2480   */\n  dup2\n    /* \"#utility.yul\":2466:2472   */\n  dup5\n    /* \"#utility.yul\":2460:2464   */\n  dup5\n    /* \"#utility.yul\":2416:2481   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2351:2487   */\n  pop\n    /* \"#utility.yul\":2298:2487   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2493:2679   */\ntag_20:\n    /* \"#utility.yul\":2553:2673   */\ntag_55:\n    /* \"#utility.yul\":2570:2573   */\n  dup2\n    /* \"#utility.yul\":2563:2568   */\n  dup2\n    /* \"#utility.yul\":2560:2574   */\n  lt\n    /* \"#utility.yul\":2553:2673   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2624:2663   */\n  tag_58\n    /* \"#utility.yul\":2661:2662   */\n  0x00\n    /* \"#utility.yul\":2654:2659   */\n  dup3\n    /* \"#utility.yul\":2624:2663   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2597:2598   */\n  0x01\n    /* \"#utility.yul\":2590:2595   */\n  dup2\n    /* \"#utility.yul\":2586:2599   */\n  add\n    /* \"#utility.yul\":2577:2599   */\n  swap1\n  pop\n    /* \"#utility.yul\":2553:2673   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":2493:2679   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2685:3226   */\ntag_21:\n    /* \"#utility.yul\":2785:2787   */\n  0x1f\n    /* \"#utility.yul\":2780:2783   */\n  dup3\n    /* \"#utility.yul\":2777:2788   */\n  gt\n    /* \"#utility.yul\":2774:3219   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2819:2856   */\n  tag_61\n    /* \"#utility.yul\":2850:2855   */\n  dup2\n    /* \"#utility.yul\":2819:2856   */\n  tag_9\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2902:2931   */\n  tag_62\n    /* \"#utility.yul\":2920:2930   */\n  dup5\n    /* \"#utility.yul\":2902:2931   */\n  tag_10\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2892:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2932   */\n  add\n    /* \"#utility.yul\":3085:3087   */\n  0x20\n    /* \"#utility.yul\":3073:3083   */\n  dup6\n    /* \"#utility.yul\":3070:3088   */\n  lt\n    /* \"#utility.yul\":3067:3116   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":3106:3114   */\n  dup2\n    /* \"#utility.yul\":3091:3114   */\n  swap1\n  pop\n    /* \"#utility.yul\":3067:3116   */\ntag_63:\n    /* \"#utility.yul\":3129:3209   */\n  tag_64\n    /* \"#utility.yul\":3185:3207   */\n  tag_65\n    /* \"#utility.yul\":3203:3206   */\n  dup6\n    /* \"#utility.yul\":3185:3207   */\n  tag_10\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":3175:3183   */\n  dup4\n    /* \"#utility.yul\":3171:3208   */\n  add\n    /* \"#utility.yul\":3158:3169   */\n  dup3\n    /* \"#utility.yul\":3129:3209   */\n  tag_20\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2789:3219   */\n  pop\n  pop\n    /* \"#utility.yul\":2774:3219   */\ntag_60:\n    /* \"#utility.yul\":2685:3226   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3232:3349   */\ntag_22:\n    /* \"#utility.yul\":3286:3294   */\n  0x00\n    /* \"#utility.yul\":3336:3341   */\n  dup3\n    /* \"#utility.yul\":3330:3334   */\n  dup3\n    /* \"#utility.yul\":3326:3342   */\n  shr\n    /* \"#utility.yul\":3305:3342   */\n  swap1\n  pop\n    /* \"#utility.yul\":3232:3349   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3355:3524   */\ntag_23:\n    /* \"#utility.yul\":3399:3405   */\n  0x00\n    /* \"#utility.yul\":3432:3483   */\n  tag_68\n    /* \"#utility.yul\":3480:3481   */\n  0x00\n    /* \"#utility.yul\":3476:3482   */\n  not\n    /* \"#utility.yul\":3468:3473   */\n  dup5\n    /* \"#utility.yul\":3465:3466   */\n  0x08\n    /* \"#utility.yul\":3461:3474   */\n  mul\n    /* \"#utility.yul\":3432:3483   */\n  tag_22\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3428:3484   */\n  not\n    /* \"#utility.yul\":3513:3517   */\n  dup1\n    /* \"#utility.yul\":3507:3511   */\n  dup4\n    /* \"#utility.yul\":3503:3518   */\n  and\n    /* \"#utility.yul\":3493:3518   */\n  swap2\n  pop\n    /* \"#utility.yul\":3406:3524   */\n  pop\n    /* \"#utility.yul\":3355:3524   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3529:3824   */\ntag_24:\n    /* \"#utility.yul\":3605:3609   */\n  0x00\n    /* \"#utility.yul\":3751:3780   */\n  tag_70\n    /* \"#utility.yul\":3776:3779   */\n  dup4\n    /* \"#utility.yul\":3770:3774   */\n  dup4\n    /* \"#utility.yul\":3751:3780   */\n  tag_23\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3743:3780   */\n  swap2\n  pop\n    /* \"#utility.yul\":3813:3816   */\n  dup3\n    /* \"#utility.yul\":3810:3811   */\n  0x02\n    /* \"#utility.yul\":3806:3817   */\n  mul\n    /* \"#utility.yul\":3800:3804   */\n  dup3\n    /* \"#utility.yul\":3797:3818   */\n  or\n    /* \"#utility.yul\":3789:3818   */\n  swap1\n  pop\n    /* \"#utility.yul\":3529:3824   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3829:5219   */\ntag_2:\n    /* \"#utility.yul\":3944:3980   */\n  tag_72\n    /* \"#utility.yul\":3976:3979   */\n  dup3\n    /* \"#utility.yul\":3944:3980   */\n  tag_5\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":4045:4063   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4037:4043   */\n  dup2\n    /* \"#utility.yul\":4034:4064   */\n  gt\n    /* \"#utility.yul\":4031:4087   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":4067:4085   */\n  tag_74\n  tag_6\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":4031:4087   */\ntag_73:\n    /* \"#utility.yul\":4111:4149   */\n  tag_75\n    /* \"#utility.yul\":4143:4147   */\n  dup3\n    /* \"#utility.yul\":4137:4148   */\n  sload\n    /* \"#utility.yul\":4111:4149   */\n  tag_8\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4196:4262   */\n  tag_76\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4247:4253   */\n  dup3\n    /* \"#utility.yul\":4241:4245   */\n  dup6\n    /* \"#utility.yul\":4196:4262   */\n  tag_21\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":4289:4290   */\n  0x00\n    /* \"#utility.yul\":4313:4317   */\n  0x20\n    /* \"#utility.yul\":4300:4317   */\n  swap1\n  pop\n    /* \"#utility.yul\":4345:4347   */\n  0x1f\n    /* \"#utility.yul\":4337:4343   */\n  dup4\n    /* \"#utility.yul\":4334:4348   */\n  gt\n    /* \"#utility.yul\":4362:4363   */\n  0x01\n    /* \"#utility.yul\":4357:4974   */\n  dup2\n  eq\n  tag_78\n  jumpi\n    /* \"#utility.yul\":5018:5019   */\n  0x00\n    /* \"#utility.yul\":5035:5041   */\n  dup5\n    /* \"#utility.yul\":5032:5109   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":5084:5093   */\n  dup3\n    /* \"#utility.yul\":5079:5082   */\n  dup8\n    /* \"#utility.yul\":5075:5094   */\n  add\n    /* \"#utility.yul\":5069:5095   */\n  mload\n    /* \"#utility.yul\":5060:5095   */\n  swap1\n  pop\n    /* \"#utility.yul\":5032:5109   */\ntag_79:\n    /* \"#utility.yul\":5135:5202   */\n  tag_80\n    /* \"#utility.yul\":5195:5201   */\n  dup6\n    /* \"#utility.yul\":5188:5193   */\n  dup3\n    /* \"#utility.yul\":5135:5202   */\n  tag_24\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":5129:5133   */\n  dup7\n    /* \"#utility.yul\":5122:5203   */\n  sstore\n    /* \"#utility.yul\":4991:5213   */\n  pop\n    /* \"#utility.yul\":4327:5213   */\n  jump(tag_77)\n    /* \"#utility.yul\":4357:4974   */\ntag_78:\n    /* \"#utility.yul\":4409:4413   */\n  0x1f\n    /* \"#utility.yul\":4405:4414   */\n  not\n    /* \"#utility.yul\":4397:4403   */\n  dup5\n    /* \"#utility.yul\":4393:4415   */\n  and\n    /* \"#utility.yul\":4443:4479   */\n  tag_81\n    /* \"#utility.yul\":4474:4478   */\n  dup7\n    /* \"#utility.yul\":4443:4479   */\n  tag_9\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4501:4502   */\n  0x00\n    /* \"#utility.yul\":4515:4723   */\ntag_82:\n    /* \"#utility.yul\":4529:4536   */\n  dup3\n    /* \"#utility.yul\":4526:4527   */\n  dup2\n    /* \"#utility.yul\":4523:4537   */\n  lt\n    /* \"#utility.yul\":4515:4723   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":4608:4617   */\n  dup5\n    /* \"#utility.yul\":4603:4606   */\n  dup10\n    /* \"#utility.yul\":4599:4618   */\n  add\n    /* \"#utility.yul\":4593:4619   */\n  mload\n    /* \"#utility.yul\":4585:4591   */\n  dup3\n    /* \"#utility.yul\":4578:4620   */\n  sstore\n    /* \"#utility.yul\":4659:4660   */\n  0x01\n    /* \"#utility.yul\":4651:4657   */\n  dup3\n    /* \"#utility.yul\":4647:4661   */\n  add\n    /* \"#utility.yul\":4637:4661   */\n  swap2\n  pop\n    /* \"#utility.yul\":4706:4708   */\n  0x20\n    /* \"#utility.yul\":4695:4704   */\n  dup6\n    /* \"#utility.yul\":4691:4709   */\n  add\n    /* \"#utility.yul\":4678:4709   */\n  swap5\n  pop\n    /* \"#utility.yul\":4552:4556   */\n  0x20\n    /* \"#utility.yul\":4549:4550   */\n  dup2\n    /* \"#utility.yul\":4545:4557   */\n  add\n    /* \"#utility.yul\":4540:4557   */\n  swap1\n  pop\n    /* \"#utility.yul\":4515:4723   */\n  jump(tag_82)\ntag_84:\n    /* \"#utility.yul\":4751:4757   */\n  dup7\n    /* \"#utility.yul\":4742:4749   */\n  dup4\n    /* \"#utility.yul\":4739:4758   */\n  lt\n    /* \"#utility.yul\":4736:4915   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":4809:4818   */\n  dup5\n    /* \"#utility.yul\":4804:4807   */\n  dup10\n    /* \"#utility.yul\":4800:4819   */\n  add\n    /* \"#utility.yul\":4794:4820   */\n  mload\n    /* \"#utility.yul\":4852:4900   */\n  tag_86\n    /* \"#utility.yul\":4894:4898   */\n  0x1f\n    /* \"#utility.yul\":4886:4892   */\n  dup10\n    /* \"#utility.yul\":4882:4899   */\n  and\n    /* \"#utility.yul\":4871:4880   */\n  dup3\n    /* \"#utility.yul\":4852:4900   */\n  tag_23\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4844:4850   */\n  dup4\n    /* \"#utility.yul\":4837:4901   */\n  sstore\n    /* \"#utility.yul\":4759:4915   */\n  pop\n    /* \"#utility.yul\":4736:4915   */\ntag_85:\n    /* \"#utility.yul\":4961:4962   */\n  0x01\n    /* \"#utility.yul\":4957:4958   */\n  0x02\n    /* \"#utility.yul\":4949:4955   */\n  dup9\n    /* \"#utility.yul\":4945:4959   */\n  mul\n    /* \"#utility.yul\":4941:4963   */\n  add\n    /* \"#utility.yul\":4935:4939   */\n  dup9\n    /* \"#utility.yul\":4928:4964   */\n  sstore\n    /* \"#utility.yul\":4364:4974   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4327:5213   */\ntag_77:\n  pop\n    /* \"#utility.yul\":3919:5219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3829:5219   */\n  pop\n  pop\n  jump\t// out\n    /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":586:2434  contract OOV3_GettingStarted {... */\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":586:2434  contract OOV3_GettingStarted {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0d80da74\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3421390b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7facaf3f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9a3ddabc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xbc1dbc52\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc1a8ec2c\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1136:1162  bytes32 public assertionId */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1525:1644  function assertTruth() public {... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2017:2134  function getAssertionResult() public view returns (bool) {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2259:2432  function getAssertion()... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1784:1914  function settleAndGetAssertionResult() public returns (bool) {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":941:1013  bytes public assertedClaim =... */\n    tag_8:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1136:1162  bytes32 public assertionId */\n    tag_10:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1525:1644  function assertTruth() public {... */\n    tag_14:\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1579:1583  oov3 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1579:1607  oov3.assertTruthWithDefaults */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x36b13af4\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1608:1621  assertedClaim */\n      0x01\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1631:1635  this */\n      address\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1579:1637  oov3.assertTruthWithDefaults(assertedClaim, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1565:1576  assertionId */\n      0x02\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1565:1637  assertionId = oov3.assertTruthWithDefaults(assertedClaim, address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1525:1644  function assertTruth() public {... */\n      jump\t// out\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2017:2134  function getAssertionResult() public view returns (bool) {... */\n    tag_16:\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2068:2072  bool */\n      0x00\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2091:2095  oov3 */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2091:2114  oov3.getAssertionResult */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe39dfd7f\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2115:2126  assertionId */\n      sload(0x02)\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2091:2127  oov3.getAssertionResult(assertionId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_38:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2084:2127  return oov3.getAssertionResult(assertionId) */\n      swap1\n      pop\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2017:2134  function getAssertionResult() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2259:2432  function getAssertion()... */\n    tag_20:\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2328:2372  OptimisticOracleV3Interface.Assertion memory */\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2395:2399  oov3 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2395:2412  oov3.getAssertion */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88302884\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2413:2424  assertionId */\n      sload(0x02)\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2395:2425  oov3.getAssertion(assertionId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_46:\n      0x0200\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2388:2425  return oov3.getAssertion(assertionId) */\n      swap1\n      pop\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":2259:2432  function getAssertion()... */\n      swap1\n      jump\t// out\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1784:1914  function settleAndGetAssertionResult() public returns (bool) {... */\n    tag_24:\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1839:1843  bool */\n      0x00\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1862:1866  oov3 */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1862:1894  oov3.settleAndGetAssertionResult */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8ea2f2ab\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1895:1906  assertionId */\n      sload(0x02)\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1862:1907  oov3.settleAndGetAssertionResult(assertionId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_52:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_55:\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1855:1907  return oov3.settleAndGetAssertionResult(assertionId) */\n      swap1\n      pop\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":1784:1914  function settleAndGetAssertionResult() public returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":941:1013  bytes public assertedClaim =... */\n    tag_27:\n      0x01\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_57\n      jump\t// in\n    tag_58:\n      dup1\n      iszero\n      tag_59\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_60\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_59)\n    tag_60:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_61:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_61\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n    tag_44:\n      mload(0x40)\n      dup1\n      0x0180\n      add\n      0x40\n      mstore\n      dup1\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup1\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup1\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_63:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_64:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_65:\n        /* \"#utility.yul\":177:201   */\n      tag_119\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_64\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_12:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_121\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_65\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:532   */\n    tag_66:\n        /* \"#utility.yul\":476:483   */\n      0x00\n        /* \"#utility.yul\":519:524   */\n      dup2\n        /* \"#utility.yul\":512:525   */\n      iszero\n        /* \"#utility.yul\":505:526   */\n      iszero\n        /* \"#utility.yul\":494:526   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":538:647   */\n    tag_67:\n        /* \"#utility.yul\":619:640   */\n      tag_124\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":619:640   */\n      tag_66\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":614:617   */\n      dup3\n        /* \"#utility.yul\":607:641   */\n      mstore\n        /* \"#utility.yul\":538:647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":653:863   */\n    tag_18:\n        /* \"#utility.yul\":740:744   */\n      0x00\n        /* \"#utility.yul\":778:780   */\n      0x20\n        /* \"#utility.yul\":767:776   */\n      dup3\n        /* \"#utility.yul\":763:781   */\n      add\n        /* \"#utility.yul\":755:781   */\n      swap1\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_126\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":842:851   */\n      dup4\n        /* \"#utility.yul\":838:855   */\n      add\n        /* \"#utility.yul\":829:835   */\n      dup5\n        /* \"#utility.yul\":791:856   */\n      tag_67\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":653:863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":869:968   */\n    tag_68:\n        /* \"#utility.yul\":940:961   */\n      tag_128\n        /* \"#utility.yul\":955:960   */\n      dup2\n        /* \"#utility.yul\":940:961   */\n      tag_66\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":935:938   */\n      dup3\n        /* \"#utility.yul\":928:962   */\n      mstore\n        /* \"#utility.yul\":869:968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1100   */\n    tag_69:\n        /* \"#utility.yul\":1011:1018   */\n      0x00\n        /* \"#utility.yul\":1051:1093   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1044:1049   */\n      dup3\n        /* \"#utility.yul\":1040:1094   */\n      and\n        /* \"#utility.yul\":1029:1094   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1106:1202   */\n    tag_70:\n        /* \"#utility.yul\":1143:1150   */\n      0x00\n        /* \"#utility.yul\":1172:1196   */\n      tag_131\n        /* \"#utility.yul\":1190:1195   */\n      dup3\n        /* \"#utility.yul\":1172:1196   */\n      tag_69\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1161:1196   */\n      swap1\n      pop\n        /* \"#utility.yul\":1106:1202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1208:1316   */\n    tag_71:\n        /* \"#utility.yul\":1285:1309   */\n      tag_133\n        /* \"#utility.yul\":1303:1308   */\n      dup2\n        /* \"#utility.yul\":1285:1309   */\n      tag_70\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1280:1283   */\n      dup3\n        /* \"#utility.yul\":1273:1310   */\n      mstore\n        /* \"#utility.yul\":1208:1316   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1454:2560   */\n    tag_72:\n        /* \"#utility.yul\":1625:1629   */\n      0xa0\n        /* \"#utility.yul\":1620:1623   */\n      dup3\n        /* \"#utility.yul\":1616:1630   */\n      add\n        /* \"#utility.yul\":1737:1741   */\n      0x00\n        /* \"#utility.yul\":1730:1735   */\n      dup3\n        /* \"#utility.yul\":1726:1742   */\n      add\n        /* \"#utility.yul\":1720:1743   */\n      mload\n        /* \"#utility.yul\":1756:1813   */\n      tag_135\n        /* \"#utility.yul\":1807:1811   */\n      0x00\n        /* \"#utility.yul\":1802:1805   */\n      dup6\n        /* \"#utility.yul\":1798:1812   */\n      add\n        /* \"#utility.yul\":1784:1796   */\n      dup3\n        /* \"#utility.yul\":1756:1813   */\n      tag_68\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1640:1823   */\n      pop\n        /* \"#utility.yul\":1914:1918   */\n      0x20\n        /* \"#utility.yul\":1907:1912   */\n      dup3\n        /* \"#utility.yul\":1903:1919   */\n      add\n        /* \"#utility.yul\":1897:1920   */\n      mload\n        /* \"#utility.yul\":1933:1990   */\n      tag_136\n        /* \"#utility.yul\":1984:1988   */\n      0x20\n        /* \"#utility.yul\":1979:1982   */\n      dup6\n        /* \"#utility.yul\":1975:1989   */\n      add\n        /* \"#utility.yul\":1961:1973   */\n      dup3\n        /* \"#utility.yul\":1933:1990   */\n      tag_68\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1833:2000   */\n      pop\n        /* \"#utility.yul\":2095:2099   */\n      0x40\n        /* \"#utility.yul\":2088:2093   */\n      dup3\n        /* \"#utility.yul\":2084:2100   */\n      add\n        /* \"#utility.yul\":2078:2101   */\n      mload\n        /* \"#utility.yul\":2114:2171   */\n      tag_137\n        /* \"#utility.yul\":2165:2169   */\n      0x40\n        /* \"#utility.yul\":2160:2163   */\n      dup6\n        /* \"#utility.yul\":2156:2170   */\n      add\n        /* \"#utility.yul\":2142:2154   */\n      dup3\n        /* \"#utility.yul\":2114:2171   */\n      tag_68\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2010:2181   */\n      pop\n        /* \"#utility.yul\":2274:2278   */\n      0x60\n        /* \"#utility.yul\":2267:2272   */\n      dup3\n        /* \"#utility.yul\":2263:2279   */\n      add\n        /* \"#utility.yul\":2257:2280   */\n      mload\n        /* \"#utility.yul\":2293:2356   */\n      tag_138\n        /* \"#utility.yul\":2350:2354   */\n      0x60\n        /* \"#utility.yul\":2345:2348   */\n      dup6\n        /* \"#utility.yul\":2341:2355   */\n      add\n        /* \"#utility.yul\":2327:2339   */\n      dup3\n        /* \"#utility.yul\":2293:2356   */\n      tag_71\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2191:2366   */\n      pop\n        /* \"#utility.yul\":2461:2465   */\n      0x80\n        /* \"#utility.yul\":2454:2459   */\n      dup3\n        /* \"#utility.yul\":2450:2466   */\n      add\n        /* \"#utility.yul\":2444:2467   */\n      mload\n        /* \"#utility.yul\":2480:2543   */\n      tag_139\n        /* \"#utility.yul\":2537:2541   */\n      0x80\n        /* \"#utility.yul\":2532:2535   */\n      dup6\n        /* \"#utility.yul\":2528:2542   */\n      add\n        /* \"#utility.yul\":2514:2526   */\n      dup3\n        /* \"#utility.yul\":2480:2543   */\n      tag_71\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2376:2553   */\n      pop\n        /* \"#utility.yul\":1594:2560   */\n      pop\n        /* \"#utility.yul\":1454:2560   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2566:2667   */\n    tag_73:\n        /* \"#utility.yul\":2602:2609   */\n      0x00\n        /* \"#utility.yul\":2642:2660   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2635:2640   */\n      dup3\n        /* \"#utility.yul\":2631:2661   */\n      and\n        /* \"#utility.yul\":2620:2661   */\n      swap1\n      pop\n        /* \"#utility.yul\":2566:2667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2673:2778   */\n    tag_74:\n        /* \"#utility.yul\":2748:2771   */\n      tag_142\n        /* \"#utility.yul\":2765:2770   */\n      dup2\n        /* \"#utility.yul\":2748:2771   */\n      tag_73\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2743:2746   */\n      dup3\n        /* \"#utility.yul\":2736:2772   */\n      mstore\n        /* \"#utility.yul\":2673:2778   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:2844   */\n    tag_75:\n        /* \"#utility.yul\":2812:2815   */\n      0x00\n        /* \"#utility.yul\":2833:2838   */\n      dup2\n        /* \"#utility.yul\":2826:2838   */\n      swap1\n      pop\n        /* \"#utility.yul\":2784:2844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2850:2992   */\n    tag_76:\n        /* \"#utility.yul\":2900:2909   */\n      0x00\n        /* \"#utility.yul\":2933:2986   */\n      tag_145\n        /* \"#utility.yul\":2951:2985   */\n      tag_146\n        /* \"#utility.yul\":2960:2984   */\n      tag_147\n        /* \"#utility.yul\":2978:2983   */\n      dup5\n        /* \"#utility.yul\":2960:2984   */\n      tag_69\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2951:2985   */\n      tag_75\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2933:2986   */\n      tag_69\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2920:2986   */\n      swap1\n      pop\n        /* \"#utility.yul\":2850:2992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3124   */\n    tag_77:\n        /* \"#utility.yul\":3048:3057   */\n      0x00\n        /* \"#utility.yul\":3081:3118   */\n      tag_149\n        /* \"#utility.yul\":3112:3117   */\n      dup3\n        /* \"#utility.yul\":3081:3118   */\n      tag_76\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3068:3118   */\n      swap1\n      pop\n        /* \"#utility.yul\":2998:3124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3130:3269   */\n    tag_78:\n        /* \"#utility.yul\":3193:3202   */\n      0x00\n        /* \"#utility.yul\":3226:3263   */\n      tag_151\n        /* \"#utility.yul\":3257:3262   */\n      dup3\n        /* \"#utility.yul\":3226:3263   */\n      tag_77\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3213:3263   */\n      swap1\n      pop\n        /* \"#utility.yul\":3130:3269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3275:3422   */\n    tag_79:\n        /* \"#utility.yul\":3365:3415   */\n      tag_153\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3365:3415   */\n      tag_78\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3360:3363   */\n      dup3\n        /* \"#utility.yul\":3353:3416   */\n      mstore\n        /* \"#utility.yul\":3275:3422   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3428:3536   */\n    tag_80:\n        /* \"#utility.yul\":3505:3529   */\n      tag_155\n        /* \"#utility.yul\":3523:3528   */\n      dup2\n        /* \"#utility.yul\":3505:3529   */\n      tag_64\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3500:3503   */\n      dup3\n        /* \"#utility.yul\":3493:3530   */\n      mstore\n        /* \"#utility.yul\":3428:3536   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3542:3619   */\n    tag_81:\n        /* \"#utility.yul\":3579:3586   */\n      0x00\n        /* \"#utility.yul\":3608:3613   */\n      dup2\n        /* \"#utility.yul\":3597:3613   */\n      swap1\n      pop\n        /* \"#utility.yul\":3542:3619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3625:3733   */\n    tag_82:\n        /* \"#utility.yul\":3702:3726   */\n      tag_158\n        /* \"#utility.yul\":3720:3725   */\n      dup2\n        /* \"#utility.yul\":3702:3726   */\n      tag_81\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3697:3700   */\n      dup3\n        /* \"#utility.yul\":3690:3727   */\n      mstore\n        /* \"#utility.yul\":3625:3733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3839:6289   */\n    tag_83:\n        /* \"#utility.yul\":3988:3994   */\n      0x0200\n        /* \"#utility.yul\":3983:3986   */\n      dup3\n        /* \"#utility.yul\":3979:3995   */\n      add\n        /* \"#utility.yul\":4098:4102   */\n      0x00\n        /* \"#utility.yul\":4091:4096   */\n      dup3\n        /* \"#utility.yul\":4087:4103   */\n      add\n        /* \"#utility.yul\":4081:4104   */\n      mload\n        /* \"#utility.yul\":4117:4264   */\n      tag_160\n        /* \"#utility.yul\":4258:4262   */\n      0x00\n        /* \"#utility.yul\":4253:4256   */\n      dup6\n        /* \"#utility.yul\":4249:4263   */\n      add\n        /* \"#utility.yul\":4235:4247   */\n      dup3\n        /* \"#utility.yul\":4117:4264   */\n      tag_72\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":4005:4274   */\n      pop\n        /* \"#utility.yul\":4360:4364   */\n      0x20\n        /* \"#utility.yul\":4353:4358   */\n      dup3\n        /* \"#utility.yul\":4349:4365   */\n      add\n        /* \"#utility.yul\":4343:4366   */\n      mload\n        /* \"#utility.yul\":4379:4442   */\n      tag_161\n        /* \"#utility.yul\":4436:4440   */\n      0xa0\n        /* \"#utility.yul\":4431:4434   */\n      dup6\n        /* \"#utility.yul\":4427:4441   */\n      add\n        /* \"#utility.yul\":4413:4425   */\n      dup3\n        /* \"#utility.yul\":4379:4442   */\n      tag_71\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4284:4452   */\n      pop\n        /* \"#utility.yul\":4543:4547   */\n      0x40\n        /* \"#utility.yul\":4536:4541   */\n      dup3\n        /* \"#utility.yul\":4532:4548   */\n      add\n        /* \"#utility.yul\":4526:4549   */\n      mload\n        /* \"#utility.yul\":4562:4623   */\n      tag_162\n        /* \"#utility.yul\":4617:4621   */\n      0xc0\n        /* \"#utility.yul\":4612:4615   */\n      dup6\n        /* \"#utility.yul\":4608:4622   */\n      add\n        /* \"#utility.yul\":4594:4606   */\n      dup3\n        /* \"#utility.yul\":4562:4623   */\n      tag_74\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4462:4633   */\n      pop\n        /* \"#utility.yul\":4718:4722   */\n      0x60\n        /* \"#utility.yul\":4711:4716   */\n      dup3\n        /* \"#utility.yul\":4707:4723   */\n      add\n        /* \"#utility.yul\":4701:4724   */\n      mload\n        /* \"#utility.yul\":4737:4794   */\n      tag_163\n        /* \"#utility.yul\":4788:4792   */\n      0xe0\n        /* \"#utility.yul\":4783:4786   */\n      dup6\n        /* \"#utility.yul\":4779:4793   */\n      add\n        /* \"#utility.yul\":4765:4777   */\n      dup3\n        /* \"#utility.yul\":4737:4794   */\n      tag_68\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4643:4804   */\n      pop\n        /* \"#utility.yul\":4890:4894   */\n      0x80\n        /* \"#utility.yul\":4883:4888   */\n      dup3\n        /* \"#utility.yul\":4879:4895   */\n      add\n        /* \"#utility.yul\":4873:4896   */\n      mload\n        /* \"#utility.yul\":4909:4987   */\n      tag_164\n        /* \"#utility.yul\":4979:4985   */\n      0x0100\n        /* \"#utility.yul\":4974:4977   */\n      dup6\n        /* \"#utility.yul\":4970:4986   */\n      add\n        /* \"#utility.yul\":4956:4968   */\n      dup3\n        /* \"#utility.yul\":4909:4987   */\n      tag_79\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4814:4997   */\n      pop\n        /* \"#utility.yul\":5089:5093   */\n      0xa0\n        /* \"#utility.yul\":5082:5087   */\n      dup3\n        /* \"#utility.yul\":5078:5094   */\n      add\n        /* \"#utility.yul\":5072:5095   */\n      mload\n        /* \"#utility.yul\":5108:5171   */\n      tag_165\n        /* \"#utility.yul\":5163:5169   */\n      0x0120\n        /* \"#utility.yul\":5158:5161   */\n      dup6\n        /* \"#utility.yul\":5154:5170   */\n      add\n        /* \"#utility.yul\":5140:5152   */\n      dup3\n        /* \"#utility.yul\":5108:5171   */\n      tag_74\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5007:5181   */\n      pop\n        /* \"#utility.yul\":5279:5283   */\n      0xc0\n        /* \"#utility.yul\":5272:5277   */\n      dup3\n        /* \"#utility.yul\":5268:5284   */\n      add\n        /* \"#utility.yul\":5262:5285   */\n      mload\n        /* \"#utility.yul\":5298:5357   */\n      tag_166\n        /* \"#utility.yul\":5349:5355   */\n      0x0140\n        /* \"#utility.yul\":5344:5347   */\n      dup6\n        /* \"#utility.yul\":5340:5356   */\n      add\n        /* \"#utility.yul\":5326:5338   */\n      dup3\n        /* \"#utility.yul\":5298:5357   */\n      tag_68\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5191:5367   */\n      pop\n        /* \"#utility.yul\":5453:5457   */\n      0xe0\n        /* \"#utility.yul\":5446:5451   */\n      dup3\n        /* \"#utility.yul\":5442:5458   */\n      add\n        /* \"#utility.yul\":5436:5459   */\n      mload\n        /* \"#utility.yul\":5472:5537   */\n      tag_167\n        /* \"#utility.yul\":5529:5535   */\n      0x0160\n        /* \"#utility.yul\":5524:5527   */\n      dup6\n        /* \"#utility.yul\":5520:5536   */\n      add\n        /* \"#utility.yul\":5506:5518   */\n      dup3\n        /* \"#utility.yul\":5472:5537   */\n      tag_80\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5377:5547   */\n      pop\n        /* \"#utility.yul\":5635:5641   */\n      0x0100\n        /* \"#utility.yul\":5628:5633   */\n      dup3\n        /* \"#utility.yul\":5624:5642   */\n      add\n        /* \"#utility.yul\":5618:5643   */\n      mload\n        /* \"#utility.yul\":5656:5721   */\n      tag_168\n        /* \"#utility.yul\":5713:5719   */\n      0x0180\n        /* \"#utility.yul\":5708:5711   */\n      dup6\n        /* \"#utility.yul\":5704:5720   */\n      add\n        /* \"#utility.yul\":5690:5702   */\n      dup3\n        /* \"#utility.yul\":5656:5721   */\n      tag_80\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5557:5731   */\n      pop\n        /* \"#utility.yul\":5813:5819   */\n      0x0120\n        /* \"#utility.yul\":5806:5811   */\n      dup3\n        /* \"#utility.yul\":5802:5820   */\n      add\n        /* \"#utility.yul\":5796:5821   */\n      mload\n        /* \"#utility.yul\":5834:5899   */\n      tag_169\n        /* \"#utility.yul\":5891:5897   */\n      0x01a0\n        /* \"#utility.yul\":5886:5889   */\n      dup6\n        /* \"#utility.yul\":5882:5898   */\n      add\n        /* \"#utility.yul\":5868:5880   */\n      dup3\n        /* \"#utility.yul\":5834:5899   */\n      tag_82\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5741:5909   */\n      pop\n        /* \"#utility.yul\":6004:6010   */\n      0x0140\n        /* \"#utility.yul\":5997:6002   */\n      dup3\n        /* \"#utility.yul\":5993:6011   */\n      add\n        /* \"#utility.yul\":5987:6012   */\n      mload\n        /* \"#utility.yul\":6025:6090   */\n      tag_170\n        /* \"#utility.yul\":6082:6088   */\n      0x01c0\n        /* \"#utility.yul\":6077:6080   */\n      dup6\n        /* \"#utility.yul\":6073:6089   */\n      add\n        /* \"#utility.yul\":6059:6071   */\n      dup3\n        /* \"#utility.yul\":6025:6090   */\n      tag_71\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5919:6100   */\n      pop\n        /* \"#utility.yul\":6186:6192   */\n      0x0160\n        /* \"#utility.yul\":6179:6184   */\n      dup3\n        /* \"#utility.yul\":6175:6193   */\n      add\n        /* \"#utility.yul\":6169:6194   */\n      mload\n        /* \"#utility.yul\":6207:6272   */\n      tag_171\n        /* \"#utility.yul\":6264:6270   */\n      0x01e0\n        /* \"#utility.yul\":6259:6262   */\n      dup6\n        /* \"#utility.yul\":6255:6271   */\n      add\n        /* \"#utility.yul\":6241:6253   */\n      dup3\n        /* \"#utility.yul\":6207:6272   */\n      tag_71\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6110:6282   */\n      pop\n        /* \"#utility.yul\":3957:6289   */\n      pop\n        /* \"#utility.yul\":3839:6289   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6295:6622   */\n    tag_22:\n        /* \"#utility.yul\":6440:6444   */\n      0x00\n        /* \"#utility.yul\":6478:6481   */\n      0x0200\n        /* \"#utility.yul\":6467:6476   */\n      dup3\n        /* \"#utility.yul\":6463:6482   */\n      add\n        /* \"#utility.yul\":6455:6482   */\n      swap1\n      pop\n        /* \"#utility.yul\":6492:6615   */\n      tag_173\n        /* \"#utility.yul\":6612:6613   */\n      0x00\n        /* \"#utility.yul\":6601:6610   */\n      dup4\n        /* \"#utility.yul\":6597:6614   */\n      add\n        /* \"#utility.yul\":6588:6594   */\n      dup5\n        /* \"#utility.yul\":6492:6615   */\n      tag_83\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":6295:6622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6628:6726   */\n    tag_84:\n        /* \"#utility.yul\":6679:6685   */\n      0x00\n        /* \"#utility.yul\":6713:6718   */\n      dup2\n        /* \"#utility.yul\":6707:6719   */\n      mload\n        /* \"#utility.yul\":6697:6719   */\n      swap1\n      pop\n        /* \"#utility.yul\":6628:6726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6732:6900   */\n    tag_85:\n        /* \"#utility.yul\":6815:6826   */\n      0x00\n        /* \"#utility.yul\":6849:6855   */\n      dup3\n        /* \"#utility.yul\":6844:6847   */\n      dup3\n        /* \"#utility.yul\":6837:6856   */\n      mstore\n        /* \"#utility.yul\":6889:6893   */\n      0x20\n        /* \"#utility.yul\":6884:6887   */\n      dup3\n        /* \"#utility.yul\":6880:6894   */\n      add\n        /* \"#utility.yul\":6865:6894   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:6900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6906:7152   */\n    tag_86:\n        /* \"#utility.yul\":6987:6988   */\n      0x00\n        /* \"#utility.yul\":6997:7110   */\n    tag_177:\n        /* \"#utility.yul\":7011:7017   */\n      dup4\n        /* \"#utility.yul\":7008:7009   */\n      dup2\n        /* \"#utility.yul\":7005:7018   */\n      lt\n        /* \"#utility.yul\":6997:7110   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":7096:7097   */\n      dup1\n        /* \"#utility.yul\":7091:7094   */\n      dup3\n        /* \"#utility.yul\":7087:7098   */\n      add\n        /* \"#utility.yul\":7081:7099   */\n      mload\n        /* \"#utility.yul\":7077:7078   */\n      dup2\n        /* \"#utility.yul\":7072:7075   */\n      dup5\n        /* \"#utility.yul\":7068:7079   */\n      add\n        /* \"#utility.yul\":7061:7100   */\n      mstore\n        /* \"#utility.yul\":7033:7035   */\n      0x20\n        /* \"#utility.yul\":7030:7031   */\n      dup2\n        /* \"#utility.yul\":7026:7036   */\n      add\n        /* \"#utility.yul\":7021:7036   */\n      swap1\n      pop\n        /* \"#utility.yul\":6997:7110   */\n      jump(tag_177)\n    tag_179:\n        /* \"#utility.yul\":7144:7145   */\n      0x00\n        /* \"#utility.yul\":7135:7141   */\n      dup5\n        /* \"#utility.yul\":7130:7133   */\n      dup5\n        /* \"#utility.yul\":7126:7142   */\n      add\n        /* \"#utility.yul\":7119:7146   */\n      mstore\n        /* \"#utility.yul\":6968:7152   */\n      pop\n        /* \"#utility.yul\":6906:7152   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7158:7260   */\n    tag_87:\n        /* \"#utility.yul\":7199:7205   */\n      0x00\n        /* \"#utility.yul\":7250:7252   */\n      0x1f\n        /* \"#utility.yul\":7246:7253   */\n      not\n        /* \"#utility.yul\":7241:7243   */\n      0x1f\n        /* \"#utility.yul\":7234:7239   */\n      dup4\n        /* \"#utility.yul\":7230:7244   */\n      add\n        /* \"#utility.yul\":7226:7254   */\n      and\n        /* \"#utility.yul\":7216:7254   */\n      swap1\n      pop\n        /* \"#utility.yul\":7158:7260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7266:7639   */\n    tag_88:\n        /* \"#utility.yul\":7352:7355   */\n      0x00\n        /* \"#utility.yul\":7380:7418   */\n      tag_182\n        /* \"#utility.yul\":7412:7417   */\n      dup3\n        /* \"#utility.yul\":7380:7418   */\n      tag_84\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":7434:7504   */\n      tag_183\n        /* \"#utility.yul\":7497:7503   */\n      dup2\n        /* \"#utility.yul\":7492:7495   */\n      dup6\n        /* \"#utility.yul\":7434:7504   */\n      tag_85\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7427:7504   */\n      swap4\n      pop\n        /* \"#utility.yul\":7513:7578   */\n      tag_184\n        /* \"#utility.yul\":7571:7577   */\n      dup2\n        /* \"#utility.yul\":7566:7569   */\n      dup6\n        /* \"#utility.yul\":7559:7563   */\n      0x20\n        /* \"#utility.yul\":7552:7557   */\n      dup7\n        /* \"#utility.yul\":7548:7564   */\n      add\n        /* \"#utility.yul\":7513:7578   */\n      tag_86\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":7603:7632   */\n      tag_185\n        /* \"#utility.yul\":7625:7631   */\n      dup2\n        /* \"#utility.yul\":7603:7632   */\n      tag_87\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":7598:7601   */\n      dup5\n        /* \"#utility.yul\":7594:7633   */\n      add\n        /* \"#utility.yul\":7587:7633   */\n      swap2\n      pop\n        /* \"#utility.yul\":7356:7639   */\n      pop\n        /* \"#utility.yul\":7266:7639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7645:7954   */\n    tag_29:\n        /* \"#utility.yul\":7756:7760   */\n      0x00\n        /* \"#utility.yul\":7794:7796   */\n      0x20\n        /* \"#utility.yul\":7783:7792   */\n      dup3\n        /* \"#utility.yul\":7779:7797   */\n      add\n        /* \"#utility.yul\":7771:7797   */\n      swap1\n      pop\n        /* \"#utility.yul\":7843:7852   */\n      dup2\n        /* \"#utility.yul\":7837:7841   */\n      dup2\n        /* \"#utility.yul\":7833:7853   */\n      sub\n        /* \"#utility.yul\":7829:7830   */\n      0x00\n        /* \"#utility.yul\":7818:7827   */\n      dup4\n        /* \"#utility.yul\":7814:7831   */\n      add\n        /* \"#utility.yul\":7807:7854   */\n      mstore\n        /* \"#utility.yul\":7871:7947   */\n      tag_187\n        /* \"#utility.yul\":7942:7946   */\n      dup2\n        /* \"#utility.yul\":7933:7939   */\n      dup5\n        /* \"#utility.yul\":7871:7947   */\n      tag_88\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":7863:7947   */\n      swap1\n      pop\n        /* \"#utility.yul\":7645:7954   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7960:8140   */\n    tag_89:\n        /* \"#utility.yul\":8008:8085   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8005:8006   */\n      0x00\n        /* \"#utility.yul\":7998:8086   */\n      mstore\n        /* \"#utility.yul\":8105:8109   */\n      0x22\n        /* \"#utility.yul\":8102:8103   */\n      0x04\n        /* \"#utility.yul\":8095:8110   */\n      mstore\n        /* \"#utility.yul\":8129:8133   */\n      0x24\n        /* \"#utility.yul\":8126:8127   */\n      0x00\n        /* \"#utility.yul\":8119:8134   */\n      revert\n        /* \"#utility.yul\":8146:8466   */\n    tag_57:\n        /* \"#utility.yul\":8190:8196   */\n      0x00\n        /* \"#utility.yul\":8227:8228   */\n      0x02\n        /* \"#utility.yul\":8221:8225   */\n      dup3\n        /* \"#utility.yul\":8217:8229   */\n      div\n        /* \"#utility.yul\":8207:8229   */\n      swap1\n      pop\n        /* \"#utility.yul\":8274:8275   */\n      0x01\n        /* \"#utility.yul\":8268:8272   */\n      dup3\n        /* \"#utility.yul\":8264:8276   */\n      and\n        /* \"#utility.yul\":8295:8313   */\n      dup1\n        /* \"#utility.yul\":8285:8366   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":8351:8355   */\n      0x7f\n        /* \"#utility.yul\":8343:8349   */\n      dup3\n        /* \"#utility.yul\":8339:8356   */\n      and\n        /* \"#utility.yul\":8329:8356   */\n      swap2\n      pop\n        /* \"#utility.yul\":8285:8366   */\n    tag_190:\n        /* \"#utility.yul\":8413:8415   */\n      0x20\n        /* \"#utility.yul\":8405:8411   */\n      dup3\n        /* \"#utility.yul\":8402:8416   */\n      lt\n        /* \"#utility.yul\":8382:8400   */\n      dup2\n        /* \"#utility.yul\":8379:8417   */\n      sub\n        /* \"#utility.yul\":8376:8460   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":8432:8450   */\n      tag_192\n      tag_89\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":8376:8460   */\n    tag_191:\n        /* \"#utility.yul\":8197:8466   */\n      pop\n        /* \"#utility.yul\":8146:8466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8472:8612   */\n    tag_90:\n        /* \"#utility.yul\":8520:8524   */\n      0x00\n        /* \"#utility.yul\":8543:8546   */\n      dup2\n        /* \"#utility.yul\":8535:8546   */\n      swap1\n      pop\n        /* \"#utility.yul\":8566:8569   */\n      dup2\n        /* \"#utility.yul\":8563:8564   */\n      0x00\n        /* \"#utility.yul\":8556:8570   */\n      mstore\n        /* \"#utility.yul\":8600:8604   */\n      0x20\n        /* \"#utility.yul\":8597:8598   */\n      0x00\n        /* \"#utility.yul\":8587:8605   */\n      keccak256\n        /* \"#utility.yul\":8579:8605   */\n      swap1\n      pop\n        /* \"#utility.yul\":8472:8612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8640:9467   */\n    tag_91:\n        /* \"#utility.yul\":8723:8726   */\n      0x00\n        /* \"#utility.yul\":8760:8765   */\n      dup2\n        /* \"#utility.yul\":8754:8766   */\n      sload\n        /* \"#utility.yul\":8789:8825   */\n      tag_195\n        /* \"#utility.yul\":8815:8824   */\n      dup2\n        /* \"#utility.yul\":8789:8825   */\n      tag_57\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":8841:8911   */\n      tag_196\n        /* \"#utility.yul\":8904:8910   */\n      dup2\n        /* \"#utility.yul\":8899:8902   */\n      dup7\n        /* \"#utility.yul\":8841:8911   */\n      tag_85\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":8834:8911   */\n      swap5\n      pop\n        /* \"#utility.yul\":8942:8943   */\n      0x01\n        /* \"#utility.yul\":8931:8940   */\n      dup3\n        /* \"#utility.yul\":8927:8944   */\n      and\n        /* \"#utility.yul\":8958:8959   */\n      0x00\n        /* \"#utility.yul\":8953:9117   */\n      dup2\n      eq\n      tag_198\n      jumpi\n        /* \"#utility.yul\":9131:9132   */\n      0x01\n        /* \"#utility.yul\":9126:9461   */\n      dup2\n      eq\n      tag_199\n      jumpi\n        /* \"#utility.yul\":8920:9461   */\n      jump(tag_197)\n        /* \"#utility.yul\":8953:9117   */\n    tag_198:\n        /* \"#utility.yul\":9037:9041   */\n      0xff\n        /* \"#utility.yul\":9033:9042   */\n      not\n        /* \"#utility.yul\":9022:9031   */\n      dup4\n        /* \"#utility.yul\":9018:9043   */\n      and\n        /* \"#utility.yul\":9013:9016   */\n      dup7\n        /* \"#utility.yul\":9006:9044   */\n      mstore\n        /* \"#utility.yul\":9097:9103   */\n      dup2\n        /* \"#utility.yul\":9090:9104   */\n      iszero\n        /* \"#utility.yul\":9083:9105   */\n      iszero\n        /* \"#utility.yul\":9077:9081   */\n      0x20\n        /* \"#utility.yul\":9073:9106   */\n      mul\n        /* \"#utility.yul\":9068:9071   */\n      dup7\n        /* \"#utility.yul\":9064:9107   */\n      add\n        /* \"#utility.yul\":9057:9107   */\n      swap4\n      pop\n        /* \"#utility.yul\":8953:9117   */\n      jump(tag_197)\n        /* \"#utility.yul\":9126:9461   */\n    tag_199:\n        /* \"#utility.yul\":9193:9230   */\n      tag_200\n        /* \"#utility.yul\":9224:9229   */\n      dup6\n        /* \"#utility.yul\":9193:9230   */\n      tag_90\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":9252:9253   */\n      0x00\n        /* \"#utility.yul\":9266:9420   */\n    tag_201:\n        /* \"#utility.yul\":9280:9286   */\n      dup4\n        /* \"#utility.yul\":9277:9278   */\n      dup2\n        /* \"#utility.yul\":9274:9287   */\n      lt\n        /* \"#utility.yul\":9266:9420   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":9354:9361   */\n      dup2\n        /* \"#utility.yul\":9348:9362   */\n      sload\n        /* \"#utility.yul\":9344:9345   */\n      dup2\n        /* \"#utility.yul\":9339:9342   */\n      dup10\n        /* \"#utility.yul\":9335:9346   */\n      add\n        /* \"#utility.yul\":9328:9363   */\n      mstore\n        /* \"#utility.yul\":9404:9405   */\n      0x01\n        /* \"#utility.yul\":9395:9402   */\n      dup3\n        /* \"#utility.yul\":9391:9406   */\n      add\n        /* \"#utility.yul\":9380:9406   */\n      swap2\n      pop\n        /* \"#utility.yul\":9302:9306   */\n      0x20\n        /* \"#utility.yul\":9299:9300   */\n      dup2\n        /* \"#utility.yul\":9295:9307   */\n      add\n        /* \"#utility.yul\":9290:9307   */\n      swap1\n      pop\n        /* \"#utility.yul\":9266:9420   */\n      jump(tag_201)\n    tag_203:\n        /* \"#utility.yul\":9449:9450   */\n      dup1\n        /* \"#utility.yul\":9444:9447   */\n      dup9\n        /* \"#utility.yul\":9440:9451   */\n      add\n        /* \"#utility.yul\":9433:9451   */\n      swap6\n      pop\n        /* \"#utility.yul\":9133:9461   */\n      pop\n      pop\n        /* \"#utility.yul\":8920:9461   */\n    tag_197:\n      pop\n        /* \"#utility.yul\":8727:9467   */\n      pop\n      pop\n        /* \"#utility.yul\":8640:9467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9473:9591   */\n    tag_92:\n        /* \"#utility.yul\":9560:9584   */\n      tag_205\n        /* \"#utility.yul\":9578:9583   */\n      dup2\n        /* \"#utility.yul\":9560:9584   */\n      tag_70\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":9555:9558   */\n      dup3\n        /* \"#utility.yul\":9548:9585   */\n      mstore\n        /* \"#utility.yul\":9473:9591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9597:10010   */\n    tag_32:\n        /* \"#utility.yul\":9733:9737   */\n      0x00\n        /* \"#utility.yul\":9771:9773   */\n      0x40\n        /* \"#utility.yul\":9760:9769   */\n      dup3\n        /* \"#utility.yul\":9756:9774   */\n      add\n        /* \"#utility.yul\":9748:9774   */\n      swap1\n      pop\n        /* \"#utility.yul\":9820:9829   */\n      dup2\n        /* \"#utility.yul\":9814:9818   */\n      dup2\n        /* \"#utility.yul\":9810:9830   */\n      sub\n        /* \"#utility.yul\":9806:9807   */\n      0x00\n        /* \"#utility.yul\":9795:9804   */\n      dup4\n        /* \"#utility.yul\":9791:9808   */\n      add\n        /* \"#utility.yul\":9784:9831   */\n      mstore\n        /* \"#utility.yul\":9848:9921   */\n      tag_207\n        /* \"#utility.yul\":9916:9920   */\n      dup2\n        /* \"#utility.yul\":9907:9913   */\n      dup6\n        /* \"#utility.yul\":9848:9921   */\n      tag_91\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":9840:9921   */\n      swap1\n      pop\n        /* \"#utility.yul\":9931:10003   */\n      tag_208\n        /* \"#utility.yul\":9999:10001   */\n      0x20\n        /* \"#utility.yul\":9988:9997   */\n      dup4\n        /* \"#utility.yul\":9984:10002   */\n      add\n        /* \"#utility.yul\":9975:9981   */\n      dup5\n        /* \"#utility.yul\":9931:10003   */\n      tag_92\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":9597:10010   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10016:10091   */\n    tag_93:\n        /* \"#utility.yul\":10049:10055   */\n      0x00\n        /* \"#utility.yul\":10082:10084   */\n      0x40\n        /* \"#utility.yul\":10076:10085   */\n      mload\n        /* \"#utility.yul\":10066:10085   */\n      swap1\n      pop\n        /* \"#utility.yul\":10016:10091   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":10097:10214   */\n    tag_94:\n        /* \"#utility.yul\":10206:10207   */\n      0x00\n        /* \"#utility.yul\":10203:10204   */\n      dup1\n        /* \"#utility.yul\":10196:10208   */\n      revert\n        /* \"#utility.yul\":10343:10465   */\n    tag_96:\n        /* \"#utility.yul\":10416:10440   */\n      tag_213\n        /* \"#utility.yul\":10434:10439   */\n      dup2\n        /* \"#utility.yul\":10416:10440   */\n      tag_64\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":10409:10414   */\n      dup2\n        /* \"#utility.yul\":10406:10441   */\n      eq\n        /* \"#utility.yul\":10396:10459   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":10455:10456   */\n      0x00\n        /* \"#utility.yul\":10452:10453   */\n      dup1\n        /* \"#utility.yul\":10445:10457   */\n      revert\n        /* \"#utility.yul\":10396:10459   */\n    tag_214:\n        /* \"#utility.yul\":10343:10465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10614   */\n    tag_97:\n        /* \"#utility.yul\":10528:10533   */\n      0x00\n        /* \"#utility.yul\":10559:10565   */\n      dup2\n        /* \"#utility.yul\":10553:10566   */\n      mload\n        /* \"#utility.yul\":10544:10566   */\n      swap1\n      pop\n        /* \"#utility.yul\":10575:10608   */\n      tag_216\n        /* \"#utility.yul\":10602:10607   */\n      dup2\n        /* \"#utility.yul\":10575:10608   */\n      tag_96\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":10471:10614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10620:10971   */\n    tag_36:\n        /* \"#utility.yul\":10690:10696   */\n      0x00\n        /* \"#utility.yul\":10739:10741   */\n      0x20\n        /* \"#utility.yul\":10727:10736   */\n      dup3\n        /* \"#utility.yul\":10718:10725   */\n      dup5\n        /* \"#utility.yul\":10714:10737   */\n      sub\n        /* \"#utility.yul\":10710:10742   */\n      slt\n        /* \"#utility.yul\":10707:10826   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":10745:10824   */\n      tag_219\n      tag_94\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":10707:10826   */\n    tag_218:\n        /* \"#utility.yul\":10865:10866   */\n      0x00\n        /* \"#utility.yul\":10890:10954   */\n      tag_220\n        /* \"#utility.yul\":10946:10953   */\n      dup5\n        /* \"#utility.yul\":10937:10943   */\n      dup3\n        /* \"#utility.yul\":10926:10935   */\n      dup6\n        /* \"#utility.yul\":10922:10944   */\n      add\n        /* \"#utility.yul\":10890:10954   */\n      tag_97\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":10880:10954   */\n      swap2\n      pop\n        /* \"#utility.yul\":10836:10964   */\n      pop\n        /* \"#utility.yul\":10620:10971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10977:11093   */\n    tag_98:\n        /* \"#utility.yul\":11047:11068   */\n      tag_222\n        /* \"#utility.yul\":11062:11067   */\n      dup2\n        /* \"#utility.yul\":11047:11068   */\n      tag_66\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":11040:11045   */\n      dup2\n        /* \"#utility.yul\":11037:11069   */\n      eq\n        /* \"#utility.yul\":11027:11087   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":11083:11084   */\n      0x00\n        /* \"#utility.yul\":11080:11081   */\n      dup1\n        /* \"#utility.yul\":11073:11085   */\n      revert\n        /* \"#utility.yul\":11027:11087   */\n    tag_223:\n        /* \"#utility.yul\":10977:11093   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11099:11236   */\n    tag_99:\n        /* \"#utility.yul\":11153:11158   */\n      0x00\n        /* \"#utility.yul\":11184:11190   */\n      dup2\n        /* \"#utility.yul\":11178:11191   */\n      mload\n        /* \"#utility.yul\":11169:11191   */\n      swap1\n      pop\n        /* \"#utility.yul\":11200:11230   */\n      tag_225\n        /* \"#utility.yul\":11224:11229   */\n      dup2\n        /* \"#utility.yul\":11200:11230   */\n      tag_98\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":11099:11236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11242:11587   */\n    tag_42:\n        /* \"#utility.yul\":11309:11315   */\n      0x00\n        /* \"#utility.yul\":11358:11360   */\n      0x20\n        /* \"#utility.yul\":11346:11355   */\n      dup3\n        /* \"#utility.yul\":11337:11344   */\n      dup5\n        /* \"#utility.yul\":11333:11356   */\n      sub\n        /* \"#utility.yul\":11329:11361   */\n      slt\n        /* \"#utility.yul\":11326:11445   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":11364:11443   */\n      tag_228\n      tag_94\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":11326:11445   */\n    tag_227:\n        /* \"#utility.yul\":11484:11485   */\n      0x00\n        /* \"#utility.yul\":11509:11570   */\n      tag_229\n        /* \"#utility.yul\":11562:11569   */\n      dup5\n        /* \"#utility.yul\":11553:11559   */\n      dup3\n        /* \"#utility.yul\":11542:11551   */\n      dup6\n        /* \"#utility.yul\":11538:11560   */\n      add\n        /* \"#utility.yul\":11509:11570   */\n      tag_99\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":11499:11570   */\n      swap2\n      pop\n        /* \"#utility.yul\":11455:11580   */\n      pop\n        /* \"#utility.yul\":11242:11587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11593:11710   */\n    tag_100:\n        /* \"#utility.yul\":11702:11703   */\n      0x00\n        /* \"#utility.yul\":11699:11700   */\n      dup1\n        /* \"#utility.yul\":11692:11704   */\n      revert\n        /* \"#utility.yul\":11716:11896   */\n    tag_101:\n        /* \"#utility.yul\":11764:11841   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11761:11762   */\n      0x00\n        /* \"#utility.yul\":11754:11842   */\n      mstore\n        /* \"#utility.yul\":11861:11865   */\n      0x41\n        /* \"#utility.yul\":11858:11859   */\n      0x04\n        /* \"#utility.yul\":11851:11866   */\n      mstore\n        /* \"#utility.yul\":11885:11889   */\n      0x24\n        /* \"#utility.yul\":11882:11883   */\n      0x00\n        /* \"#utility.yul\":11875:11890   */\n      revert\n        /* \"#utility.yul\":11902:12183   */\n    tag_102:\n        /* \"#utility.yul\":11985:12012   */\n      tag_233\n        /* \"#utility.yul\":12007:12011   */\n      dup3\n        /* \"#utility.yul\":11985:12012   */\n      tag_87\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":11977:11983   */\n      dup2\n        /* \"#utility.yul\":11973:12013   */\n      add\n        /* \"#utility.yul\":12115:12121   */\n      dup2\n        /* \"#utility.yul\":12103:12113   */\n      dup2\n        /* \"#utility.yul\":12100:12122   */\n      lt\n        /* \"#utility.yul\":12079:12097   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12067:12077   */\n      dup3\n        /* \"#utility.yul\":12064:12098   */\n      gt\n        /* \"#utility.yul\":12061:12123   */\n      or\n        /* \"#utility.yul\":12058:12146   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":12126:12144   */\n      tag_235\n      tag_101\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":12058:12146   */\n    tag_234:\n        /* \"#utility.yul\":12166:12176   */\n      dup1\n        /* \"#utility.yul\":12162:12164   */\n      0x40\n        /* \"#utility.yul\":12155:12177   */\n      mstore\n        /* \"#utility.yul\":11945:12183   */\n      pop\n        /* \"#utility.yul\":11902:12183   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12189:12318   */\n    tag_103:\n        /* \"#utility.yul\":12223:12229   */\n      0x00\n        /* \"#utility.yul\":12250:12270   */\n      tag_237\n      tag_93\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":12240:12270   */\n      swap1\n      pop\n        /* \"#utility.yul\":12279:12312   */\n      tag_238\n        /* \"#utility.yul\":12307:12311   */\n      dup3\n        /* \"#utility.yul\":12299:12305   */\n      dup3\n        /* \"#utility.yul\":12279:12312   */\n      tag_102\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":12189:12318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12447:12569   */\n    tag_105:\n        /* \"#utility.yul\":12520:12544   */\n      tag_241\n        /* \"#utility.yul\":12538:12543   */\n      dup2\n        /* \"#utility.yul\":12520:12544   */\n      tag_70\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":12513:12518   */\n      dup2\n        /* \"#utility.yul\":12510:12545   */\n      eq\n        /* \"#utility.yul\":12500:12563   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":12559:12560   */\n      0x00\n        /* \"#utility.yul\":12556:12557   */\n      dup1\n        /* \"#utility.yul\":12549:12561   */\n      revert\n        /* \"#utility.yul\":12500:12563   */\n    tag_242:\n        /* \"#utility.yul\":12447:12569   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12575:12718   */\n    tag_106:\n        /* \"#utility.yul\":12632:12637   */\n      0x00\n        /* \"#utility.yul\":12663:12669   */\n      dup2\n        /* \"#utility.yul\":12657:12670   */\n      mload\n        /* \"#utility.yul\":12648:12670   */\n      swap1\n      pop\n        /* \"#utility.yul\":12679:12712   */\n      tag_244\n        /* \"#utility.yul\":12706:12711   */\n      dup2\n        /* \"#utility.yul\":12679:12712   */\n      tag_105\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":12575:12718   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12792:13995   */\n    tag_107:\n        /* \"#utility.yul\":12894:12899   */\n      0x00\n        /* \"#utility.yul\":12938:12942   */\n      0xa0\n        /* \"#utility.yul\":12926:12935   */\n      dup3\n        /* \"#utility.yul\":12921:12924   */\n      dup5\n        /* \"#utility.yul\":12917:12936   */\n      sub\n        /* \"#utility.yul\":12913:12943   */\n      slt\n        /* \"#utility.yul\":12910:13027   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":12946:13025   */\n      tag_247\n      tag_100\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":12910:13027   */\n    tag_246:\n        /* \"#utility.yul\":13045:13066   */\n      tag_248\n        /* \"#utility.yul\":13061:13065   */\n      0xa0\n        /* \"#utility.yul\":13045:13066   */\n      tag_103\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":13036:13066   */\n      swap1\n      pop\n        /* \"#utility.yul\":13150:13151   */\n      0x00\n        /* \"#utility.yul\":13190:13247   */\n      tag_249\n        /* \"#utility.yul\":13243:13246   */\n      dup5\n        /* \"#utility.yul\":13234:13240   */\n      dup3\n        /* \"#utility.yul\":13223:13232   */\n      dup6\n        /* \"#utility.yul\":13219:13241   */\n      add\n        /* \"#utility.yul\":13190:13247   */\n      tag_99\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":13183:13187   */\n      0x00\n        /* \"#utility.yul\":13176:13181   */\n      dup4\n        /* \"#utility.yul\":13172:13188   */\n      add\n        /* \"#utility.yul\":13165:13248   */\n      mstore\n        /* \"#utility.yul\":13076:13259   */\n      pop\n        /* \"#utility.yul\":13327:13329   */\n      0x20\n        /* \"#utility.yul\":13368:13425   */\n      tag_250\n        /* \"#utility.yul\":13421:13424   */\n      dup5\n        /* \"#utility.yul\":13412:13418   */\n      dup3\n        /* \"#utility.yul\":13401:13410   */\n      dup6\n        /* \"#utility.yul\":13397:13419   */\n      add\n        /* \"#utility.yul\":13368:13425   */\n      tag_99\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":13361:13365   */\n      0x20\n        /* \"#utility.yul\":13354:13359   */\n      dup4\n        /* \"#utility.yul\":13350:13366   */\n      add\n        /* \"#utility.yul\":13343:13426   */\n      mstore\n        /* \"#utility.yul\":13269:13437   */\n      pop\n        /* \"#utility.yul\":13509:13511   */\n      0x40\n        /* \"#utility.yul\":13550:13607   */\n      tag_251\n        /* \"#utility.yul\":13603:13606   */\n      dup5\n        /* \"#utility.yul\":13594:13600   */\n      dup3\n        /* \"#utility.yul\":13583:13592   */\n      dup6\n        /* \"#utility.yul\":13579:13601   */\n      add\n        /* \"#utility.yul\":13550:13607   */\n      tag_99\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":13543:13547   */\n      0x40\n        /* \"#utility.yul\":13536:13541   */\n      dup4\n        /* \"#utility.yul\":13532:13548   */\n      add\n        /* \"#utility.yul\":13525:13608   */\n      mstore\n        /* \"#utility.yul\":13447:13619   */\n      pop\n        /* \"#utility.yul\":13689:13691   */\n      0x60\n        /* \"#utility.yul\":13730:13790   */\n      tag_252\n        /* \"#utility.yul\":13786:13789   */\n      dup5\n        /* \"#utility.yul\":13777:13783   */\n      dup3\n        /* \"#utility.yul\":13766:13775   */\n      dup6\n        /* \"#utility.yul\":13762:13784   */\n      add\n        /* \"#utility.yul\":13730:13790   */\n      tag_106\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":13723:13727   */\n      0x60\n        /* \"#utility.yul\":13716:13721   */\n      dup4\n        /* \"#utility.yul\":13712:13728   */\n      add\n        /* \"#utility.yul\":13705:13791   */\n      mstore\n        /* \"#utility.yul\":13629:13802   */\n      pop\n        /* \"#utility.yul\":13874:13877   */\n      0x80\n        /* \"#utility.yul\":13916:13976   */\n      tag_253\n        /* \"#utility.yul\":13972:13975   */\n      dup5\n        /* \"#utility.yul\":13963:13969   */\n      dup3\n        /* \"#utility.yul\":13952:13961   */\n      dup6\n        /* \"#utility.yul\":13948:13970   */\n      add\n        /* \"#utility.yul\":13916:13976   */\n      tag_106\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":13909:13913   */\n      0x80\n        /* \"#utility.yul\":13902:13907   */\n      dup4\n        /* \"#utility.yul\":13898:13914   */\n      add\n        /* \"#utility.yul\":13891:13977   */\n      mstore\n        /* \"#utility.yul\":13812:13988   */\n      pop\n        /* \"#utility.yul\":12792:13995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14001:14121   */\n    tag_108:\n        /* \"#utility.yul\":14073:14096   */\n      tag_255\n        /* \"#utility.yul\":14090:14095   */\n      dup2\n        /* \"#utility.yul\":14073:14096   */\n      tag_73\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":14066:14071   */\n      dup2\n        /* \"#utility.yul\":14063:14097   */\n      eq\n        /* \"#utility.yul\":14053:14115   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":14111:14112   */\n      0x00\n        /* \"#utility.yul\":14108:14109   */\n      dup1\n        /* \"#utility.yul\":14101:14113   */\n      revert\n        /* \"#utility.yul\":14053:14115   */\n    tag_256:\n        /* \"#utility.yul\":14001:14121   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14127:14268   */\n    tag_109:\n        /* \"#utility.yul\":14183:14188   */\n      0x00\n        /* \"#utility.yul\":14214:14220   */\n      dup2\n        /* \"#utility.yul\":14208:14221   */\n      mload\n        /* \"#utility.yul\":14199:14221   */\n      swap1\n      pop\n        /* \"#utility.yul\":14230:14262   */\n      tag_258\n        /* \"#utility.yul\":14256:14261   */\n      dup2\n        /* \"#utility.yul\":14230:14262   */\n      tag_108\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":14127:14268   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14274:14383   */\n    tag_110:\n        /* \"#utility.yul\":14324:14331   */\n      0x00\n        /* \"#utility.yul\":14353:14377   */\n      tag_260\n        /* \"#utility.yul\":14371:14376   */\n      dup3\n        /* \"#utility.yul\":14353:14377   */\n      tag_70\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":14342:14377   */\n      swap1\n      pop\n        /* \"#utility.yul\":14274:14383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14389:14537   */\n    tag_111:\n        /* \"#utility.yul\":14475:14512   */\n      tag_262\n        /* \"#utility.yul\":14506:14511   */\n      dup2\n        /* \"#utility.yul\":14475:14512   */\n      tag_110\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":14468:14473   */\n      dup2\n        /* \"#utility.yul\":14465:14513   */\n      eq\n        /* \"#utility.yul\":14455:14531   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":14527:14528   */\n      0x00\n        /* \"#utility.yul\":14524:14525   */\n      dup1\n        /* \"#utility.yul\":14517:14529   */\n      revert\n        /* \"#utility.yul\":14455:14531   */\n    tag_263:\n        /* \"#utility.yul\":14389:14537   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14543:14712   */\n    tag_112:\n        /* \"#utility.yul\":14613:14618   */\n      0x00\n        /* \"#utility.yul\":14644:14650   */\n      dup2\n        /* \"#utility.yul\":14638:14651   */\n      mload\n        /* \"#utility.yul\":14629:14651   */\n      swap1\n      pop\n        /* \"#utility.yul\":14660:14706   */\n      tag_265\n        /* \"#utility.yul\":14700:14705   */\n      dup2\n        /* \"#utility.yul\":14660:14706   */\n      tag_111\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":14543:14712   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14718:14840   */\n    tag_113:\n        /* \"#utility.yul\":14791:14815   */\n      tag_267\n        /* \"#utility.yul\":14809:14814   */\n      dup2\n        /* \"#utility.yul\":14791:14815   */\n      tag_81\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":14784:14789   */\n      dup2\n        /* \"#utility.yul\":14781:14816   */\n      eq\n        /* \"#utility.yul\":14771:14834   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":14830:14831   */\n      0x00\n        /* \"#utility.yul\":14827:14828   */\n      dup1\n        /* \"#utility.yul\":14820:14832   */\n      revert\n        /* \"#utility.yul\":14771:14834   */\n    tag_268:\n        /* \"#utility.yul\":14718:14840   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14846:14989   */\n    tag_114:\n        /* \"#utility.yul\":14903:14908   */\n      0x00\n        /* \"#utility.yul\":14934:14940   */\n      dup2\n        /* \"#utility.yul\":14928:14941   */\n      mload\n        /* \"#utility.yul\":14919:14941   */\n      swap1\n      pop\n        /* \"#utility.yul\":14950:14983   */\n      tag_270\n        /* \"#utility.yul\":14977:14982   */\n      dup2\n        /* \"#utility.yul\":14950:14983   */\n      tag_113\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":14846:14989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15047:17539   */\n    tag_115:\n        /* \"#utility.yul\":15133:15138   */\n      0x00\n        /* \"#utility.yul\":15177:15183   */\n      0x0200\n        /* \"#utility.yul\":15165:15174   */\n      dup3\n        /* \"#utility.yul\":15160:15163   */\n      dup5\n        /* \"#utility.yul\":15156:15175   */\n      sub\n        /* \"#utility.yul\":15152:15184   */\n      slt\n        /* \"#utility.yul\":15149:15268   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":15187:15266   */\n      tag_273\n      tag_100\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":15149:15268   */\n    tag_272:\n        /* \"#utility.yul\":15286:15309   */\n      tag_274\n        /* \"#utility.yul\":15302:15308   */\n      0x0180\n        /* \"#utility.yul\":15286:15309   */\n      tag_103\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":15277:15309   */\n      swap1\n      pop\n        /* \"#utility.yul\":15389:15390   */\n      0x00\n        /* \"#utility.yul\":15429:15531   */\n      tag_275\n        /* \"#utility.yul\":15527:15530   */\n      dup5\n        /* \"#utility.yul\":15518:15524   */\n      dup3\n        /* \"#utility.yul\":15507:15516   */\n      dup6\n        /* \"#utility.yul\":15503:15525   */\n      add\n        /* \"#utility.yul\":15429:15531   */\n      tag_107\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":15422:15426   */\n      0x00\n        /* \"#utility.yul\":15415:15420   */\n      dup4\n        /* \"#utility.yul\":15411:15427   */\n      add\n        /* \"#utility.yul\":15404:15532   */\n      mstore\n        /* \"#utility.yul\":15319:15543   */\n      pop\n        /* \"#utility.yul\":15606:15609   */\n      0xa0\n        /* \"#utility.yul\":15648:15708   */\n      tag_276\n        /* \"#utility.yul\":15704:15707   */\n      dup5\n        /* \"#utility.yul\":15695:15701   */\n      dup3\n        /* \"#utility.yul\":15684:15693   */\n      dup6\n        /* \"#utility.yul\":15680:15702   */\n      add\n        /* \"#utility.yul\":15648:15708   */\n      tag_106\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":15641:15645   */\n      0x20\n        /* \"#utility.yul\":15634:15639   */\n      dup4\n        /* \"#utility.yul\":15630:15646   */\n      add\n        /* \"#utility.yul\":15623:15709   */\n      mstore\n        /* \"#utility.yul\":15553:15720   */\n      pop\n        /* \"#utility.yul\":15788:15791   */\n      0xc0\n        /* \"#utility.yul\":15830:15889   */\n      tag_277\n        /* \"#utility.yul\":15885:15888   */\n      dup5\n        /* \"#utility.yul\":15876:15882   */\n      dup3\n        /* \"#utility.yul\":15865:15874   */\n      dup6\n        /* \"#utility.yul\":15861:15883   */\n      add\n        /* \"#utility.yul\":15830:15889   */\n      tag_109\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":15823:15827   */\n      0x40\n        /* \"#utility.yul\":15816:15821   */\n      dup4\n        /* \"#utility.yul\":15812:15828   */\n      add\n        /* \"#utility.yul\":15805:15890   */\n      mstore\n        /* \"#utility.yul\":15730:15901   */\n      pop\n        /* \"#utility.yul\":15963:15966   */\n      0xe0\n        /* \"#utility.yul\":16005:16062   */\n      tag_278\n        /* \"#utility.yul\":16058:16061   */\n      dup5\n        /* \"#utility.yul\":16049:16055   */\n      dup3\n        /* \"#utility.yul\":16038:16047   */\n      dup6\n        /* \"#utility.yul\":16034:16056   */\n      add\n        /* \"#utility.yul\":16005:16062   */\n      tag_99\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":15998:16002   */\n      0x60\n        /* \"#utility.yul\":15991:15996   */\n      dup4\n        /* \"#utility.yul\":15987:16003   */\n      add\n        /* \"#utility.yul\":15980:16063   */\n      mstore\n        /* \"#utility.yul\":15911:16074   */\n      pop\n        /* \"#utility.yul\":16137:16140   */\n      0x0100\n        /* \"#utility.yul\":16179:16252   */\n      tag_279\n        /* \"#utility.yul\":16248:16251   */\n      dup5\n        /* \"#utility.yul\":16239:16245   */\n      dup3\n        /* \"#utility.yul\":16228:16237   */\n      dup6\n        /* \"#utility.yul\":16224:16246   */\n      add\n        /* \"#utility.yul\":16179:16252   */\n      tag_112\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":16172:16176   */\n      0x80\n        /* \"#utility.yul\":16165:16170   */\n      dup4\n        /* \"#utility.yul\":16161:16177   */\n      add\n        /* \"#utility.yul\":16154:16253   */\n      mstore\n        /* \"#utility.yul\":16084:16264   */\n      pop\n        /* \"#utility.yul\":16333:16336   */\n      0x0120\n        /* \"#utility.yul\":16375:16434   */\n      tag_280\n        /* \"#utility.yul\":16430:16433   */\n      dup5\n        /* \"#utility.yul\":16421:16427   */\n      dup3\n        /* \"#utility.yul\":16410:16419   */\n      dup6\n        /* \"#utility.yul\":16406:16428   */\n      add\n        /* \"#utility.yul\":16375:16434   */\n      tag_109\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":16368:16372   */\n      0xa0\n        /* \"#utility.yul\":16361:16366   */\n      dup4\n        /* \"#utility.yul\":16357:16373   */\n      add\n        /* \"#utility.yul\":16350:16435   */\n      mstore\n        /* \"#utility.yul\":16274:16446   */\n      pop\n        /* \"#utility.yul\":16521:16524   */\n      0x0140\n        /* \"#utility.yul\":16563:16620   */\n      tag_281\n        /* \"#utility.yul\":16616:16619   */\n      dup5\n        /* \"#utility.yul\":16607:16613   */\n      dup3\n        /* \"#utility.yul\":16596:16605   */\n      dup6\n        /* \"#utility.yul\":16592:16614   */\n      add\n        /* \"#utility.yul\":16563:16620   */\n      tag_99\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":16556:16560   */\n      0xc0\n        /* \"#utility.yul\":16549:16554   */\n      dup4\n        /* \"#utility.yul\":16545:16561   */\n      add\n        /* \"#utility.yul\":16538:16621   */\n      mstore\n        /* \"#utility.yul\":16456:16632   */\n      pop\n        /* \"#utility.yul\":16695:16698   */\n      0x0160\n        /* \"#utility.yul\":16737:16797   */\n      tag_282\n        /* \"#utility.yul\":16793:16796   */\n      dup5\n        /* \"#utility.yul\":16784:16790   */\n      dup3\n        /* \"#utility.yul\":16773:16782   */\n      dup6\n        /* \"#utility.yul\":16769:16791   */\n      add\n        /* \"#utility.yul\":16737:16797   */\n      tag_97\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":16730:16734   */\n      0xe0\n        /* \"#utility.yul\":16723:16728   */\n      dup4\n        /* \"#utility.yul\":16719:16735   */\n      add\n        /* \"#utility.yul\":16712:16798   */\n      mstore\n        /* \"#utility.yul\":16642:16809   */\n      pop\n        /* \"#utility.yul\":16874:16877   */\n      0x0180\n        /* \"#utility.yul\":16918:16978   */\n      tag_283\n        /* \"#utility.yul\":16974:16977   */\n      dup5\n        /* \"#utility.yul\":16965:16971   */\n      dup3\n        /* \"#utility.yul\":16954:16963   */\n      dup6\n        /* \"#utility.yul\":16950:16972   */\n      add\n        /* \"#utility.yul\":16918:16978   */\n      tag_97\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":16909:16915   */\n      0x0100\n        /* \"#utility.yul\":16902:16907   */\n      dup4\n        /* \"#utility.yul\":16898:16916   */\n      add\n        /* \"#utility.yul\":16891:16979   */\n      mstore\n        /* \"#utility.yul\":16819:16990   */\n      pop\n        /* \"#utility.yul\":17049:17052   */\n      0x01a0\n        /* \"#utility.yul\":17093:17153   */\n      tag_284\n        /* \"#utility.yul\":17149:17152   */\n      dup5\n        /* \"#utility.yul\":17140:17146   */\n      dup3\n        /* \"#utility.yul\":17129:17138   */\n      dup6\n        /* \"#utility.yul\":17125:17147   */\n      add\n        /* \"#utility.yul\":17093:17153   */\n      tag_114\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":17084:17090   */\n      0x0120\n        /* \"#utility.yul\":17077:17082   */\n      dup4\n        /* \"#utility.yul\":17073:17091   */\n      add\n        /* \"#utility.yul\":17066:17154   */\n      mstore\n        /* \"#utility.yul\":17000:17165   */\n      pop\n        /* \"#utility.yul\":17237:17240   */\n      0x01c0\n        /* \"#utility.yul\":17281:17341   */\n      tag_285\n        /* \"#utility.yul\":17337:17340   */\n      dup5\n        /* \"#utility.yul\":17328:17334   */\n      dup3\n        /* \"#utility.yul\":17317:17326   */\n      dup6\n        /* \"#utility.yul\":17313:17335   */\n      add\n        /* \"#utility.yul\":17281:17341   */\n      tag_106\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":17272:17278   */\n      0x0140\n        /* \"#utility.yul\":17265:17270   */\n      dup4\n        /* \"#utility.yul\":17261:17279   */\n      add\n        /* \"#utility.yul\":17254:17342   */\n      mstore\n        /* \"#utility.yul\":17175:17353   */\n      pop\n        /* \"#utility.yul\":17416:17419   */\n      0x01e0\n        /* \"#utility.yul\":17460:17520   */\n      tag_286\n        /* \"#utility.yul\":17516:17519   */\n      dup5\n        /* \"#utility.yul\":17507:17513   */\n      dup3\n        /* \"#utility.yul\":17496:17505   */\n      dup6\n        /* \"#utility.yul\":17492:17514   */\n      add\n        /* \"#utility.yul\":17460:17520   */\n      tag_106\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":17451:17457   */\n      0x0160\n        /* \"#utility.yul\":17444:17449   */\n      dup4\n        /* \"#utility.yul\":17440:17458   */\n      add\n        /* \"#utility.yul\":17433:17521   */\n      mstore\n        /* \"#utility.yul\":17363:17532   */\n      pop\n        /* \"#utility.yul\":15047:17539   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17545:17949   */\n    tag_50:\n        /* \"#utility.yul\":17641:17647   */\n      0x00\n        /* \"#utility.yul\":17690:17693   */\n      0x0200\n        /* \"#utility.yul\":17678:17687   */\n      dup3\n        /* \"#utility.yul\":17669:17676   */\n      dup5\n        /* \"#utility.yul\":17665:17688   */\n      sub\n        /* \"#utility.yul\":17661:17694   */\n      slt\n        /* \"#utility.yul\":17658:17778   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":17697:17776   */\n      tag_289\n      tag_94\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":17658:17778   */\n    tag_288:\n        /* \"#utility.yul\":17817:17818   */\n      0x00\n        /* \"#utility.yul\":17842:17932   */\n      tag_290\n        /* \"#utility.yul\":17924:17931   */\n      dup5\n        /* \"#utility.yul\":17915:17921   */\n      dup3\n        /* \"#utility.yul\":17904:17913   */\n      dup6\n        /* \"#utility.yul\":17900:17922   */\n      add\n        /* \"#utility.yul\":17842:17932   */\n      tag_115\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":17832:17932   */\n      swap2\n      pop\n        /* \"#utility.yul\":17788:17942   */\n      pop\n        /* \"#utility.yul\":17545:17949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206fe1bdcbe2dc36b4596b82d97b748c7ca1f47235dbba771a7161ce78439ea67364736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"array_dataslot_t_bytes_storage": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_bytes_storage": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 543,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5222:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "76:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "92:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:3",
														"type": ""
													}
												],
												"src": "7:98:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "139:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "156:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "159:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "149:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "149:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "149:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "253:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "246:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "246:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "277:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "270:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "270:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "111:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "325:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "335:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "442:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "432:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "432:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "432:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "463:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "466:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "297:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "534:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "544:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "558:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "564:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "554:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "575:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "605:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "601:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "579:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "652:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "666:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "680:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "688:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "676:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "676:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "666:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "632:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "625:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:26:3"
															},
															"nodeType": "YulIf",
															"src": "622:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "755:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "769:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "719:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "742:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "750:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "739:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "739:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "716:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:38:3"
															},
															"nodeType": "YulIf",
															"src": "713:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "518:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "527:6:3",
														"type": ""
													}
												],
												"src": "483:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "862:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "872:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "880:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "872:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "900:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "903:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "893:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "893:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "893:14:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "916:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "924:9:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:18:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "916:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "849:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "857:4:3",
														"type": ""
													}
												],
												"src": "809:140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "999:49:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1009:33:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1027:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1034:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1039:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1019:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1019:23:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1009:6:3"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "982:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "992:6:3",
														"type": ""
													}
												],
												"src": "955:93:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1107:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1117:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1142:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1148:5:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1138:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1117:8:3"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1082:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1088:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1098:8:3",
														"type": ""
													}
												],
												"src": "1054:107:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:317:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1253:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1274:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1286:1:3",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1270:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1270:18:3"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1257:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1297:109:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1328:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1339:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1309:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:97:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1301:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1415:51:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:3"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1457:8:3"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1427:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1427:39:3"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1415:8:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1475:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1488:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1499:4:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1495:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1495:9:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:21:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1475:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1514:40:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1527:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1538:8:3"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1548:4:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1534:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:19:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1524:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:30:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1514:6:3"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1204:5:3",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1211:10:3",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1223:8:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1236:6:3",
														"type": ""
													}
												],
												"src": "1167:393:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1611:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1621:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1632:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1621:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1593:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1603:7:3",
														"type": ""
													}
												],
												"src": "1566:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1681:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1691:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1698:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1691:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1667:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1677:3:3",
														"type": ""
													}
												],
												"src": "1649:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1775:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1785:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1816:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1798:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1785:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1755:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1765:9:3",
														"type": ""
													}
												],
												"src": "1715:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1910:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1920:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1927:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1920:3:3"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1896:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1906:3:3",
														"type": ""
													}
												],
												"src": "1863:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2020:193:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2030:63:3",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2085:7:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2054:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:39:3"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2034:16:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2109:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2149:4:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2143:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2143:11:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2156:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2188:16:3"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2164:23:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:41:3"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2115:27:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2115:91:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2102:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:105:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2102:105:3"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1997:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2003:6:3",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2011:7:3",
														"type": ""
													}
												],
												"src": "1944:269:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2268:24:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2278:8:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2285:1:3",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:3"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2264:3:3",
														"type": ""
													}
												],
												"src": "2219:73:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:136:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2361:46:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2375:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2375:32:3"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2365:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2460:4:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2466:6:3"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2474:6:3"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2416:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2416:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2416:65:3"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2337:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2343:6:3",
														"type": ""
													}
												],
												"src": "2298:189:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2543:136:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2610:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2654:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2661:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2624:29:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2624:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2563:5:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2570:3:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2560:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2560:14:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2575:26:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2577:22:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2590:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2597:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2586:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2586:13:3"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2557:2:3",
																"statements": []
															},
															"src": "2553:120:3"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2531:5:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2538:3:3",
														"type": ""
													}
												],
												"src": "2493:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:463:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2789:430:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2803:53:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2850:5:3"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_bytes_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2819:30:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2819:37:3"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2807:8:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2869:63:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2892:8:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2920:10:3"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2902:17:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2902:29:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2888:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2888:44:3"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2873:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3089:27:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3091:23:3",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3106:8:3"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3091:11:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3073:10:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3085:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3070:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3070:18:3"
																		},
																		"nodeType": "YulIf",
																		"src": "3067:49:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3158:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3175:8:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3203:3:3"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3185:17:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3185:22:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3171:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3171:37:3"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3129:28:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3129:80:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3129:80:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2780:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2785:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2777:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:11:3"
															},
															"nodeType": "YulIf",
															"src": "2774:445:3"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2739:5:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2746:3:3",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2751:10:3",
														"type": ""
													}
												],
												"src": "2685:541:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3295:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3305:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3330:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3336:5:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3326:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3326:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3305:8:3"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3270:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3276:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3286:8:3",
														"type": ""
													}
												],
												"src": "3232:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3406:118:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3416:68:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3465:1:3",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3468:5:3"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3461:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3461:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3480:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3476:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3476:6:3"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3432:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3432:51:3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3428:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3428:56:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3420:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3493:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3507:4:3"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3513:4:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3503:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:15:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3493:6:3"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3383:4:3",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3389:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3399:6:3",
														"type": ""
													}
												],
												"src": "3355:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3610:214:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3743:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3770:4:3"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3776:3:3"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3751:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3751:29:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3743:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3789:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3800:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3810:1:3",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3813:3:3"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3806:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3806:11:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3797:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:21:3"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3789:4:3"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3591:4:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3597:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3605:4:3",
														"type": ""
													}
												],
												"src": "3529:295:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3919:1300:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3930:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3976:3:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3944:31:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3944:36:3"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3934:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4065:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4067:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4067:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4067:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4037:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4034:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4034:30:3"
															},
															"nodeType": "YulIf",
															"src": "4031:56:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4097:52:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4143:4:3"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4137:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4137:11:3"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4111:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:38:3"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4101:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4241:4:3"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4247:6:3"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:3"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_bytes_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4196:44:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:66:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:66:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4272:18:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4289:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4276:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4300:17:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4313:4:3",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4300:9:3"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4364:610:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4378:37:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4397:6:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4409:4:3",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4405:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4405:9:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4393:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4393:22:3"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4382:7:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4429:50:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4474:4:3"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_bytes_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4443:30:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4443:36:3"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4433:6:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4492:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4501:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4496:1:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4560:163:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4585:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4603:3:3"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4608:9:3"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4599:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4599:19:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4593:5:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4593:26:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4578:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4578:42:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4578:42:3"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4637:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4651:6:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4659:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4647:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4647:14:3"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4637:6:3"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4678:31:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4695:9:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4706:2:3",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4691:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4691:18:3"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4678:9:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4526:1:3"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4529:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4523:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4523:14:3"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4538:21:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4540:17:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4549:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4552:4:3",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4545:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4545:12:3"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4540:1:3"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4519:3:3",
																					"statements": []
																				},
																				"src": "4515:208:3"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4759:156:3",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4777:43:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4804:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4809:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4800:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4800:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4794:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4794:26:3"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4781:9:3",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4844:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4871:9:3"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4886:6:3"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4894:4:3",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4882:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4882:17:3"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4852:18:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4852:48:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4837:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4837:64:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4837:64:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4742:7:3"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4751:6:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4739:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4739:19:3"
																				},
																				"nodeType": "YulIf",
																				"src": "4736:179:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4935:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4949:6:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4957:1:3",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4945:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4945:14:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4961:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4941:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4941:22:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4928:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4928:36:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4928:36:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4357:617:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4362:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4991:222:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5005:14:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5018:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5009:5:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5042:67:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5060:35:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5079:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5084:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5075:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5075:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5069:26:3"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5060:5:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5035:6:3"
																				},
																				"nodeType": "YulIf",
																				"src": "5032:77:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5129:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5188:5:3"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5195:6:3"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5135:52:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5135:67:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5122:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5122:81:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5122:81:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4983:230:3",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4337:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4345:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4334:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4334:14:3"
															},
															"nodeType": "YulSwitch",
															"src": "4327:886:3"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3908:4:3",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3914:3:3",
														"type": ""
													}
												],
												"src": "3829:1390:3"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052739923d42ef695b5dd9911d05ac944d4caca3c4eab6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280601a81526020017f48656c6c6f20776f726c642066726f6d2072616d657368646f6e000000000000815250600190816200009e91906200032d565b50348015620000ac57600080fd5b5062000414565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200013557607f821691505b6020821081036200014b576200014a620000ed565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001b57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000176565b620001c1868362000176565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200020e620002086200020284620001d9565b620001e3565b620001d9565b9050919050565b6000819050919050565b6200022a83620001ed565b62000242620002398262000215565b84845462000183565b825550505050565b600090565b620002596200024a565b620002668184846200021f565b505050565b5b818110156200028e57620002826000826200024f565b6001810190506200026c565b5050565b601f821115620002dd57620002a78162000151565b620002b28462000166565b81016020851015620002c2578190505b620002da620002d18562000166565b8301826200026b565b50505b505050565b600082821c905092915050565b60006200030260001984600802620002e2565b1980831691505092915050565b60006200031d8383620002ef565b9150826002028217905092915050565b6200033882620000b3565b67ffffffffffffffff811115620003545762000353620000be565b5b6200036082546200011c565b6200036d82828562000292565b600060209050601f831160018114620003a5576000841562000390578287015190505b6200039c85826200030f565b8655506200040c565b601f198416620003b58662000151565b60005b82811015620003df57848901518255600182019150602085019450602081019050620003b8565b86831015620003ff5784890151620003fb601f891682620002ef565b8355505b6001600288020188555050505b505050505050565b610e5980620004246000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630d80da74146100675780633421390b146100855780637facaf3f1461008f5780639a3ddabc146100ad578063bc1dbc52146100cb578063c1a8ec2c146100e9575b600080fd5b61006f610107565b60405161007c919061058d565b60405180910390f35b61008d61010d565b005b6100976101b4565b6040516100a491906105c3565b60405180910390f35b6100b5610258565b6040516100c2919061083a565b60405180910390f35b6100d3610302565b6040516100e091906105c3565b60405180910390f35b6100f16103a8565b6040516100fe91906108e6565b60405180910390f35b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166336b13af46001306040518363ffffffff1660e01b8152600401610169929190610a10565b6020604051808303816000875af1158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac9190610a7b565b600281905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e39dfd7f6002546040518263ffffffff1660e01b8152600401610212919061058d565b602060405180830381865afa15801561022f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102539190610ad4565b905090565b610260610436565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663883028846002546040518263ffffffff1660e01b81526004016102bb919061058d565b61020060405180830381865afa1580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd9190610df5565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ea2f2ab6002546040518263ffffffff1660e01b8152600401610360919061058d565b6020604051808303816000875af115801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a39190610ad4565b905090565b600180546103b590610937565b80601f01602080910402602001604051908101604052809291908181526020018280546103e190610937565b801561042e5780601f106104035761010080835404028352916020019161042e565b820191906000526020600020905b81548152906001019060200180831161041157829003601f168201915b505050505081565b60405180610180016040528061044a610513565b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600015158152602001600080191681526020016000801916815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060a00160405280600015158152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000819050919050565b61058781610574565b82525050565b60006020820190506105a2600083018461057e565b92915050565b60008115159050919050565b6105bd816105a8565b82525050565b60006020820190506105d860008301846105b4565b92915050565b6105e7816105a8565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610618826105ed565b9050919050565b6106288161060d565b82525050565b60a08201600082015161064460008501826105de565b50602082015161065760208501826105de565b50604082015161066a60408501826105de565b50606082015161067d606085018261061f565b506080820151610690608085018261061f565b50505050565b600067ffffffffffffffff82169050919050565b6106b381610696565b82525050565b6000819050919050565b60006106de6106d96106d4846105ed565b6106b9565b6105ed565b9050919050565b60006106f0826106c3565b9050919050565b6000610702826106e5565b9050919050565b610712816106f7565b82525050565b61072181610574565b82525050565b6000819050919050565b61073a81610727565b82525050565b61020082016000820151610757600085018261062e565b50602082015161076a60a085018261061f565b50604082015161077d60c08501826106aa565b50606082015161079060e08501826105de565b5060808201516107a4610100850182610709565b5060a08201516107b86101208501826106aa565b5060c08201516107cc6101408501826105de565b5060e08201516107e0610160850182610718565b506101008201516107f5610180850182610718565b5061012082015161080a6101a0850182610731565b5061014082015161081f6101c085018261061f565b506101608201516108346101e085018261061f565b50505050565b6000610200820190506108506000830184610740565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610890578082015181840152602081019050610875565b60008484015250505050565b6000601f19601f8301169050919050565b60006108b882610856565b6108c28185610861565b93506108d2818560208601610872565b6108db8161089c565b840191505092915050565b6000602082019050818103600083015261090081846108ad565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061094f57607f821691505b60208210810361096257610961610908565b5b50919050565b60008190508160005260206000209050919050565b6000815461098a81610937565b6109948186610861565b945060018216600081146109af57600181146109c5576109f8565b60ff1983168652811515602002860193506109f8565b6109ce85610968565b60005b838110156109f0578154818901526001820191506020810190506109d1565b808801955050505b50505092915050565b610a0a8161060d565b82525050565b60006040820190508181036000830152610a2a818561097d565b9050610a396020830184610a01565b9392505050565b6000604051905090565b600080fd5b610a5881610574565b8114610a6357600080fd5b50565b600081519050610a7581610a4f565b92915050565b600060208284031215610a9157610a90610a4a565b5b6000610a9f84828501610a66565b91505092915050565b610ab1816105a8565b8114610abc57600080fd5b50565b600081519050610ace81610aa8565b92915050565b600060208284031215610aea57610ae9610a4a565b5b6000610af884828501610abf565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b3e8261089c565b810181811067ffffffffffffffff82111715610b5d57610b5c610b06565b5b80604052505050565b6000610b70610a40565b9050610b7c8282610b35565b919050565b610b8a8161060d565b8114610b9557600080fd5b50565b600081519050610ba781610b81565b92915050565b600060a08284031215610bc357610bc2610b01565b5b610bcd60a0610b66565b90506000610bdd84828501610abf565b6000830152506020610bf184828501610abf565b6020830152506040610c0584828501610abf565b6040830152506060610c1984828501610b98565b6060830152506080610c2d84828501610b98565b60808301525092915050565b610c4281610696565b8114610c4d57600080fd5b50565b600081519050610c5f81610c39565b92915050565b6000610c708261060d565b9050919050565b610c8081610c65565b8114610c8b57600080fd5b50565b600081519050610c9d81610c77565b92915050565b610cac81610727565b8114610cb757600080fd5b50565b600081519050610cc981610ca3565b92915050565b60006102008284031215610ce657610ce5610b01565b5b610cf1610180610b66565b90506000610d0184828501610bad565b60008301525060a0610d1584828501610b98565b60208301525060c0610d2984828501610c50565b60408301525060e0610d3d84828501610abf565b606083015250610100610d5284828501610c8e565b608083015250610120610d6784828501610c50565b60a083015250610140610d7c84828501610abf565b60c083015250610160610d9184828501610a66565b60e083015250610180610da684828501610a66565b610100830152506101a0610dbc84828501610cba565b610120830152506101c0610dd284828501610b98565b610140830152506101e0610de884828501610b98565b6101608301525092915050565b60006102008284031215610e0c57610e0b610a4a565b5b6000610e1a84828501610ccf565b9150509291505056fea26469706673582212206fe1bdcbe2dc36b4596b82d97b748c7ca1f47235dbba771a7161ce78439ea67364736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x9923D42EF695B5DD9911D05AC944D4CACA3C4EAB PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48656C6C6F20776F726C642066726F6D2072616D657368646F6E000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP2 PUSH3 0x9E SWAP2 SWAP1 PUSH3 0x32D JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x414 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x135 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x14B JUMPI PUSH3 0x14A PUSH3 0xED JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1B5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x176 JUMP JUMPDEST PUSH3 0x1C1 DUP7 DUP4 PUSH3 0x176 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20E PUSH3 0x208 PUSH3 0x202 DUP5 PUSH3 0x1D9 JUMP JUMPDEST PUSH3 0x1E3 JUMP JUMPDEST PUSH3 0x1D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x22A DUP4 PUSH3 0x1ED JUMP JUMPDEST PUSH3 0x242 PUSH3 0x239 DUP3 PUSH3 0x215 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x183 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x259 PUSH3 0x24A JUMP JUMPDEST PUSH3 0x266 DUP2 DUP5 DUP5 PUSH3 0x21F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x28E JUMPI PUSH3 0x282 PUSH1 0x0 DUP3 PUSH3 0x24F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x26C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2DD JUMPI PUSH3 0x2A7 DUP2 PUSH3 0x151 JUMP JUMPDEST PUSH3 0x2B2 DUP5 PUSH3 0x166 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2C2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2DA PUSH3 0x2D1 DUP6 PUSH3 0x166 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x26B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x302 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2E2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31D DUP4 DUP4 PUSH3 0x2EF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x338 DUP3 PUSH3 0xB3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x354 JUMPI PUSH3 0x353 PUSH3 0xBE JUMP JUMPDEST JUMPDEST PUSH3 0x360 DUP3 SLOAD PUSH3 0x11C JUMP JUMPDEST PUSH3 0x36D DUP3 DUP3 DUP6 PUSH3 0x292 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3A5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x390 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x39C DUP6 DUP3 PUSH3 0x30F JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x40C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3B5 DUP7 PUSH3 0x151 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3DF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3B8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x3FF JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x3FB PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x2EF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE59 DUP1 PUSH3 0x424 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD80DA74 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x3421390B EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x7FACAF3F EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x9A3DDABC EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xBC1DBC52 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xC1A8EC2C EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x107 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x36B13AF4 PUSH1 0x1 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169 SWAP3 SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x188 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE39DFD7F PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xAD4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88302884 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x200 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8EA2F2AB PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0xAD4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x937 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E1 SWAP1 PUSH2 0x937 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x403 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x411 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x44A PUSH2 0x513 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x587 DUP2 PUSH2 0x574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BD DUP2 PUSH2 0x5A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E7 DUP2 PUSH2 0x5A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH2 0x5ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x628 DUP2 PUSH2 0x60D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x644 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x5DE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x657 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x5DE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x66A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x5DE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x67D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x61F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x690 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x61F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B3 DUP2 PUSH2 0x696 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE PUSH2 0x6D9 PUSH2 0x6D4 DUP5 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F0 DUP3 PUSH2 0x6C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x702 DUP3 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x712 DUP2 PUSH2 0x6F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x721 DUP2 PUSH2 0x574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73A DUP2 PUSH2 0x727 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x200 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x757 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x62E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x76A PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x61F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x77D PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x6AA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x790 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x5DE JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x7A4 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x709 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x7B8 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x6AA JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x7CC PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x5DE JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x7E0 PUSH2 0x160 DUP6 ADD DUP3 PUSH2 0x718 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x7F5 PUSH2 0x180 DUP6 ADD DUP3 PUSH2 0x718 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x80A PUSH2 0x1A0 DUP6 ADD DUP3 PUSH2 0x731 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x81F PUSH2 0x1C0 DUP6 ADD DUP3 PUSH2 0x61F JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x834 PUSH2 0x1E0 DUP6 ADD DUP3 PUSH2 0x61F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 ADD SWAP1 POP PUSH2 0x850 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x740 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x890 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x875 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 DUP3 PUSH2 0x856 JUMP JUMPDEST PUSH2 0x8C2 DUP2 DUP6 PUSH2 0x861 JUMP JUMPDEST SWAP4 POP PUSH2 0x8D2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x872 JUMP JUMPDEST PUSH2 0x8DB DUP2 PUSH2 0x89C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x900 DUP2 DUP5 PUSH2 0x8AD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x94F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x962 JUMPI PUSH2 0x961 PUSH2 0x908 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x98A DUP2 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x994 DUP2 DUP7 PUSH2 0x861 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x9AF JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x9C5 JUMPI PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x9CE DUP6 PUSH2 0x968 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9F0 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA0A DUP2 PUSH2 0x60D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA2A DUP2 DUP6 PUSH2 0x97D JUMP JUMPDEST SWAP1 POP PUSH2 0xA39 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA01 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA58 DUP2 PUSH2 0x574 JUMP JUMPDEST DUP2 EQ PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA75 DUP2 PUSH2 0xA4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9F DUP5 DUP3 DUP6 ADD PUSH2 0xA66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0x5A8 JUMP JUMPDEST DUP2 EQ PUSH2 0xABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xACE DUP2 PUSH2 0xAA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAEA JUMPI PUSH2 0xAE9 PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF8 DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB3E DUP3 PUSH2 0x89C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB5D JUMPI PUSH2 0xB5C PUSH2 0xB06 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 PUSH2 0xA40 JUMP JUMPDEST SWAP1 POP PUSH2 0xB7C DUP3 DUP3 PUSH2 0xB35 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8A DUP2 PUSH2 0x60D JUMP JUMPDEST DUP2 EQ PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBA7 DUP2 PUSH2 0xB81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC3 JUMPI PUSH2 0xBC2 PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH2 0xBCD PUSH1 0xA0 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBDD DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xBF1 DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xC05 DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xC19 DUP5 DUP3 DUP6 ADD PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xC2D DUP5 DUP3 DUP6 ADD PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC42 DUP2 PUSH2 0x696 JUMP JUMPDEST DUP2 EQ PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC5F DUP2 PUSH2 0xC39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC70 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC80 DUP2 PUSH2 0xC65 JUMP JUMPDEST DUP2 EQ PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC9D DUP2 PUSH2 0xC77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAC DUP2 PUSH2 0x727 JUMP JUMPDEST DUP2 EQ PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCC9 DUP2 PUSH2 0xCA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCE5 PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH2 0xCF1 PUSH2 0x180 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD01 DUP5 DUP3 DUP6 ADD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0xD29 DUP5 DUP3 DUP6 ADD PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0xD3D DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0xD52 DUP5 DUP3 DUP6 ADD PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0xD67 DUP5 DUP3 DUP6 ADD PUSH2 0xC50 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0xD7C DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0xD91 DUP5 DUP3 DUP6 ADD PUSH2 0xA66 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0xDA6 DUP5 DUP3 DUP6 ADD PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x1A0 PUSH2 0xDBC DUP5 DUP3 DUP6 ADD PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x1C0 PUSH2 0xDD2 DUP5 DUP3 DUP6 ADD PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x1E0 PUSH2 0xDE8 DUP5 DUP3 DUP6 ADD PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0C JUMPI PUSH2 0xE0B PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE1A DUP5 DUP3 DUP6 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xE1BDCBE2DC36B4596B82D97B748C7CA1 DELEGATECALL PUSH19 0x35DBBA771A7161CE78439EA67364736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "586:1848:1:-:0;;;774:42;703:114;;;;;;;;;;;;;;;;;;;;978:35;;;;;;;;;;;;;;;;;941:72;;;;;;;:::i;:::-;;586:1848;;;;;;;;;;;;7:98:3;58:6;92:5;86:12;76:22;;7:98;;;:::o;111:180::-;159:77;156:1;149:88;256:4;253:1;246:15;280:4;277:1;270:15;297:180;345:77;342:1;335:88;442:4;439:1;432:15;466:4;463:1;456:15;483:320;527:6;564:1;558:4;554:12;544:22;;611:1;605:4;601:12;632:18;622:81;;688:4;680:6;676:17;666:27;;622:81;750:2;742:6;739:14;719:18;716:38;713:84;;769:18;;:::i;:::-;713:84;534:269;483:320;;;:::o;809:140::-;857:4;880:3;872:11;;903:3;900:1;893:14;937:4;934:1;924:18;916:26;;809:140;;;:::o;955:93::-;992:6;1039:2;1034;1027:5;1023:14;1019:23;1009:33;;955:93;;;:::o;1054:107::-;1098:8;1148:5;1142:4;1138:16;1117:37;;1054:107;;;;:::o;1167:393::-;1236:6;1286:1;1274:10;1270:18;1309:97;1339:66;1328:9;1309:97;:::i;:::-;1427:39;1457:8;1446:9;1427:39;:::i;:::-;1415:51;;1499:4;1495:9;1488:5;1484:21;1475:30;;1548:4;1538:8;1534:19;1527:5;1524:30;1514:40;;1243:317;;1167:393;;;;;:::o;1566:77::-;1603:7;1632:5;1621:16;;1566:77;;;:::o;1649:60::-;1677:3;1698:5;1691:12;;1649:60;;;:::o;1715:142::-;1765:9;1798:53;1816:34;1825:24;1843:5;1825:24;:::i;:::-;1816:34;:::i;:::-;1798:53;:::i;:::-;1785:66;;1715:142;;;:::o;1863:75::-;1906:3;1927:5;1920:12;;1863:75;;;:::o;1944:269::-;2054:39;2085:7;2054:39;:::i;:::-;2115:91;2164:41;2188:16;2164:41;:::i;:::-;2156:6;2149:4;2143:11;2115:91;:::i;:::-;2109:4;2102:105;2020:193;1944:269;;;:::o;2219:73::-;2264:3;2219:73;:::o;2298:189::-;2375:32;;:::i;:::-;2416:65;2474:6;2466;2460:4;2416:65;:::i;:::-;2351:136;2298:189;;:::o;2493:186::-;2553:120;2570:3;2563:5;2560:14;2553:120;;;2624:39;2661:1;2654:5;2624:39;:::i;:::-;2597:1;2590:5;2586:13;2577:22;;2553:120;;;2493:186;;:::o;2685:541::-;2785:2;2780:3;2777:11;2774:445;;;2819:37;2850:5;2819:37;:::i;:::-;2902:29;2920:10;2902:29;:::i;:::-;2892:8;2888:44;3085:2;3073:10;3070:18;3067:49;;;3106:8;3091:23;;3067:49;3129:80;3185:22;3203:3;3185:22;:::i;:::-;3175:8;3171:37;3158:11;3129:80;:::i;:::-;2789:430;;2774:445;2685:541;;;:::o;3232:117::-;3286:8;3336:5;3330:4;3326:16;3305:37;;3232:117;;;;:::o;3355:169::-;3399:6;3432:51;3480:1;3476:6;3468:5;3465:1;3461:13;3432:51;:::i;:::-;3428:56;3513:4;3507;3503:15;3493:25;;3406:118;3355:169;;;;:::o;3529:295::-;3605:4;3751:29;3776:3;3770:4;3751:29;:::i;:::-;3743:37;;3813:3;3810:1;3806:11;3800:4;3797:21;3789:29;;3529:295;;;;:::o;3829:1390::-;3944:36;3976:3;3944:36;:::i;:::-;4045:18;4037:6;4034:30;4031:56;;;4067:18;;:::i;:::-;4031:56;4111:38;4143:4;4137:11;4111:38;:::i;:::-;4196:66;4255:6;4247;4241:4;4196:66;:::i;:::-;4289:1;4313:4;4300:17;;4345:2;4337:6;4334:14;4362:1;4357:617;;;;5018:1;5035:6;5032:77;;;5084:9;5079:3;5075:19;5069:26;5060:35;;5032:77;5135:67;5195:6;5188:5;5135:67;:::i;:::-;5129:4;5122:81;4991:222;4327:886;;4357:617;4409:4;4405:9;4397:6;4393:22;4443:36;4474:4;4443:36;:::i;:::-;4501:1;4515:208;4529:7;4526:1;4523:14;4515:208;;;4608:9;4603:3;4599:19;4593:26;4585:6;4578:42;4659:1;4651:6;4647:14;4637:24;;4706:2;4695:9;4691:18;4678:31;;4552:4;4549:1;4545:12;4540:17;;4515:208;;;4751:6;4742:7;4739:19;4736:179;;;4809:9;4804:3;4800:19;4794:26;4852:48;4894:4;4886:6;4882:17;4871:9;4852:48;:::i;:::-;4844:6;4837:64;4759:156;4736:179;4961:1;4957;4949:6;4945:14;4941:22;4935:4;4928:36;4364:610;;;4327:886;;3919:1300;;;3829:1390;;:::o;586:1848:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@assertTruth_109": {
									"entryPoint": 269,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@assertedClaim_92": {
									"entryPoint": 936,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@assertionId_94": {
									"entryPoint": 263,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAssertionResult_131": {
									"entryPoint": 436,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAssertion_143": {
									"entryPoint": 600,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@settleAndGetAssertionResult_120": {
									"entryPoint": 770,
									"id": 120,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 3214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_Assertion_$186_memory_ptr_fromMemory": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_EscalationManagerSettings_$159_memory_ptr_fromMemory": {
									"entryPoint": 2989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64_fromMemory": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_Assertion_$186_memory_ptr_fromMemory": {
									"entryPoint": 3573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 1502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32": {
									"entryPoint": 1816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 1801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Assertion_$186_memory_ptr_to_t_struct$_Assertion_$186_memory_ptr_fromStack": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_EscalationManagerSettings_$159_memory_ptr_to_t_struct$_EscalationManagerSettings_$159_memory_ptr": {
									"entryPoint": 1582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_storage_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 2576,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Assertion_$186_memory_ptr__to_t_struct$_Assertion_$186_memory_ptr__fromStack_reversed": {
									"entryPoint": 2106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_storage": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$77": {
									"entryPoint": 3173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2822,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 2817,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2634,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$77": {
									"entryPoint": 3191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17952:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "519:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "512:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "512:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "505:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "505:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "494:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "466:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "476:7:3",
														"type": ""
													}
												],
												"src": "442:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "614:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "619:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "619:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "607:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "585:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "592:3:3",
														"type": ""
													}
												],
												"src": "538:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "745:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "755:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "767:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "778:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "755:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "853:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "791:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "791:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "791:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "717:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "729:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "740:4:3",
														"type": ""
													}
												],
												"src": "653:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "918:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "935:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "955:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "940:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "928:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "906:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "913:3:3",
														"type": ""
													}
												],
												"src": "869:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1019:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1029:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1044:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1051:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1040:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1029:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1001:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1011:7:3",
														"type": ""
													}
												],
												"src": "974:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1151:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1161:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1190:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1172:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1161:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1133:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1143:7:3",
														"type": ""
													}
												],
												"src": "1106:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1263:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1280:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1303:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1285:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1285:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1273:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1273:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1273:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1251:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1258:3:3",
														"type": ""
													}
												],
												"src": "1208:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1594:966:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1604:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1620:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1625:4:3",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1616:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "1608:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1640:183:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1700:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1730:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1737:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1726:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1726:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1720:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1720:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1704:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1784:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1802:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1807:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1798:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1798:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1756:27:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1756:57:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1756:57:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1833:167:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1877:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1907:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1914:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1903:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1903:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1897:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1897:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1881:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1961:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1979:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1984:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1975:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1975:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1933:27:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1933:57:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1933:57:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2010:171:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2058:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2088:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2095:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2084:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2084:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2078:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2078:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2062:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2142:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2160:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2165:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2156:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2156:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2114:27:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2114:57:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2114:57:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2191:175:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2237:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2267:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2274:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2263:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2263:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2257:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2257:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2241:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2327:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2345:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2350:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2341:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2341:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2293:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2293:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2293:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2376:177:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2424:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2454:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2461:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2450:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2450:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2444:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2428:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2514:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2532:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2537:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2528:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2528:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2480:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2480:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2480:63:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_EscalationManagerSettings_$159_memory_ptr_to_t_struct$_EscalationManagerSettings_$159_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1581:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1588:3:3",
														"type": ""
													}
												],
												"src": "1454:1106:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2610:57:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2620:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2635:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2642:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2631:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:30:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2620:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2592:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2602:7:3",
														"type": ""
													}
												],
												"src": "2566:101:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2726:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2743:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2765:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "2748:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2748:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2736:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2736:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2736:36:3"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2714:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2721:3:3",
														"type": ""
													}
												],
												"src": "2673:105:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2816:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2826:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2833:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2826:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2802:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2812:3:3",
														"type": ""
													}
												],
												"src": "2784:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2910:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2920:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2978:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2960:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2960:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2951:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2951:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2933:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2933:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2920:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2890:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2900:9:3",
														"type": ""
													}
												],
												"src": "2850:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3058:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3068:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3112:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3081:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3068:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3038:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3048:9:3",
														"type": ""
													}
												],
												"src": "2998:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3203:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3213:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3257:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3226:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3226:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3213:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3183:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3193:9:3",
														"type": ""
													}
												],
												"src": "3130:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3343:79:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3360:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3365:43:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3365:50:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3353:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3353:63:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3353:63:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3331:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3338:3:3",
														"type": ""
													}
												],
												"src": "3275:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3483:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3500:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3523:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3505:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3505:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3493:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3493:37:3"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3471:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3478:3:3",
														"type": ""
													}
												],
												"src": "3428:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3587:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3597:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3608:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3597:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3569:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3579:7:3",
														"type": ""
													}
												],
												"src": "3542:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3680:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3697:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3720:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3702:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3702:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3690:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3690:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3690:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3668:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3675:3:3",
														"type": ""
													}
												],
												"src": "3625:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3957:2332:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3967:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:6:3",
																		"type": "",
																		"value": "0x0200"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3979:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:16:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "3971:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4005:269:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4061:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4091:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4098:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4087:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4087:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4081:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4081:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4065:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4235:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4253:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4258:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4249:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4249:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_EscalationManagerSettings_$159_memory_ptr_to_t_struct$_EscalationManagerSettings_$159_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4117:117:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4117:147:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4117:147:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4284:168:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4323:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4353:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4360:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4349:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4349:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4343:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4327:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4413:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4431:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4436:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4427:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4427:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4379:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4379:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4379:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4462:171:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4506:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4536:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4543:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4532:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4532:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4526:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4526:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4510:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4594:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4612:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4617:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4608:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4608:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint64_to_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "4562:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4562:61:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4562:61:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4643:161:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4681:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4711:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4718:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4701:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4701:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4685:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4765:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4783:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4788:4:3",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4779:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4779:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4737:27:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4737:57:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4737:57:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4814:183:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4853:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4883:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4890:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4879:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4879:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4873:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4873:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4857:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4956:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4974:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4979:6:3",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4970:16:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4909:46:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4909:78:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4909:78:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5007:174:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5052:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5082:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5089:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5078:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5078:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5072:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5056:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5140:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5158:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5163:6:3",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5154:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5154:16:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint64_to_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "5108:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5108:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5108:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5191:176:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5242:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5272:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5279:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5268:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5268:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5262:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5262:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5246:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5326:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5344:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5349:6:3",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5340:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5340:16:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5298:27:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5298:59:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5298:59:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5377:170:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5416:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5446:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5453:4:3",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5442:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5442:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5436:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5436:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5420:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5506:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5524:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5529:6:3",
																						"type": "",
																						"value": "0x0160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5520:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5520:16:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes32_to_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5472:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5472:65:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5472:65:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5557:174:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5598:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5628:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5635:6:3",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5624:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5624:18:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5618:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5618:25:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5602:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5690:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5708:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5713:6:3",
																						"type": "",
																						"value": "0x0180"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5704:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5704:16:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes32_to_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5656:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5656:65:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5656:65:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5741:168:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5776:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5806:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5813:6:3",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5802:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5802:18:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5796:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5796:25:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5780:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5868:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5886:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5891:6:3",
																						"type": "",
																						"value": "0x01a0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5882:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5882:16:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5834:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5834:65:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5834:65:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5919:181:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5967:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5997:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6004:6:3",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5993:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5993:18:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5987:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5987:25:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5971:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6059:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6077:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6082:6:3",
																						"type": "",
																						"value": "0x01c0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6073:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6073:16:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6025:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6025:65:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6025:65:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6110:172:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6149:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6179:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6186:6:3",
																						"type": "",
																						"value": "0x0160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6175:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6175:18:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6169:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6169:25:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6153:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6241:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6259:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6264:6:3",
																						"type": "",
																						"value": "0x01e0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6255:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6255:16:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6207:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6207:65:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6207:65:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Assertion_$186_memory_ptr_to_t_struct$_Assertion_$186_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3944:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3951:3:3",
														"type": ""
													}
												],
												"src": "3839:2450:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6445:177:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6455:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6467:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6478:3:3",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6463:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6463:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6455:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6588:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6601:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6612:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6597:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6597:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Assertion_$186_memory_ptr_to_t_struct$_Assertion_$186_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6492:95:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6492:123:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6492:123:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Assertion_$186_memory_ptr__to_t_struct$_Assertion_$186_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6417:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6429:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6440:4:3",
														"type": ""
													}
												],
												"src": "6295:327:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6686:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6697:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6713:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6707:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6707:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6697:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6669:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6679:6:3",
														"type": ""
													}
												],
												"src": "6628:98:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6827:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6844:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6849:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6837:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6837:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6837:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6865:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6884:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6889:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6880:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6880:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6865:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6799:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6804:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6815:11:3",
														"type": ""
													}
												],
												"src": "6732:168:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6968:184:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6978:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6987:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6982:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7047:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7072:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7077:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7068:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7068:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7091:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7096:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7087:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7087:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7081:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7081:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7061:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7061:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7061:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7008:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7011:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7005:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7005:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7019:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7021:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7030:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7033:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7026:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7026:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7021:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7001:3:3",
																"statements": []
															},
															"src": "6997:113:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7130:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7135:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7126:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7126:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7144:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7119:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7119:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7119:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6950:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6955:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6960:6:3",
														"type": ""
													}
												],
												"src": "6906:246:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7206:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7216:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7234:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7241:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7230:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7230:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7250:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7246:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7246:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7226:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7226:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7216:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7189:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7199:6:3",
														"type": ""
													}
												],
												"src": "7158:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7356:283:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7366:52:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7412:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7380:31:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7380:38:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7370:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7427:77:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7492:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7497:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7434:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7434:70:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7427:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7552:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7559:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7548:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7548:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7566:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7571:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7513:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7513:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7513:65:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7587:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7598:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7625:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7603:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7603:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7594:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7594:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7587:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7337:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7344:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7352:3:3",
														"type": ""
													}
												],
												"src": "7266:373:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7761:193:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7771:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7783:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7794:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7779:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7771:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7818:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7829:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7814:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7814:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7837:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7843:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7833:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7833:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7807:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7807:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7807:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7863:84:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7933:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7942:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7871:61:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7871:76:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7863:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7733:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7745:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7756:4:3",
														"type": ""
													}
												],
												"src": "7645:309:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7988:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8005:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8008:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7998:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7998:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7998:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8102:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8105:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8095:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8095:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8095:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8126:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8129:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8119:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8119:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8119:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "7960:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8197:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8207:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8221:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8227:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8217:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8207:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8238:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8268:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8274:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8264:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8264:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8242:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8315:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8329:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8343:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8351:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8339:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8339:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8329:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8295:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8288:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8288:26:3"
															},
															"nodeType": "YulIf",
															"src": "8285:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8418:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "8432:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8432:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8432:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8382:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8405:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8413:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8402:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8402:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8379:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8379:38:3"
															},
															"nodeType": "YulIf",
															"src": "8376:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8181:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8190:6:3",
														"type": ""
													}
												],
												"src": "8146:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8525:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8535:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "8543:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8535:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8563:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8566:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8556:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8556:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8556:14:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8579:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8597:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8600:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8587:9:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8587:18:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8579:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8512:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8520:4:3",
														"type": ""
													}
												],
												"src": "8472:140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8727:740:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8737:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8760:5:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "8754:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8754:12:3"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "8741:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8775:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "8815:9:3"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "8789:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8789:36:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8779:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8834:77:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8899:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8904:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8841:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8841:70:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8834:3:3"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8960:157:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9013:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "9022:9:3"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "9037:4:3",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "9033:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9033:9:3"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "9018:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9018:25:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "9006:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9006:38:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9006:38:3"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "9057:50:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9068:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "9077:4:3",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nodeType": "YulIdentifier",
																													"src": "9097:6:3"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "9090:6:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "9090:14:3"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "9083:6:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9083:22:3"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "9073:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9073:33:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9064:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9064:43:3"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "9057:3:3"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8953:164:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8958:1:3",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9133:328:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9178:52:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "9224:5:3"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_bytes_storage",
																						"nodeType": "YulIdentifier",
																						"src": "9193:30:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9193:37:3"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "9182:7:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9243:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9252:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "9247:1:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "9310:110:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "9339:3:3"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "9344:1:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "9335:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9335:11:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "9354:7:3"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "9348:5:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9348:14:3"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "9328:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9328:35:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "9328:35:3"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "9380:26:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "9395:7:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9404:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9391:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9391:15:3"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "9380:7:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9277:1:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9280:6:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "9274:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9274:13:3"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "9288:21:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "9290:17:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "9299:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9302:4:3",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9295:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9295:12:3"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9290:1:3"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "9270:3:3",
																					"statements": []
																				},
																				"src": "9266:154:3"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "9433:18:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9444:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9449:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9440:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9440:11:3"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "9433:3:3"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9126:335:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9131:1:3",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "8931:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8942:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8927:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8927:17:3"
															},
															"nodeType": "YulSwitch",
															"src": "8920:541:3"
														}
													]
												},
												"name": "abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8708:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8715:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8723:3:3",
														"type": ""
													}
												],
												"src": "8640:827:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9538:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9555:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9578:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9560:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9560:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9548:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9548:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9548:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9526:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9533:3:3",
														"type": ""
													}
												],
												"src": "9473:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9738:272:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9748:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9760:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9771:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9756:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9756:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9748:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9795:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9806:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9791:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9791:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9814:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9820:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9810:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9810:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9784:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9784:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9784:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9840:81:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9907:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9916:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9848:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9848:73:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9840:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9975:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9988:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9999:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9984:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9984:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9931:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9931:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9931:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_storage_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9702:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9714:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9722:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9733:4:3",
														"type": ""
													}
												],
												"src": "9597:413:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10056:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10066:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10082:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10076:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10076:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10066:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10049:6:3",
														"type": ""
													}
												],
												"src": "10016:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10186:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10203:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10206:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10196:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10196:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10196:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "10097:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10309:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10326:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10329:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10319:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10319:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10319:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "10220:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10386:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10443:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10452:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10455:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10445:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10445:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10445:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10409:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10434:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "10416:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10406:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10406:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10399:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10399:43:3"
															},
															"nodeType": "YulIf",
															"src": "10396:63:3"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10379:5:3",
														"type": ""
													}
												],
												"src": "10343:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10534:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10544:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10559:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10553:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10553:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10544:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10602:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "10575:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10575:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10575:33:3"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10512:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10520:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10528:5:3",
														"type": ""
													}
												],
												"src": "10471:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10697:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10743:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10745:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10745:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10745:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10718:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10727:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10714:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10714:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10739:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10710:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:32:3"
															},
															"nodeType": "YulIf",
															"src": "10707:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "10836:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10851:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10865:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10855:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10880:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10926:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10937:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10922:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10922:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10946:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10890:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10890:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10880:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10667:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10678:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10690:6:3",
														"type": ""
													}
												],
												"src": "10620:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11017:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11071:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11080:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11083:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11073:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11073:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11073:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11040:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11062:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "11047:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11047:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11037:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11037:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11030:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11030:40:3"
															},
															"nodeType": "YulIf",
															"src": "11027:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11010:5:3",
														"type": ""
													}
												],
												"src": "10977:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11159:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11169:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11184:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11178:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11178:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11169:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11224:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "11200:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11200:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11200:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11137:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11145:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11153:5:3",
														"type": ""
													}
												],
												"src": "11099:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11316:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11362:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11364:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11364:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11364:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11337:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11346:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11333:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11333:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11358:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11329:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11329:32:3"
															},
															"nodeType": "YulIf",
															"src": "11326:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "11455:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11470:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11484:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11474:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11499:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11542:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11553:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11538:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11538:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11562:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11509:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11509:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11499:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11286:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11297:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11309:6:3",
														"type": ""
													}
												],
												"src": "11242:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11682:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11699:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11702:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11692:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11692:12:3"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "11593:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11744:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11761:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11764:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11754:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11754:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11754:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11858:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11861:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11851:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11851:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11851:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11882:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11885:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11875:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11875:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11875:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "11716:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11945:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11955:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "11977:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12007:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11985:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11985:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11973:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11973:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "11959:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12124:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12126:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12126:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12126:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12067:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12079:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12064:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12064:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12103:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12115:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12100:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12100:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12061:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12061:62:3"
															},
															"nodeType": "YulIf",
															"src": "12058:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12162:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12166:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12155:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12155:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12155:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11931:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "11939:4:3",
														"type": ""
													}
												],
												"src": "11902:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12230:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12240:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "12250:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12250:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "12240:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12299:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "12307:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "12279:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12279:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12279:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12214:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12223:6:3",
														"type": ""
													}
												],
												"src": "12189:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12413:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12430:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12433:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12423:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12423:12:3"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "12324:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12490:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12547:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12556:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12559:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12549:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12549:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12549:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12513:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12538:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "12520:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12520:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12510:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12510:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12503:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12503:43:3"
															},
															"nodeType": "YulIf",
															"src": "12500:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12483:5:3",
														"type": ""
													}
												],
												"src": "12447:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12638:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12648:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12663:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12657:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12657:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12648:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12706:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12679:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12679:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12679:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12616:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12624:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12632:5:3",
														"type": ""
													}
												],
												"src": "12575:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12900:1095:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12944:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "12946:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12946:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12946:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12921:3:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12926:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12917:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12917:19:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12938:4:3",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12913:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:30:3"
															},
															"nodeType": "YulIf",
															"src": "12910:117:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13036:30:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13061:4:3",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13045:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13045:21:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13036:5:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13076:183:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13136:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13150:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13140:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13176:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13183:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13172:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13172:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "13223:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "13234:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13219:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13219:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "13243:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "13190:28:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13190:57:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "13165:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13165:83:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "13165:83:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13269:168:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13313:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13327:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13317:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13354:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13361:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13350:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13350:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "13401:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "13412:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13397:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13397:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "13421:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "13368:28:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13368:57:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "13343:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13343:83:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "13343:83:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13447:172:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13495:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13509:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13499:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13536:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13543:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13532:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13532:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "13583:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "13594:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13579:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13579:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "13603:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "13550:28:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13550:57:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "13525:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13525:83:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "13525:83:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13629:173:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13675:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13689:2:3",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13679:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13716:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13723:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13712:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13712:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "13766:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "13777:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13762:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13762:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "13786:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "13730:31:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13730:60:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "13705:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13705:86:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "13705:86:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13812:176:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13860:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13874:3:3",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13864:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13902:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13909:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13898:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13898:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "13952:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "13963:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13948:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13948:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "13972:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "13916:31:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13916:60:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "13891:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13891:86:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "13891:86:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_EscalationManagerSettings_$159_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12875:9:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12886:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12894:5:3",
														"type": ""
													}
												],
												"src": "12792:1203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14043:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14099:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14108:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14111:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14101:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14101:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14101:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14066:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14090:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nodeType": "YulIdentifier",
																					"src": "14073:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14073:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14063:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14063:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14056:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14056:42:3"
															},
															"nodeType": "YulIf",
															"src": "14053:62:3"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14036:5:3",
														"type": ""
													}
												],
												"src": "14001:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14189:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14199:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14214:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14208:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14208:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14199:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14256:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "14230:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14230:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14230:32:3"
														}
													]
												},
												"name": "abi_decode_t_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14167:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14175:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14183:5:3",
														"type": ""
													}
												],
												"src": "14127:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14332:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14342:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14371:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "14353:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14353:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14342:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14314:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14324:7:3",
														"type": ""
													}
												],
												"src": "14274:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14445:92:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14515:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14524:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14527:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14517:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14517:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14517:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14468:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14506:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$77",
																					"nodeType": "YulIdentifier",
																					"src": "14475:30:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14475:37:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14465:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14465:48:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14458:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14458:56:3"
															},
															"nodeType": "YulIf",
															"src": "14455:76:3"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14438:5:3",
														"type": ""
													}
												],
												"src": "14389:148:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14619:93:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14629:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14644:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14638:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14638:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14629:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14700:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$77",
																	"nodeType": "YulIdentifier",
																	"src": "14660:39:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14660:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14660:46:3"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14597:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14605:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14613:5:3",
														"type": ""
													}
												],
												"src": "14543:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14761:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14818:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14827:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14830:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14820:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14820:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14820:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14784:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14809:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14791:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14791:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14781:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14781:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14774:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14774:43:3"
															},
															"nodeType": "YulIf",
															"src": "14771:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14754:5:3",
														"type": ""
													}
												],
												"src": "14718:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14909:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14919:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14934:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14928:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14928:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14919:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14977:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14950:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14950:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14950:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14887:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14895:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14903:5:3",
														"type": ""
													}
												],
												"src": "14846:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15139:2400:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15185:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "15187:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15187:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15187:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "15160:3:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15165:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15156:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15156:19:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15177:6:3",
																		"type": "",
																		"value": "0x0200"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15152:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15152:32:3"
															},
															"nodeType": "YulIf",
															"src": "15149:119:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15277:32:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15302:6:3",
																		"type": "",
																		"value": "0x0180"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15286:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15286:23:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15277:5:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15319:224:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15375:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15389:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15379:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15415:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15422:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15411:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15411:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "15507:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "15518:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15503:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15503:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "15527:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_struct$_EscalationManagerSettings_$159_memory_ptr_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "15429:73:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15429:102:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "15404:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15404:128:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "15404:128:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15553:167:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15592:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15606:3:3",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15596:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15634:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15641:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15630:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15630:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "15684:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "15695:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15680:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15680:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "15704:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "15648:31:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15648:60:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "15623:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15623:86:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "15623:86:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15730:171:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15774:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15788:3:3",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15778:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15816:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15823:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15812:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15812:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "15865:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "15876:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15861:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15861:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "15885:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint64_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "15830:30:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15830:59:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "15805:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15805:85:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "15805:85:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15911:163:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15949:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15963:3:3",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15953:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15991:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15998:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15987:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15987:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "16038:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "16049:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16034:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16034:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "16058:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "16005:28:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16005:57:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "15980:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15980:83:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "15980:83:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16084:180:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16123:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16137:3:3",
																		"type": "",
																		"value": "256"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16127:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16165:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16172:4:3",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16161:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16161:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "16228:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "16239:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16224:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16224:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "16248:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "16179:44:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16179:73:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "16154:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16154:99:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "16154:99:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16274:172:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16319:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16333:3:3",
																		"type": "",
																		"value": "288"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16323:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16361:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16368:4:3",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16357:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16357:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "16410:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "16421:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16406:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16406:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "16430:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint64_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "16375:30:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16375:59:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "16350:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16350:85:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "16350:85:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16456:176:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16507:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16521:3:3",
																		"type": "",
																		"value": "320"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16511:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16549:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16556:4:3",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16545:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16545:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "16596:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "16607:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16592:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16592:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "16616:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bool_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "16563:28:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16563:57:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "16538:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16538:83:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "16538:83:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16642:167:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16681:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16695:3:3",
																		"type": "",
																		"value": "352"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16685:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16723:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16730:4:3",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16719:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16719:16:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "16773:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "16784:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16769:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16769:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "16793:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bytes32_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "16737:31:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16737:60:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "16712:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16712:86:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "16712:86:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16819:171:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16860:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16874:3:3",
																		"type": "",
																		"value": "384"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16864:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16902:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16909:6:3",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16898:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16898:18:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "16954:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "16965:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16950:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16950:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "16974:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_bytes32_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "16918:31:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16918:60:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "16891:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16891:88:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "16891:88:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17000:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17035:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17049:3:3",
																		"type": "",
																		"value": "416"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17039:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17077:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17084:6:3",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17073:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17073:18:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "17129:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "17140:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "17125:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17125:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "17149:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "17093:31:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17093:60:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "17066:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17066:88:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17066:88:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17175:178:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17223:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17237:3:3",
																		"type": "",
																		"value": "448"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17227:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17265:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17272:6:3",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17261:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17261:18:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "17317:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "17328:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "17313:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17313:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "17337:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "17281:31:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17281:60:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "17254:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17254:88:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17254:88:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17363:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17402:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17416:3:3",
																		"type": "",
																		"value": "480"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17406:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17444:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17451:6:3",
																						"type": "",
																						"value": "0x0160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17440:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17440:18:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "17496:9:3"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "17507:6:3"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "17492:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17492:22:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "17516:3:3"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "17460:31:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17460:60:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "17433:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17433:88:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "17433:88:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_Assertion_$186_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15114:9:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15125:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15133:5:3",
														"type": ""
													}
												],
												"src": "15047:2492:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17648:301:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17695:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17697:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17697:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17697:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17669:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17678:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17665:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17665:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17690:3:3",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17661:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17661:33:3"
															},
															"nodeType": "YulIf",
															"src": "17658:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "17788:154:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17803:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17817:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17807:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17832:100:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17904:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17915:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17900:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17900:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17924:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_Assertion_$186_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17842:57:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17842:90:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17832:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Assertion_$186_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17618:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17629:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17641:6:3",
														"type": ""
													}
												],
												"src": "17545:404:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct OptimisticOracleV3Interface.EscalationManagerSettings -> struct OptimisticOracleV3Interface.EscalationManagerSettings\n    function abi_encode_t_struct$_EscalationManagerSettings_$159_memory_ptr_to_t_struct$_EscalationManagerSettings_$159_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // arbitrateViaEscalationManager\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // discardOracle\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // validateDisputers\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // assertingCaller\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // escalationManager\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct OptimisticOracleV3Interface.Assertion -> struct OptimisticOracleV3Interface.Assertion\n    function abi_encode_t_struct$_Assertion_$186_memory_ptr_to_t_struct$_Assertion_$186_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0200)\n\n        {\n            // escalationManagerSettings\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_struct$_EscalationManagerSettings_$159_memory_ptr_to_t_struct$_EscalationManagerSettings_$159_memory_ptr(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // asserter\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // assertionTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // settled\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // currency\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_contract$_IERC20_$77_to_t_address(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // expirationTime\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // settlementResolution\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0140))\n        }\n\n        {\n            // domainId\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x0160))\n        }\n\n        {\n            // identifier\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x0180))\n        }\n\n        {\n            // bond\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x01a0))\n        }\n\n        {\n            // callbackRecipient\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x01c0))\n        }\n\n        {\n            // disputer\n\n            let memberValue0 := mload(add(value, 0x0160))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x01e0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Assertion_$186_memory_ptr__to_t_struct$_Assertion_$186_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 512)\n\n        abi_encode_t_struct$_Assertion_$186_memory_ptr_to_t_struct$_Assertion_$186_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes_storage_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // struct OptimisticOracleV3Interface.EscalationManagerSettings\n    function abi_decode_t_struct$_EscalationManagerSettings_$159_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // arbitrateViaEscalationManager\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // discardOracle\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // validateDisputers\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // assertingCaller\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // escalationManager\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct OptimisticOracleV3Interface.Assertion\n    function abi_decode_t_struct$_Assertion_$186_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0200) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0180)\n\n        {\n            // escalationManagerSettings\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_struct$_EscalationManagerSettings_$159_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // asserter\n\n            let offset := 160\n\n            mstore(add(value, 0x20), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // assertionTime\n\n            let offset := 192\n\n            mstore(add(value, 0x40), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // settled\n\n            let offset := 224\n\n            mstore(add(value, 0x60), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // currency\n\n            let offset := 256\n\n            mstore(add(value, 0x80), abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // expirationTime\n\n            let offset := 288\n\n            mstore(add(value, 0xa0), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // settlementResolution\n\n            let offset := 320\n\n            mstore(add(value, 0xc0), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // domainId\n\n            let offset := 352\n\n            mstore(add(value, 0xe0), abi_decode_t_bytes32_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // identifier\n\n            let offset := 384\n\n            mstore(add(value, 0x0100), abi_decode_t_bytes32_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // bond\n\n            let offset := 416\n\n            mstore(add(value, 0x0120), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // callbackRecipient\n\n            let offset := 448\n\n            mstore(add(value, 0x0140), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // disputer\n\n            let offset := 480\n\n            mstore(add(value, 0x0160), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Assertion_$186_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 512) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Assertion_$186_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80630d80da74146100675780633421390b146100855780637facaf3f1461008f5780639a3ddabc146100ad578063bc1dbc52146100cb578063c1a8ec2c146100e9575b600080fd5b61006f610107565b60405161007c919061058d565b60405180910390f35b61008d61010d565b005b6100976101b4565b6040516100a491906105c3565b60405180910390f35b6100b5610258565b6040516100c2919061083a565b60405180910390f35b6100d3610302565b6040516100e091906105c3565b60405180910390f35b6100f16103a8565b6040516100fe91906108e6565b60405180910390f35b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166336b13af46001306040518363ffffffff1660e01b8152600401610169929190610a10565b6020604051808303816000875af1158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac9190610a7b565b600281905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e39dfd7f6002546040518263ffffffff1660e01b8152600401610212919061058d565b602060405180830381865afa15801561022f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102539190610ad4565b905090565b610260610436565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663883028846002546040518263ffffffff1660e01b81526004016102bb919061058d565b61020060405180830381865afa1580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd9190610df5565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ea2f2ab6002546040518263ffffffff1660e01b8152600401610360919061058d565b6020604051808303816000875af115801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a39190610ad4565b905090565b600180546103b590610937565b80601f01602080910402602001604051908101604052809291908181526020018280546103e190610937565b801561042e5780601f106104035761010080835404028352916020019161042e565b820191906000526020600020905b81548152906001019060200180831161041157829003601f168201915b505050505081565b60405180610180016040528061044a610513565b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600015158152602001600080191681526020016000801916815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060a00160405280600015158152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000819050919050565b61058781610574565b82525050565b60006020820190506105a2600083018461057e565b92915050565b60008115159050919050565b6105bd816105a8565b82525050565b60006020820190506105d860008301846105b4565b92915050565b6105e7816105a8565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610618826105ed565b9050919050565b6106288161060d565b82525050565b60a08201600082015161064460008501826105de565b50602082015161065760208501826105de565b50604082015161066a60408501826105de565b50606082015161067d606085018261061f565b506080820151610690608085018261061f565b50505050565b600067ffffffffffffffff82169050919050565b6106b381610696565b82525050565b6000819050919050565b60006106de6106d96106d4846105ed565b6106b9565b6105ed565b9050919050565b60006106f0826106c3565b9050919050565b6000610702826106e5565b9050919050565b610712816106f7565b82525050565b61072181610574565b82525050565b6000819050919050565b61073a81610727565b82525050565b61020082016000820151610757600085018261062e565b50602082015161076a60a085018261061f565b50604082015161077d60c08501826106aa565b50606082015161079060e08501826105de565b5060808201516107a4610100850182610709565b5060a08201516107b86101208501826106aa565b5060c08201516107cc6101408501826105de565b5060e08201516107e0610160850182610718565b506101008201516107f5610180850182610718565b5061012082015161080a6101a0850182610731565b5061014082015161081f6101c085018261061f565b506101608201516108346101e085018261061f565b50505050565b6000610200820190506108506000830184610740565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610890578082015181840152602081019050610875565b60008484015250505050565b6000601f19601f8301169050919050565b60006108b882610856565b6108c28185610861565b93506108d2818560208601610872565b6108db8161089c565b840191505092915050565b6000602082019050818103600083015261090081846108ad565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061094f57607f821691505b60208210810361096257610961610908565b5b50919050565b60008190508160005260206000209050919050565b6000815461098a81610937565b6109948186610861565b945060018216600081146109af57600181146109c5576109f8565b60ff1983168652811515602002860193506109f8565b6109ce85610968565b60005b838110156109f0578154818901526001820191506020810190506109d1565b808801955050505b50505092915050565b610a0a8161060d565b82525050565b60006040820190508181036000830152610a2a818561097d565b9050610a396020830184610a01565b9392505050565b6000604051905090565b600080fd5b610a5881610574565b8114610a6357600080fd5b50565b600081519050610a7581610a4f565b92915050565b600060208284031215610a9157610a90610a4a565b5b6000610a9f84828501610a66565b91505092915050565b610ab1816105a8565b8114610abc57600080fd5b50565b600081519050610ace81610aa8565b92915050565b600060208284031215610aea57610ae9610a4a565b5b6000610af884828501610abf565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b3e8261089c565b810181811067ffffffffffffffff82111715610b5d57610b5c610b06565b5b80604052505050565b6000610b70610a40565b9050610b7c8282610b35565b919050565b610b8a8161060d565b8114610b9557600080fd5b50565b600081519050610ba781610b81565b92915050565b600060a08284031215610bc357610bc2610b01565b5b610bcd60a0610b66565b90506000610bdd84828501610abf565b6000830152506020610bf184828501610abf565b6020830152506040610c0584828501610abf565b6040830152506060610c1984828501610b98565b6060830152506080610c2d84828501610b98565b60808301525092915050565b610c4281610696565b8114610c4d57600080fd5b50565b600081519050610c5f81610c39565b92915050565b6000610c708261060d565b9050919050565b610c8081610c65565b8114610c8b57600080fd5b50565b600081519050610c9d81610c77565b92915050565b610cac81610727565b8114610cb757600080fd5b50565b600081519050610cc981610ca3565b92915050565b60006102008284031215610ce657610ce5610b01565b5b610cf1610180610b66565b90506000610d0184828501610bad565b60008301525060a0610d1584828501610b98565b60208301525060c0610d2984828501610c50565b60408301525060e0610d3d84828501610abf565b606083015250610100610d5284828501610c8e565b608083015250610120610d6784828501610c50565b60a083015250610140610d7c84828501610abf565b60c083015250610160610d9184828501610a66565b60e083015250610180610da684828501610a66565b610100830152506101a0610dbc84828501610cba565b610120830152506101c0610dd284828501610b98565b610140830152506101e0610de884828501610b98565b6101608301525092915050565b60006102008284031215610e0c57610e0b610a4a565b5b6000610e1a84828501610ccf565b9150509291505056fea26469706673582212206fe1bdcbe2dc36b4596b82d97b748c7ca1f47235dbba771a7161ce78439ea67364736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD80DA74 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x3421390B EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x7FACAF3F EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x9A3DDABC EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xBC1DBC52 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xC1A8EC2C EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x107 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x36B13AF4 PUSH1 0x1 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169 SWAP3 SWAP2 SWAP1 PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x188 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE39DFD7F PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xAD4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88302884 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x200 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8EA2F2AB PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x58D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x37F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0xAD4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x937 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E1 SWAP1 PUSH2 0x937 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x403 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x411 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x44A PUSH2 0x513 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x587 DUP2 PUSH2 0x574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BD DUP2 PUSH2 0x5A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E7 DUP2 PUSH2 0x5A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH2 0x5ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x628 DUP2 PUSH2 0x60D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x644 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x5DE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x657 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x5DE JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x66A PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x5DE JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x67D PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x61F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x690 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x61F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B3 DUP2 PUSH2 0x696 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE PUSH2 0x6D9 PUSH2 0x6D4 DUP5 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F0 DUP3 PUSH2 0x6C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x702 DUP3 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x712 DUP2 PUSH2 0x6F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x721 DUP2 PUSH2 0x574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73A DUP2 PUSH2 0x727 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x200 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x757 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x62E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x76A PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x61F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x77D PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x6AA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x790 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x5DE JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x7A4 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x709 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x7B8 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x6AA JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x7CC PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x5DE JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x7E0 PUSH2 0x160 DUP6 ADD DUP3 PUSH2 0x718 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x7F5 PUSH2 0x180 DUP6 ADD DUP3 PUSH2 0x718 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x80A PUSH2 0x1A0 DUP6 ADD DUP3 PUSH2 0x731 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x81F PUSH2 0x1C0 DUP6 ADD DUP3 PUSH2 0x61F JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x834 PUSH2 0x1E0 DUP6 ADD DUP3 PUSH2 0x61F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 ADD SWAP1 POP PUSH2 0x850 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x740 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x890 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x875 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 DUP3 PUSH2 0x856 JUMP JUMPDEST PUSH2 0x8C2 DUP2 DUP6 PUSH2 0x861 JUMP JUMPDEST SWAP4 POP PUSH2 0x8D2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x872 JUMP JUMPDEST PUSH2 0x8DB DUP2 PUSH2 0x89C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x900 DUP2 DUP5 PUSH2 0x8AD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x94F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x962 JUMPI PUSH2 0x961 PUSH2 0x908 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x98A DUP2 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x994 DUP2 DUP7 PUSH2 0x861 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x9AF JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x9C5 JUMPI PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x9CE DUP6 PUSH2 0x968 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9F0 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9D1 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA0A DUP2 PUSH2 0x60D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA2A DUP2 DUP6 PUSH2 0x97D JUMP JUMPDEST SWAP1 POP PUSH2 0xA39 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA01 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA58 DUP2 PUSH2 0x574 JUMP JUMPDEST DUP2 EQ PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA75 DUP2 PUSH2 0xA4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9F DUP5 DUP3 DUP6 ADD PUSH2 0xA66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0x5A8 JUMP JUMPDEST DUP2 EQ PUSH2 0xABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xACE DUP2 PUSH2 0xAA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAEA JUMPI PUSH2 0xAE9 PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF8 DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB3E DUP3 PUSH2 0x89C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB5D JUMPI PUSH2 0xB5C PUSH2 0xB06 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 PUSH2 0xA40 JUMP JUMPDEST SWAP1 POP PUSH2 0xB7C DUP3 DUP3 PUSH2 0xB35 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8A DUP2 PUSH2 0x60D JUMP JUMPDEST DUP2 EQ PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBA7 DUP2 PUSH2 0xB81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC3 JUMPI PUSH2 0xBC2 PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH2 0xBCD PUSH1 0xA0 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBDD DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xBF1 DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xC05 DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xC19 DUP5 DUP3 DUP6 ADD PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xC2D DUP5 DUP3 DUP6 ADD PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC42 DUP2 PUSH2 0x696 JUMP JUMPDEST DUP2 EQ PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC5F DUP2 PUSH2 0xC39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC70 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC80 DUP2 PUSH2 0xC65 JUMP JUMPDEST DUP2 EQ PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC9D DUP2 PUSH2 0xC77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAC DUP2 PUSH2 0x727 JUMP JUMPDEST DUP2 EQ PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCC9 DUP2 PUSH2 0xCA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCE5 PUSH2 0xB01 JUMP JUMPDEST JUMPDEST PUSH2 0xCF1 PUSH2 0x180 PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD01 DUP5 DUP3 DUP6 ADD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0xD29 DUP5 DUP3 DUP6 ADD PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0xD3D DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0xD52 DUP5 DUP3 DUP6 ADD PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0xD67 DUP5 DUP3 DUP6 ADD PUSH2 0xC50 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0xD7C DUP5 DUP3 DUP6 ADD PUSH2 0xABF JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0xD91 DUP5 DUP3 DUP6 ADD PUSH2 0xA66 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0xDA6 DUP5 DUP3 DUP6 ADD PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x1A0 PUSH2 0xDBC DUP5 DUP3 DUP6 ADD PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x1C0 PUSH2 0xDD2 DUP5 DUP3 DUP6 ADD PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x1E0 PUSH2 0xDE8 DUP5 DUP3 DUP6 ADD PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0C JUMPI PUSH2 0xE0B PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE1A DUP5 DUP3 DUP6 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xE1BDCBE2DC36B4596B82D97B748C7CA1 DELEGATECALL PUSH19 0x35DBBA771A7161CE78439EA67364736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "586:1848:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1136:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1525:119;;;:::i;:::-;;2017:117;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2259:173;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1784:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;941:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1136:26;;;;:::o;1525:119::-;1579:4;;;;;;;;;;:28;;;1608:13;1631:4;1579:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1565:11;:72;;;;1525:119::o;2017:117::-;2068:4;2091;;;;;;;;;;;:23;;;2115:11;;2091:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2084:43;;2017:117;:::o;2259:173::-;2328:44;;:::i;:::-;2395:4;;;;;;;;;;:17;;;2413:11;;2395:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2388:37;;2259:173;:::o;1784:130::-;1839:4;1862;;;;;;;;;;;:32;;;1895:11;;1862:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1855:52;;1784:130;:::o;941:72::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:90::-;476:7;519:5;512:13;505:21;494:32;;442:90;;;:::o;538:109::-;619:21;634:5;619:21;:::i;:::-;614:3;607:34;538:109;;:::o;653:210::-;740:4;778:2;767:9;763:18;755:26;;791:65;853:1;842:9;838:17;829:6;791:65;:::i;:::-;653:210;;;;:::o;869:99::-;940:21;955:5;940:21;:::i;:::-;935:3;928:34;869:99;;:::o;974:126::-;1011:7;1051:42;1044:5;1040:54;1029:65;;974:126;;;:::o;1106:96::-;1143:7;1172:24;1190:5;1172:24;:::i;:::-;1161:35;;1106:96;;;:::o;1208:108::-;1285:24;1303:5;1285:24;:::i;:::-;1280:3;1273:37;1208:108;;:::o;1454:1106::-;1625:4;1620:3;1616:14;1737:4;1730:5;1726:16;1720:23;1756:57;1807:4;1802:3;1798:14;1784:12;1756:57;:::i;:::-;1640:183;1914:4;1907:5;1903:16;1897:23;1933:57;1984:4;1979:3;1975:14;1961:12;1933:57;:::i;:::-;1833:167;2095:4;2088:5;2084:16;2078:23;2114:57;2165:4;2160:3;2156:14;2142:12;2114:57;:::i;:::-;2010:171;2274:4;2267:5;2263:16;2257:23;2293:63;2350:4;2345:3;2341:14;2327:12;2293:63;:::i;:::-;2191:175;2461:4;2454:5;2450:16;2444:23;2480:63;2537:4;2532:3;2528:14;2514:12;2480:63;:::i;:::-;2376:177;1594:966;1454:1106;;:::o;2566:101::-;2602:7;2642:18;2635:5;2631:30;2620:41;;2566:101;;;:::o;2673:105::-;2748:23;2765:5;2748:23;:::i;:::-;2743:3;2736:36;2673:105;;:::o;2784:60::-;2812:3;2833:5;2826:12;;2784:60;;;:::o;2850:142::-;2900:9;2933:53;2951:34;2960:24;2978:5;2960:24;:::i;:::-;2951:34;:::i;:::-;2933:53;:::i;:::-;2920:66;;2850:142;;;:::o;2998:126::-;3048:9;3081:37;3112:5;3081:37;:::i;:::-;3068:50;;2998:126;;;:::o;3130:139::-;3193:9;3226:37;3257:5;3226:37;:::i;:::-;3213:50;;3130:139;;;:::o;3275:147::-;3365:50;3409:5;3365:50;:::i;:::-;3360:3;3353:63;3275:147;;:::o;3428:108::-;3505:24;3523:5;3505:24;:::i;:::-;3500:3;3493:37;3428:108;;:::o;3542:77::-;3579:7;3608:5;3597:16;;3542:77;;;:::o;3625:108::-;3702:24;3720:5;3702:24;:::i;:::-;3697:3;3690:37;3625:108;;:::o;3839:2450::-;3988:6;3983:3;3979:16;4098:4;4091:5;4087:16;4081:23;4117:147;4258:4;4253:3;4249:14;4235:12;4117:147;:::i;:::-;4005:269;4360:4;4353:5;4349:16;4343:23;4379:63;4436:4;4431:3;4427:14;4413:12;4379:63;:::i;:::-;4284:168;4543:4;4536:5;4532:16;4526:23;4562:61;4617:4;4612:3;4608:14;4594:12;4562:61;:::i;:::-;4462:171;4718:4;4711:5;4707:16;4701:23;4737:57;4788:4;4783:3;4779:14;4765:12;4737:57;:::i;:::-;4643:161;4890:4;4883:5;4879:16;4873:23;4909:78;4979:6;4974:3;4970:16;4956:12;4909:78;:::i;:::-;4814:183;5089:4;5082:5;5078:16;5072:23;5108:63;5163:6;5158:3;5154:16;5140:12;5108:63;:::i;:::-;5007:174;5279:4;5272:5;5268:16;5262:23;5298:59;5349:6;5344:3;5340:16;5326:12;5298:59;:::i;:::-;5191:176;5453:4;5446:5;5442:16;5436:23;5472:65;5529:6;5524:3;5520:16;5506:12;5472:65;:::i;:::-;5377:170;5635:6;5628:5;5624:18;5618:25;5656:65;5713:6;5708:3;5704:16;5690:12;5656:65;:::i;:::-;5557:174;5813:6;5806:5;5802:18;5796:25;5834:65;5891:6;5886:3;5882:16;5868:12;5834:65;:::i;:::-;5741:168;6004:6;5997:5;5993:18;5987:25;6025:65;6082:6;6077:3;6073:16;6059:12;6025:65;:::i;:::-;5919:181;6186:6;6179:5;6175:18;6169:25;6207:65;6264:6;6259:3;6255:16;6241:12;6207:65;:::i;:::-;6110:172;3957:2332;3839:2450;;:::o;6295:327::-;6440:4;6478:3;6467:9;6463:19;6455:27;;6492:123;6612:1;6601:9;6597:17;6588:6;6492:123;:::i;:::-;6295:327;;;;:::o;6628:98::-;6679:6;6713:5;6707:12;6697:22;;6628:98;;;:::o;6732:168::-;6815:11;6849:6;6844:3;6837:19;6889:4;6884:3;6880:14;6865:29;;6732:168;;;;:::o;6906:246::-;6987:1;6997:113;7011:6;7008:1;7005:13;6997:113;;;7096:1;7091:3;7087:11;7081:18;7077:1;7072:3;7068:11;7061:39;7033:2;7030:1;7026:10;7021:15;;6997:113;;;7144:1;7135:6;7130:3;7126:16;7119:27;6968:184;6906:246;;;:::o;7158:102::-;7199:6;7250:2;7246:7;7241:2;7234:5;7230:14;7226:28;7216:38;;7158:102;;;:::o;7266:373::-;7352:3;7380:38;7412:5;7380:38;:::i;:::-;7434:70;7497:6;7492:3;7434:70;:::i;:::-;7427:77;;7513:65;7571:6;7566:3;7559:4;7552:5;7548:16;7513:65;:::i;:::-;7603:29;7625:6;7603:29;:::i;:::-;7598:3;7594:39;7587:46;;7356:283;7266:373;;;;:::o;7645:309::-;7756:4;7794:2;7783:9;7779:18;7771:26;;7843:9;7837:4;7833:20;7829:1;7818:9;7814:17;7807:47;7871:76;7942:4;7933:6;7871:76;:::i;:::-;7863:84;;7645:309;;;;:::o;7960:180::-;8008:77;8005:1;7998:88;8105:4;8102:1;8095:15;8129:4;8126:1;8119:15;8146:320;8190:6;8227:1;8221:4;8217:12;8207:22;;8274:1;8268:4;8264:12;8295:18;8285:81;;8351:4;8343:6;8339:17;8329:27;;8285:81;8413:2;8405:6;8402:14;8382:18;8379:38;8376:84;;8432:18;;:::i;:::-;8376:84;8197:269;8146:320;;;:::o;8472:140::-;8520:4;8543:3;8535:11;;8566:3;8563:1;8556:14;8600:4;8597:1;8587:18;8579:26;;8472:140;;;:::o;8640:827::-;8723:3;8760:5;8754:12;8789:36;8815:9;8789:36;:::i;:::-;8841:70;8904:6;8899:3;8841:70;:::i;:::-;8834:77;;8942:1;8931:9;8927:17;8958:1;8953:164;;;;9131:1;9126:335;;;;8920:541;;8953:164;9037:4;9033:9;9022;9018:25;9013:3;9006:38;9097:6;9090:14;9083:22;9077:4;9073:33;9068:3;9064:43;9057:50;;8953:164;;9126:335;9193:37;9224:5;9193:37;:::i;:::-;9252:1;9266:154;9280:6;9277:1;9274:13;9266:154;;;9354:7;9348:14;9344:1;9339:3;9335:11;9328:35;9404:1;9395:7;9391:15;9380:26;;9302:4;9299:1;9295:12;9290:17;;9266:154;;;9449:1;9444:3;9440:11;9433:18;;9133:328;;8920:541;;8727:740;;8640:827;;;;:::o;9473:118::-;9560:24;9578:5;9560:24;:::i;:::-;9555:3;9548:37;9473:118;;:::o;9597:413::-;9733:4;9771:2;9760:9;9756:18;9748:26;;9820:9;9814:4;9810:20;9806:1;9795:9;9791:17;9784:47;9848:73;9916:4;9907:6;9848:73;:::i;:::-;9840:81;;9931:72;9999:2;9988:9;9984:18;9975:6;9931:72;:::i;:::-;9597:413;;;;;:::o;10016:75::-;10049:6;10082:2;10076:9;10066:19;;10016:75;:::o;10097:117::-;10206:1;10203;10196:12;10343:122;10416:24;10434:5;10416:24;:::i;:::-;10409:5;10406:35;10396:63;;10455:1;10452;10445:12;10396:63;10343:122;:::o;10471:143::-;10528:5;10559:6;10553:13;10544:22;;10575:33;10602:5;10575:33;:::i;:::-;10471:143;;;;:::o;10620:351::-;10690:6;10739:2;10727:9;10718:7;10714:23;10710:32;10707:119;;;10745:79;;:::i;:::-;10707:119;10865:1;10890:64;10946:7;10937:6;10926:9;10922:22;10890:64;:::i;:::-;10880:74;;10836:128;10620:351;;;;:::o;10977:116::-;11047:21;11062:5;11047:21;:::i;:::-;11040:5;11037:32;11027:60;;11083:1;11080;11073:12;11027:60;10977:116;:::o;11099:137::-;11153:5;11184:6;11178:13;11169:22;;11200:30;11224:5;11200:30;:::i;:::-;11099:137;;;;:::o;11242:345::-;11309:6;11358:2;11346:9;11337:7;11333:23;11329:32;11326:119;;;11364:79;;:::i;:::-;11326:119;11484:1;11509:61;11562:7;11553:6;11542:9;11538:22;11509:61;:::i;:::-;11499:71;;11455:125;11242:345;;;;:::o;11593:117::-;11702:1;11699;11692:12;11716:180;11764:77;11761:1;11754:88;11861:4;11858:1;11851:15;11885:4;11882:1;11875:15;11902:281;11985:27;12007:4;11985:27;:::i;:::-;11977:6;11973:40;12115:6;12103:10;12100:22;12079:18;12067:10;12064:34;12061:62;12058:88;;;12126:18;;:::i;:::-;12058:88;12166:10;12162:2;12155:22;11945:238;11902:281;;:::o;12189:129::-;12223:6;12250:20;;:::i;:::-;12240:30;;12279:33;12307:4;12299:6;12279:33;:::i;:::-;12189:129;;;:::o;12447:122::-;12520:24;12538:5;12520:24;:::i;:::-;12513:5;12510:35;12500:63;;12559:1;12556;12549:12;12500:63;12447:122;:::o;12575:143::-;12632:5;12663:6;12657:13;12648:22;;12679:33;12706:5;12679:33;:::i;:::-;12575:143;;;;:::o;12792:1203::-;12894:5;12938:4;12926:9;12921:3;12917:19;12913:30;12910:117;;;12946:79;;:::i;:::-;12910:117;13045:21;13061:4;13045:21;:::i;:::-;13036:30;;13150:1;13190:57;13243:3;13234:6;13223:9;13219:22;13190:57;:::i;:::-;13183:4;13176:5;13172:16;13165:83;13076:183;13327:2;13368:57;13421:3;13412:6;13401:9;13397:22;13368:57;:::i;:::-;13361:4;13354:5;13350:16;13343:83;13269:168;13509:2;13550:57;13603:3;13594:6;13583:9;13579:22;13550:57;:::i;:::-;13543:4;13536:5;13532:16;13525:83;13447:172;13689:2;13730:60;13786:3;13777:6;13766:9;13762:22;13730:60;:::i;:::-;13723:4;13716:5;13712:16;13705:86;13629:173;13874:3;13916:60;13972:3;13963:6;13952:9;13948:22;13916:60;:::i;:::-;13909:4;13902:5;13898:16;13891:86;13812:176;12792:1203;;;;:::o;14001:120::-;14073:23;14090:5;14073:23;:::i;:::-;14066:5;14063:34;14053:62;;14111:1;14108;14101:12;14053:62;14001:120;:::o;14127:141::-;14183:5;14214:6;14208:13;14199:22;;14230:32;14256:5;14230:32;:::i;:::-;14127:141;;;;:::o;14274:109::-;14324:7;14353:24;14371:5;14353:24;:::i;:::-;14342:35;;14274:109;;;:::o;14389:148::-;14475:37;14506:5;14475:37;:::i;:::-;14468:5;14465:48;14455:76;;14527:1;14524;14517:12;14455:76;14389:148;:::o;14543:169::-;14613:5;14644:6;14638:13;14629:22;;14660:46;14700:5;14660:46;:::i;:::-;14543:169;;;;:::o;14718:122::-;14791:24;14809:5;14791:24;:::i;:::-;14784:5;14781:35;14771:63;;14830:1;14827;14820:12;14771:63;14718:122;:::o;14846:143::-;14903:5;14934:6;14928:13;14919:22;;14950:33;14977:5;14950:33;:::i;:::-;14846:143;;;;:::o;15047:2492::-;15133:5;15177:6;15165:9;15160:3;15156:19;15152:32;15149:119;;;15187:79;;:::i;:::-;15149:119;15286:23;15302:6;15286:23;:::i;:::-;15277:32;;15389:1;15429:102;15527:3;15518:6;15507:9;15503:22;15429:102;:::i;:::-;15422:4;15415:5;15411:16;15404:128;15319:224;15606:3;15648:60;15704:3;15695:6;15684:9;15680:22;15648:60;:::i;:::-;15641:4;15634:5;15630:16;15623:86;15553:167;15788:3;15830:59;15885:3;15876:6;15865:9;15861:22;15830:59;:::i;:::-;15823:4;15816:5;15812:16;15805:85;15730:171;15963:3;16005:57;16058:3;16049:6;16038:9;16034:22;16005:57;:::i;:::-;15998:4;15991:5;15987:16;15980:83;15911:163;16137:3;16179:73;16248:3;16239:6;16228:9;16224:22;16179:73;:::i;:::-;16172:4;16165:5;16161:16;16154:99;16084:180;16333:3;16375:59;16430:3;16421:6;16410:9;16406:22;16375:59;:::i;:::-;16368:4;16361:5;16357:16;16350:85;16274:172;16521:3;16563:57;16616:3;16607:6;16596:9;16592:22;16563:57;:::i;:::-;16556:4;16549:5;16545:16;16538:83;16456:176;16695:3;16737:60;16793:3;16784:6;16773:9;16769:22;16737:60;:::i;:::-;16730:4;16723:5;16719:16;16712:86;16642:167;16874:3;16918:60;16974:3;16965:6;16954:9;16950:22;16918:60;:::i;:::-;16909:6;16902:5;16898:18;16891:88;16819:171;17049:3;17093:60;17149:3;17140:6;17129:9;17125:22;17093:60;:::i;:::-;17084:6;17077:5;17073:18;17066:88;17000:165;17237:3;17281:60;17337:3;17328:6;17317:9;17313:22;17281:60;:::i;:::-;17272:6;17265:5;17261:18;17254:88;17175:178;17416:3;17460:60;17516:3;17507:6;17496:9;17492:22;17460:60;:::i;:::-;17451:6;17444:5;17440:18;17433:88;17363:169;15047:2492;;;;:::o;17545:404::-;17641:6;17690:3;17678:9;17669:7;17665:23;17661:33;17658:120;;;17697:79;;:::i;:::-;17658:120;17817:1;17842:90;17924:7;17915:6;17904:9;17900:22;17842:90;:::i;:::-;17832:100;;17788:154;17545:404;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "734600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"assertTruth()": "infinite",
								"assertedClaim()": "infinite",
								"assertionId()": "2407",
								"getAssertion()": "infinite",
								"getAssertionResult()": "infinite",
								"settleAndGetAssertionResult()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 586,
									"end": 2434,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 774,
									"end": 816,
									"name": "PUSH",
									"source": 1,
									"value": "9923D42EF695B5DD9911D05AC944D4CACA3C4EAB"
								},
								{
									"begin": 703,
									"end": 817,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 703,
									"end": 817,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 703,
									"end": 817,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 703,
									"end": 817,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 703,
									"end": 817,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 703,
									"end": 817,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "1A"
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "48656C6C6F20776F726C642066726F6D2072616D657368646F6E000000000000"
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1013,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 941,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 941,
									"end": 1013,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 941,
									"end": 1013,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 941,
									"end": 1013,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 941,
									"end": 1013,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 941,
									"end": 1013,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 941,
									"end": 1013,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 941,
									"end": 1013,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 941,
									"end": 1013,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 941,
									"end": 1013,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 941,
									"end": 1013,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 105,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 7,
									"end": 105,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 58,
									"end": 64,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 97,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 86,
									"end": 98,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 76,
									"end": 98,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 76,
									"end": 98,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 105,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 105,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 105,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 105,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 111,
									"end": 291,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 111,
									"end": 291,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 159,
									"end": 236,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 156,
									"end": 157,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 237,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 256,
									"end": 260,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 253,
									"end": 254,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 246,
									"end": 261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 280,
									"end": 284,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 277,
									"end": 278,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 285,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 297,
									"end": 477,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 297,
									"end": 477,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 345,
									"end": 422,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 423,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 442,
									"end": 446,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 439,
									"end": 440,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 432,
									"end": 447,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 466,
									"end": 470,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 463,
									"end": 464,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 471,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 483,
									"end": 803,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 483,
									"end": 803,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 527,
									"end": 533,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 565,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 558,
									"end": 562,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 554,
									"end": 566,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 544,
									"end": 566,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 544,
									"end": 566,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 611,
									"end": 612,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 605,
									"end": 609,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 601,
									"end": 613,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 632,
									"end": 650,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 622,
									"end": 703,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 622,
									"end": 703,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 688,
									"end": 692,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 680,
									"end": 686,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 676,
									"end": 693,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 666,
									"end": 693,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 666,
									"end": 693,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 622,
									"end": 703,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 622,
									"end": 703,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 750,
									"end": 752,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 742,
									"end": 748,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 739,
									"end": 753,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 719,
									"end": 737,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 716,
									"end": 754,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 713,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 713,
									"end": 797,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 769,
									"end": 787,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 769,
									"end": 787,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 769,
									"end": 787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 769,
									"end": 787,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 769,
									"end": 787,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 713,
									"end": 797,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 713,
									"end": 797,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 534,
									"end": 803,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 483,
									"end": 803,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 483,
									"end": 803,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 483,
									"end": 803,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 483,
									"end": 803,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 809,
									"end": 949,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 809,
									"end": 949,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 883,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 872,
									"end": 883,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 872,
									"end": 883,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 903,
									"end": 906,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 900,
									"end": 901,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 893,
									"end": 907,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 937,
									"end": 941,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 916,
									"end": 942,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 916,
									"end": 942,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 809,
									"end": 949,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 809,
									"end": 949,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 809,
									"end": 949,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 809,
									"end": 949,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 955,
									"end": 1048,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 1048,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 992,
									"end": 998,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1039,
									"end": 1041,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1034,
									"end": 1036,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1027,
									"end": 1032,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1023,
									"end": 1037,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1042,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1042,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 1042,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 955,
									"end": 1048,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 955,
									"end": 1048,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 955,
									"end": 1048,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 955,
									"end": 1048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1106,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1148,
									"end": 1153,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1138,
									"end": 1154,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1117,
									"end": 1154,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1117,
									"end": 1154,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1054,
									"end": 1161,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1054,
									"end": 1161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1236,
									"end": 1242,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1274,
									"end": 1284,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1406,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1339,
									"end": 1405,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1328,
									"end": 1337,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1406,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1406,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1309,
									"end": 1406,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1466,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1457,
									"end": 1465,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1466,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1427,
									"end": 1466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1427,
									"end": 1466,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1427,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1415,
									"end": 1466,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 1415,
									"end": 1466,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1499,
									"end": 1503,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1495,
									"end": 1504,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1488,
									"end": 1493,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1484,
									"end": 1505,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1475,
									"end": 1505,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1475,
									"end": 1505,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1548,
									"end": 1552,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1538,
									"end": 1546,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1553,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1527,
									"end": 1532,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1524,
									"end": 1554,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1514,
									"end": 1554,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1514,
									"end": 1554,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1243,
									"end": 1560,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1243,
									"end": 1560,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1560,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1560,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1643,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1566,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1603,
									"end": 1610,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1632,
									"end": 1637,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1643,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1643,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1643,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1649,
									"end": 1709,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1649,
									"end": 1709,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1677,
									"end": 1680,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1698,
									"end": 1703,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1691,
									"end": 1703,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1691,
									"end": 1703,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1649,
									"end": 1709,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1649,
									"end": 1709,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1649,
									"end": 1709,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1649,
									"end": 1709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1715,
									"end": 1857,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1715,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1765,
									"end": 1774,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1798,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1816,
									"end": 1850,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1825,
									"end": 1849,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 1843,
									"end": 1848,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1825,
									"end": 1849,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1825,
									"end": 1849,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1825,
									"end": 1849,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 1825,
									"end": 1849,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1816,
									"end": 1850,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1816,
									"end": 1850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1816,
									"end": 1850,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1816,
									"end": 1850,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1798,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1798,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1798,
									"end": 1851,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1798,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1785,
									"end": 1851,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1785,
									"end": 1851,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1715,
									"end": 1857,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1715,
									"end": 1857,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1715,
									"end": 1857,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1715,
									"end": 1857,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1863,
									"end": 1938,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1863,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1906,
									"end": 1909,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1927,
									"end": 1932,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1920,
									"end": 1932,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1920,
									"end": 1932,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1863,
									"end": 1938,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1863,
									"end": 1938,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1863,
									"end": 1938,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1863,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1944,
									"end": 2213,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1944,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2054,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 2085,
									"end": 2092,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2054,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 2054,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2054,
									"end": 2093,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 2054,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2115,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 2164,
									"end": 2205,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 2188,
									"end": 2204,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2164,
									"end": 2205,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2164,
									"end": 2205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2164,
									"end": 2205,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 2164,
									"end": 2205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2156,
									"end": 2162,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2149,
									"end": 2153,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2143,
									"end": 2154,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2115,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2115,
									"end": 2206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2115,
									"end": 2206,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 2115,
									"end": 2206,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2109,
									"end": 2113,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2102,
									"end": 2207,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2020,
									"end": 2213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1944,
									"end": 2213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1944,
									"end": 2213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1944,
									"end": 2213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1944,
									"end": 2213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2219,
									"end": 2292,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 2219,
									"end": 2292,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2264,
									"end": 2267,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2219,
									"end": 2292,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2219,
									"end": 2292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2298,
									"end": 2487,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2298,
									"end": 2487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2375,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 2375,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 2375,
									"end": 2407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2375,
									"end": 2407,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 2375,
									"end": 2407,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2416,
									"end": 2481,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 2474,
									"end": 2480,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2466,
									"end": 2472,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2460,
									"end": 2464,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2416,
									"end": 2481,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2416,
									"end": 2481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2416,
									"end": 2481,
									"name": "tag",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 2416,
									"end": 2481,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2351,
									"end": 2487,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2298,
									"end": 2487,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2298,
									"end": 2487,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2298,
									"end": 2487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2493,
									"end": 2679,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2493,
									"end": 2679,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2570,
									"end": 2573,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2563,
									"end": 2568,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2560,
									"end": 2574,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 2661,
									"end": 2662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2654,
									"end": 2659,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2597,
									"end": 2598,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2590,
									"end": 2595,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2586,
									"end": 2599,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2577,
									"end": 2599,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2577,
									"end": 2599,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 2553,
									"end": 2673,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2493,
									"end": 2679,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2493,
									"end": 2679,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2493,
									"end": 2679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2685,
									"end": 3226,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2685,
									"end": 3226,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2785,
									"end": 2787,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2780,
									"end": 2783,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2777,
									"end": 2788,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2774,
									"end": 3219,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2774,
									"end": 3219,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 2774,
									"end": 3219,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2819,
									"end": 2856,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2850,
									"end": 2855,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2819,
									"end": 2856,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 2819,
									"end": 2856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2819,
									"end": 2856,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2819,
									"end": 2856,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2902,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 2920,
									"end": 2930,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2902,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2902,
									"end": 2931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2902,
									"end": 2931,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 2902,
									"end": 2931,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2892,
									"end": 2900,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2888,
									"end": 2932,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3085,
									"end": 3087,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3073,
									"end": 3083,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3070,
									"end": 3088,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 3067,
									"end": 3116,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3067,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 3067,
									"end": 3116,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3106,
									"end": 3114,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3091,
									"end": 3114,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3091,
									"end": 3114,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3067,
									"end": 3116,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 3067,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3129,
									"end": 3209,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 3185,
									"end": 3207,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 3203,
									"end": 3206,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3185,
									"end": 3207,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 3185,
									"end": 3207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3185,
									"end": 3207,
									"name": "tag",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 3185,
									"end": 3207,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3175,
									"end": 3183,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3171,
									"end": 3208,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3158,
									"end": 3169,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3129,
									"end": 3209,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3129,
									"end": 3209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3129,
									"end": 3209,
									"name": "tag",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 3129,
									"end": 3209,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2789,
									"end": 3219,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2789,
									"end": 3219,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2774,
									"end": 3219,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 2774,
									"end": 3219,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2685,
									"end": 3226,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2685,
									"end": 3226,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2685,
									"end": 3226,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2685,
									"end": 3226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3286,
									"end": 3294,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3336,
									"end": 3341,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3330,
									"end": 3334,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3326,
									"end": 3342,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 3305,
									"end": 3342,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3305,
									"end": 3342,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3232,
									"end": 3349,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3232,
									"end": 3349,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3399,
									"end": 3405,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3432,
									"end": 3483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 3480,
									"end": 3481,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3476,
									"end": 3482,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3468,
									"end": 3473,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3465,
									"end": 3466,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 3461,
									"end": 3474,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3432,
									"end": 3483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 3432,
									"end": 3483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3432,
									"end": 3483,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 3432,
									"end": 3483,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3428,
									"end": 3484,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3513,
									"end": 3517,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3507,
									"end": 3511,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3503,
									"end": 3518,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3493,
									"end": 3518,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3493,
									"end": 3518,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3406,
									"end": 3524,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3355,
									"end": 3524,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3355,
									"end": 3524,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3609,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3751,
									"end": 3780,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 3776,
									"end": 3779,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3770,
									"end": 3774,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3751,
									"end": 3780,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 3751,
									"end": 3780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3751,
									"end": 3780,
									"name": "tag",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 3751,
									"end": 3780,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3743,
									"end": 3780,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3743,
									"end": 3780,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3813,
									"end": 3816,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3810,
									"end": 3811,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3806,
									"end": 3817,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3800,
									"end": 3804,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3797,
									"end": 3818,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3789,
									"end": 3818,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3789,
									"end": 3818,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3529,
									"end": 3824,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3529,
									"end": 3824,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3829,
									"end": 5219,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3829,
									"end": 5219,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3944,
									"end": 3980,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 3976,
									"end": 3979,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3944,
									"end": 3980,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 3944,
									"end": 3980,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3944,
									"end": 3980,
									"name": "tag",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 3944,
									"end": 3980,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4045,
									"end": 4063,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4037,
									"end": 4043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4034,
									"end": 4064,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 4031,
									"end": 4087,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4031,
									"end": 4087,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 4031,
									"end": 4087,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4067,
									"end": 4085,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 4067,
									"end": 4085,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 4067,
									"end": 4085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4067,
									"end": 4085,
									"name": "tag",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 4067,
									"end": 4085,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4031,
									"end": 4087,
									"name": "tag",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 4031,
									"end": 4087,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4111,
									"end": 4149,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 4143,
									"end": 4147,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4137,
									"end": 4148,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 4111,
									"end": 4149,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 4111,
									"end": 4149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4111,
									"end": 4149,
									"name": "tag",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 4111,
									"end": 4149,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4196,
									"end": 4262,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4247,
									"end": 4253,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4241,
									"end": 4245,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4196,
									"end": 4262,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 4196,
									"end": 4262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4196,
									"end": 4262,
									"name": "tag",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 4196,
									"end": 4262,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4289,
									"end": 4290,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4313,
									"end": 4317,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4300,
									"end": 4317,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4300,
									"end": 4317,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4345,
									"end": 4347,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4334,
									"end": 4348,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 4362,
									"end": 4363,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5018,
									"end": 5019,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5035,
									"end": 5041,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5032,
									"end": 5109,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5032,
									"end": 5109,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "79"
								},
								{
									"begin": 5032,
									"end": 5109,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5084,
									"end": 5093,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5079,
									"end": 5082,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 5075,
									"end": 5094,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5069,
									"end": 5095,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5060,
									"end": 5095,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5060,
									"end": 5095,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5032,
									"end": 5109,
									"name": "tag",
									"source": 3,
									"value": "79"
								},
								{
									"begin": 5032,
									"end": 5109,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5135,
									"end": 5202,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 5195,
									"end": 5201,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5135,
									"end": 5202,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 5135,
									"end": 5202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5135,
									"end": 5202,
									"name": "tag",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 5135,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5129,
									"end": 5133,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 5122,
									"end": 5203,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4991,
									"end": 5213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4327,
									"end": 5213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 4327,
									"end": 5213,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "tag",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 4357,
									"end": 4974,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4409,
									"end": 4413,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4405,
									"end": 4414,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 4397,
									"end": 4403,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4393,
									"end": 4415,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4443,
									"end": 4479,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "81"
								},
								{
									"begin": 4474,
									"end": 4478,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4443,
									"end": 4479,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 4443,
									"end": 4479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4443,
									"end": 4479,
									"name": "tag",
									"source": 3,
									"value": "81"
								},
								{
									"begin": 4443,
									"end": 4479,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4501,
									"end": 4502,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "tag",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4529,
									"end": 4536,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4526,
									"end": 4527,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4523,
									"end": 4537,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4608,
									"end": 4617,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4603,
									"end": 4606,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4599,
									"end": 4618,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4593,
									"end": 4619,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4585,
									"end": 4591,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4578,
									"end": 4620,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4659,
									"end": 4660,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4651,
									"end": 4657,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4647,
									"end": 4661,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4637,
									"end": 4661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4637,
									"end": 4661,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4706,
									"end": 4708,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4695,
									"end": 4704,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4691,
									"end": 4709,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4678,
									"end": 4709,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 4678,
									"end": 4709,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4552,
									"end": 4556,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4549,
									"end": 4550,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4545,
									"end": 4557,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4540,
									"end": 4557,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4540,
									"end": 4557,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "tag",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 4515,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4751,
									"end": 4757,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4742,
									"end": 4749,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4739,
									"end": 4758,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4736,
									"end": 4915,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4736,
									"end": 4915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 4736,
									"end": 4915,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4809,
									"end": 4818,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4804,
									"end": 4807,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4800,
									"end": 4819,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4794,
									"end": 4820,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4852,
									"end": 4900,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 4894,
									"end": 4898,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4886,
									"end": 4892,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4882,
									"end": 4899,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4871,
									"end": 4880,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4852,
									"end": 4900,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 4852,
									"end": 4900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4852,
									"end": 4900,
									"name": "tag",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 4852,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4844,
									"end": 4850,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4837,
									"end": 4901,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4759,
									"end": 4915,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4736,
									"end": 4915,
									"name": "tag",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 4736,
									"end": 4915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4961,
									"end": 4962,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4957,
									"end": 4958,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 4949,
									"end": 4955,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 4945,
									"end": 4959,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 4941,
									"end": 4963,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4935,
									"end": 4939,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 4928,
									"end": 4964,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4364,
									"end": 4974,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4364,
									"end": 4974,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4364,
									"end": 4974,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4327,
									"end": 5213,
									"name": "tag",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 4327,
									"end": 5213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4327,
									"end": 5213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3919,
									"end": 5219,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3919,
									"end": 5219,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3919,
									"end": 5219,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3829,
									"end": 5219,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3829,
									"end": 5219,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3829,
									"end": 5219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 586,
									"end": 2434,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206fe1bdcbe2dc36b4596b82d97b748c7ca1f47235dbba771a7161ce78439ea67364736f6c63430008100033",
									".code": [
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "D80DA74"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "3421390B"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "7FACAF3F"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "9A3DDABC"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "BC1DBC52"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "C1A8EC2C"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 2434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1136,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1136,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1525,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1525,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1525,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1525,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1644,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2017,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2017,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2259,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1784,
											"end": 1914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1784,
											"end": 1914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 941,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 941,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1525,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1607,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1607,
											"name": "PUSH",
											"source": 1,
											"value": "36B13AF4"
										},
										{
											"begin": 1608,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1631,
											"end": 1635,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1579,
											"end": 1637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1579,
											"end": 1637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1579,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "E39DFD7F"
										},
										{
											"begin": 2115,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2115,
											"end": 2126,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2091,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2091,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2091,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2328,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2328,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2372,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2328,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2395,
											"end": 2412,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "88302884"
										},
										{
											"begin": 2413,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2413,
											"end": 2424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2395,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2395,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2395,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1866,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1862,
											"end": 1866,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1866,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1866,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "PUSH",
											"source": 1,
											"value": "8EA2F2AB"
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1895,
											"end": 1906,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1862,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1862,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1862,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 941,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 941,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "44"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 442,
											"end": 532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 476,
											"end": 483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 512,
											"end": 525,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 505,
											"end": 526,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 494,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 494,
											"end": 526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 647,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 538,
											"end": 647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 619,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 619,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 614,
											"end": 617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 607,
											"end": 641,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 653,
											"end": 863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 740,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 780,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 776,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 763,
											"end": 781,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 851,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 838,
											"end": 855,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 869,
											"end": 968,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 869,
											"end": 968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 955,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 940,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 940,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 940,
											"end": 961,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 940,
											"end": 961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 935,
											"end": 938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 962,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 869,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 869,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 869,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1100,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 974,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1040,
											"end": 1094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1100,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1100,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1202,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1106,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1190,
											"end": 1195,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1172,
											"end": 1196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1172,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1202,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1202,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1208,
											"end": 1316,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1208,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1285,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1303,
											"end": 1308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1285,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1285,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1285,
											"end": 1309,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1285,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1283,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1208,
											"end": 1316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1208,
											"end": 1316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1208,
											"end": 1316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 2560,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1454,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1620,
											"end": 1623,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1616,
											"end": 1630,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1741,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1805,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 1812,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1784,
											"end": 1796,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1756,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1640,
											"end": 1823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1914,
											"end": 1918,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1903,
											"end": 1919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1984,
											"end": 1988,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1982,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1989,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1961,
											"end": 1973,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1933,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1990,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1933,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 2000,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2099,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2093,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2100,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2163,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2170,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2114,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2171,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2114,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2257,
											"end": 2280,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2350,
											"end": 2354,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2345,
											"end": 2348,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2355,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2327,
											"end": 2339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2356,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2293,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2454,
											"end": 2459,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2467,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2532,
											"end": 2535,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2480,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2543,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2480,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 2560,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 2560,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 2560,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 2560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2667,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2566,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2635,
											"end": 2640,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2631,
											"end": 2661,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2620,
											"end": 2661,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2620,
											"end": 2661,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2667,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2778,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2673,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2765,
											"end": 2770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2748,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2771,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2748,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2743,
											"end": 2746,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2736,
											"end": 2772,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2844,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2784,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2826,
											"end": 2838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2826,
											"end": 2838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2992,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2850,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2900,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2960,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2960,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 2984,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2960,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2951,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2933,
											"end": 2986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2986,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2933,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2992,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2992,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3124,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2998,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3048,
											"end": 3057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3112,
											"end": 3117,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3081,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3118,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3081,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3269,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3130,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3257,
											"end": 3262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3226,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3263,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3226,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3269,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3275,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3275,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3365,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3365,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3363,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3353,
											"end": 3416,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3275,
											"end": 3422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3275,
											"end": 3422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3275,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3428,
											"end": 3536,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3428,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3523,
											"end": 3528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3505,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3500,
											"end": 3503,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3530,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3428,
											"end": 3536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3428,
											"end": 3536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3428,
											"end": 3536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3619,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3542,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3597,
											"end": 3613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3597,
											"end": 3613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3619,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3625,
											"end": 3733,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3625,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3720,
											"end": 3725,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3702,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3702,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3690,
											"end": 3727,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3625,
											"end": 3733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3625,
											"end": 3733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3625,
											"end": 3733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 6289,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3839,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3983,
											"end": 3986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 3995,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4096,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4103,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4081,
											"end": 4104,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4117,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4258,
											"end": 4262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4256,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4235,
											"end": 4247,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4117,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4117,
											"end": 4264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4117,
											"end": 4264,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4117,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4005,
											"end": 4274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4358,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4366,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4379,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 4431,
											"end": 4434,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4441,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4379,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4379,
											"end": 4442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4379,
											"end": 4442,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4379,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4543,
											"end": 4547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4536,
											"end": 4541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4548,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4526,
											"end": 4549,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 4612,
											"end": 4615,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 4622,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4594,
											"end": 4606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4562,
											"end": 4623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4623,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4562,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4718,
											"end": 4722,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4711,
											"end": 4716,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4723,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4701,
											"end": 4724,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4788,
											"end": 4792,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4783,
											"end": 4786,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4793,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4765,
											"end": 4777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4737,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4794,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4737,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4643,
											"end": 4804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4883,
											"end": 4888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4895,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4979,
											"end": 4985,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4974,
											"end": 4977,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4970,
											"end": 4986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4956,
											"end": 4968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4909,
											"end": 4987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4987,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4909,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4814,
											"end": 4997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5089,
											"end": 5093,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 5082,
											"end": 5087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5078,
											"end": 5094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5095,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5163,
											"end": 5169,
											"name": "PUSH",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5158,
											"end": 5161,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5152,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5108,
											"end": 5171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5171,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5108,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5279,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 5272,
											"end": 5277,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5349,
											"end": 5355,
											"name": "PUSH",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5344,
											"end": 5347,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5356,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5298,
											"end": 5357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 5357,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5298,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5457,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5446,
											"end": 5451,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5436,
											"end": 5459,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5529,
											"end": 5535,
											"name": "PUSH",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5524,
											"end": 5527,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5520,
											"end": 5536,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5472,
											"end": 5537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5537,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5472,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5377,
											"end": 5547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5635,
											"end": 5641,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5624,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5643,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5713,
											"end": 5719,
											"name": "PUSH",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5708,
											"end": 5711,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5704,
											"end": 5720,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5702,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5656,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5721,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5656,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5557,
											"end": 5731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5813,
											"end": 5819,
											"name": "PUSH",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5806,
											"end": 5811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5796,
											"end": 5821,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5891,
											"end": 5897,
											"name": "PUSH",
											"source": 3,
											"value": "1A0"
										},
										{
											"begin": 5886,
											"end": 5889,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5882,
											"end": 5898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5868,
											"end": 5880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 5834,
											"end": 5899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5899,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5834,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6004,
											"end": 6010,
											"name": "PUSH",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5997,
											"end": 6002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5987,
											"end": 6012,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6025,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6082,
											"end": 6088,
											"name": "PUSH",
											"source": 3,
											"value": "1C0"
										},
										{
											"begin": 6077,
											"end": 6080,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6073,
											"end": 6089,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6059,
											"end": 6071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6025,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 6025,
											"end": 6090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6025,
											"end": 6090,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6025,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5919,
											"end": 6100,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6186,
											"end": 6192,
											"name": "PUSH",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6179,
											"end": 6184,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6175,
											"end": 6193,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6169,
											"end": 6194,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6207,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6264,
											"end": 6270,
											"name": "PUSH",
											"source": 3,
											"value": "1E0"
										},
										{
											"begin": 6259,
											"end": 6262,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6255,
											"end": 6271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6253,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6207,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 6207,
											"end": 6272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6207,
											"end": 6272,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6207,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6110,
											"end": 6282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 6289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 6289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 6289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 6289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6622,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 6295,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6440,
											"end": 6444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "PUSH",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6467,
											"end": 6476,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6463,
											"end": 6482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 6612,
											"end": 6613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6610,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6597,
											"end": 6614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6588,
											"end": 6594,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6492,
											"end": 6615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6615,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 6492,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6622,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6726,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6628,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6713,
											"end": 6718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6707,
											"end": 6719,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6697,
											"end": 6719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6697,
											"end": 6719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6726,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6900,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6732,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6815,
											"end": 6826,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6855,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6837,
											"end": 6856,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6889,
											"end": 6893,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6884,
											"end": 6887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6880,
											"end": 6894,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6900,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7152,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6906,
											"end": 7152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6997,
											"end": 7110,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 6997,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7011,
											"end": 7017,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7008,
											"end": 7009,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7110,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6997,
											"end": 7110,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7096,
											"end": 7097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7091,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7087,
											"end": 7098,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7081,
											"end": 7099,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7077,
											"end": 7078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7072,
											"end": 7075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7068,
											"end": 7079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7061,
											"end": 7100,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7033,
											"end": 7035,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7030,
											"end": 7031,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7026,
											"end": 7036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 6997,
											"end": 7110,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7110,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6997,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7144,
											"end": 7145,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7141,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7130,
											"end": 7133,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7126,
											"end": 7142,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7119,
											"end": 7146,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6968,
											"end": 7152,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7152,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7152,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7152,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7260,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 7158,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7199,
											"end": 7205,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7250,
											"end": 7252,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7246,
											"end": 7253,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7243,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7234,
											"end": 7239,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7230,
											"end": 7244,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7226,
											"end": 7254,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7260,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7266,
											"end": 7639,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 7266,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7352,
											"end": 7355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7380,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7412,
											"end": 7417,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7380,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 7380,
											"end": 7418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7380,
											"end": 7418,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7380,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7495,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 7434,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7504,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7434,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7504,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7513,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 7571,
											"end": 7577,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7566,
											"end": 7569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7559,
											"end": 7563,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7552,
											"end": 7557,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7548,
											"end": 7564,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7513,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 7513,
											"end": 7578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7513,
											"end": 7578,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 7513,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7603,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7625,
											"end": 7631,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7603,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 7603,
											"end": 7632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7603,
											"end": 7632,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7603,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7598,
											"end": 7601,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7594,
											"end": 7633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7587,
											"end": 7633,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7587,
											"end": 7633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7356,
											"end": 7639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7266,
											"end": 7639,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7266,
											"end": 7639,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7266,
											"end": 7639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7266,
											"end": 7639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7266,
											"end": 7639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7645,
											"end": 7954,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 7645,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7760,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7796,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7783,
											"end": 7792,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7771,
											"end": 7797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7771,
											"end": 7797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7843,
											"end": 7852,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7841,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7833,
											"end": 7853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7830,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7827,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7814,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7807,
											"end": 7854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7871,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 7942,
											"end": 7946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7871,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 7871,
											"end": 7947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7871,
											"end": 7947,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 7871,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7863,
											"end": 7947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7863,
											"end": 7947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7645,
											"end": 7954,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7645,
											"end": 7954,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7645,
											"end": 7954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7645,
											"end": 7954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7645,
											"end": 7954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7960,
											"end": 8140,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 7960,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8008,
											"end": 8085,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8005,
											"end": 8006,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7998,
											"end": 8086,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 8102,
											"end": 8103,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8095,
											"end": 8110,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8133,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8134,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8146,
											"end": 8466,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 8146,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8190,
											"end": 8196,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8227,
											"end": 8228,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8221,
											"end": 8225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8217,
											"end": 8229,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8207,
											"end": 8229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8207,
											"end": 8229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8274,
											"end": 8275,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8268,
											"end": 8272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8295,
											"end": 8313,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 8285,
											"end": 8366,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8351,
											"end": 8355,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 8343,
											"end": 8349,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8356,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8329,
											"end": 8356,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8329,
											"end": 8356,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8366,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 8285,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8413,
											"end": 8415,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8405,
											"end": 8411,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8402,
											"end": 8416,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8382,
											"end": 8400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8379,
											"end": 8417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8376,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 8376,
											"end": 8460,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 8432,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8376,
											"end": 8460,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 8376,
											"end": 8460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8197,
											"end": 8466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8146,
											"end": 8466,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8146,
											"end": 8466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8146,
											"end": 8466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8146,
											"end": 8466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8612,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 8472,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8520,
											"end": 8524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8543,
											"end": 8546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8535,
											"end": 8546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8535,
											"end": 8546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8566,
											"end": 8569,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8563,
											"end": 8564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8556,
											"end": 8570,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8600,
											"end": 8604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8597,
											"end": 8598,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8587,
											"end": 8605,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8579,
											"end": 8605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8579,
											"end": 8605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8472,
											"end": 8612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8640,
											"end": 9467,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 8640,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8723,
											"end": 8726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8760,
											"end": 8765,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8754,
											"end": 8766,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8789,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8815,
											"end": 8824,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8789,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 8789,
											"end": 8825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8789,
											"end": 8825,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8789,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 8904,
											"end": 8910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8902,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 8841,
											"end": 8911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8911,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 8841,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8911,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8942,
											"end": 8943,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8931,
											"end": 8940,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8927,
											"end": 8944,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 9117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 9117,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 8953,
											"end": 9117,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9131,
											"end": 9132,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9126,
											"end": 9461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9126,
											"end": 9461,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9126,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 9126,
											"end": 9461,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8920,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 8920,
											"end": 9461,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 8953,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9037,
											"end": 9041,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 9033,
											"end": 9042,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9022,
											"end": 9031,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9018,
											"end": 9043,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9006,
											"end": 9044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9097,
											"end": 9103,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9090,
											"end": 9104,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9083,
											"end": 9105,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9077,
											"end": 9081,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9073,
											"end": 9106,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9068,
											"end": 9071,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9064,
											"end": 9107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9057,
											"end": 9107,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9057,
											"end": 9107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 8953,
											"end": 9117,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9126,
											"end": 9461,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 9126,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9193,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9224,
											"end": 9229,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9193,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 9193,
											"end": 9230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9193,
											"end": 9230,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9193,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9252,
											"end": 9253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9266,
											"end": 9420,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9266,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9280,
											"end": 9286,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9274,
											"end": 9287,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9266,
											"end": 9420,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9266,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 9266,
											"end": 9420,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9354,
											"end": 9361,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9348,
											"end": 9362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9344,
											"end": 9345,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9339,
											"end": 9342,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9335,
											"end": 9346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9328,
											"end": 9363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9405,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9395,
											"end": 9402,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9380,
											"end": 9406,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9380,
											"end": 9406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9302,
											"end": 9306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9299,
											"end": 9300,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9295,
											"end": 9307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9266,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9266,
											"end": 9420,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9266,
											"end": 9420,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 9266,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9449,
											"end": 9450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9444,
											"end": 9447,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9440,
											"end": 9451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9433,
											"end": 9451,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 9433,
											"end": 9451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9133,
											"end": 9461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9133,
											"end": 9461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8920,
											"end": 9461,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 8920,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8920,
											"end": 9461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8727,
											"end": 9467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8727,
											"end": 9467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8640,
											"end": 9467,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8640,
											"end": 9467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8640,
											"end": 9467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8640,
											"end": 9467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8640,
											"end": 9467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9473,
											"end": 9591,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 9473,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9560,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 9578,
											"end": 9583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9560,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 9560,
											"end": 9584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9560,
											"end": 9584,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 9560,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9555,
											"end": 9558,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9473,
											"end": 9591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9473,
											"end": 9591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9473,
											"end": 9591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 10010,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 9597,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9733,
											"end": 9737,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9771,
											"end": 9773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9760,
											"end": 9769,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9748,
											"end": 9774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9748,
											"end": 9774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9820,
											"end": 9829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9814,
											"end": 9818,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9810,
											"end": 9830,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9806,
											"end": 9807,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9791,
											"end": 9808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9784,
											"end": 9831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9848,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 9916,
											"end": 9920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9913,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9848,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 9848,
											"end": 9921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9848,
											"end": 9921,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 9848,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9840,
											"end": 9921,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9840,
											"end": 9921,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9931,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9999,
											"end": 10001,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9988,
											"end": 9997,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9984,
											"end": 10002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9975,
											"end": 9981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9931,
											"end": 10003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 9931,
											"end": 10003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9931,
											"end": 10003,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9931,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 10010,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 10010,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 10010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 10010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 10010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 10010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10016,
											"end": 10091,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 10016,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10049,
											"end": 10055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10082,
											"end": 10084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10076,
											"end": 10085,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10016,
											"end": 10091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10016,
											"end": 10091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10097,
											"end": 10214,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10097,
											"end": 10214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10206,
											"end": 10207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10204,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10196,
											"end": 10208,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10343,
											"end": 10465,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 10343,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10416,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 10434,
											"end": 10439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10416,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 10416,
											"end": 10440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10416,
											"end": 10440,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 10416,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10409,
											"end": 10414,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10406,
											"end": 10441,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 10396,
											"end": 10459,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10455,
											"end": 10456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10452,
											"end": 10453,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10457,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10459,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 10396,
											"end": 10459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10343,
											"end": 10465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10343,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10614,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 10471,
											"end": 10614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10528,
											"end": 10533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10559,
											"end": 10565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10553,
											"end": 10566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10544,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10544,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10575,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 10602,
											"end": 10607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10575,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 10575,
											"end": 10608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10575,
											"end": 10608,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 10575,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10614,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10620,
											"end": 10971,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 10620,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10690,
											"end": 10696,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10739,
											"end": 10741,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10727,
											"end": 10736,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10718,
											"end": 10725,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10737,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10710,
											"end": 10742,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10826,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 10707,
											"end": 10826,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10745,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 10745,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10745,
											"end": 10824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10745,
											"end": 10824,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 10745,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10826,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 10707,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10865,
											"end": 10866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10890,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 10946,
											"end": 10953,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10937,
											"end": 10943,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10926,
											"end": 10935,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10922,
											"end": 10944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10890,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 10890,
											"end": 10954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10890,
											"end": 10954,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 10890,
											"end": 10954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10954,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10836,
											"end": 10964,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10620,
											"end": 10971,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10620,
											"end": 10971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10620,
											"end": 10971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10620,
											"end": 10971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10620,
											"end": 10971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10977,
											"end": 11093,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 10977,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11047,
											"end": 11068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 11062,
											"end": 11067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11047,
											"end": 11068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 11047,
											"end": 11068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11047,
											"end": 11068,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 11047,
											"end": 11068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11040,
											"end": 11045,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11069,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11027,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 11027,
											"end": 11087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11083,
											"end": 11084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11080,
											"end": 11081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11085,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11027,
											"end": 11087,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 11027,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10977,
											"end": 11093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10977,
											"end": 11093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11099,
											"end": 11236,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 11099,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11153,
											"end": 11158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11178,
											"end": 11191,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11169,
											"end": 11191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11169,
											"end": 11191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11200,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 11224,
											"end": 11229,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11200,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 11200,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11200,
											"end": 11230,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 11200,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11099,
											"end": 11236,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11099,
											"end": 11236,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11099,
											"end": 11236,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11099,
											"end": 11236,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11099,
											"end": 11236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11242,
											"end": 11587,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 11242,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11309,
											"end": 11315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11358,
											"end": 11360,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11346,
											"end": 11355,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11337,
											"end": 11344,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11333,
											"end": 11356,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11361,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 11326,
											"end": 11445,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11326,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 11326,
											"end": 11445,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11364,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 11364,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 11364,
											"end": 11443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11364,
											"end": 11443,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 11364,
											"end": 11443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11326,
											"end": 11445,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 11326,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11484,
											"end": 11485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11509,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 11562,
											"end": 11569,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11553,
											"end": 11559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11542,
											"end": 11551,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11538,
											"end": 11560,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11509,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 11509,
											"end": 11570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11509,
											"end": 11570,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 11509,
											"end": 11570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11499,
											"end": 11570,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11499,
											"end": 11570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11455,
											"end": 11580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11242,
											"end": 11587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11242,
											"end": 11587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11242,
											"end": 11587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11242,
											"end": 11587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11242,
											"end": 11587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11593,
											"end": 11710,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 11593,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11702,
											"end": 11703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11699,
											"end": 11700,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11692,
											"end": 11704,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11716,
											"end": 11896,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 11716,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11761,
											"end": 11762,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11754,
											"end": 11842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11861,
											"end": 11865,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 11858,
											"end": 11859,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11851,
											"end": 11866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11885,
											"end": 11889,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 11882,
											"end": 11883,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11875,
											"end": 11890,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11902,
											"end": 12183,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 11902,
											"end": 12183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11985,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 12007,
											"end": 12011,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11985,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 11985,
											"end": 12012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11985,
											"end": 12012,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 11985,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11977,
											"end": 11983,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11973,
											"end": 12013,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12115,
											"end": 12121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12103,
											"end": 12113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12100,
											"end": 12122,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12067,
											"end": 12077,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12064,
											"end": 12098,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 12061,
											"end": 12123,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 12058,
											"end": 12146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12058,
											"end": 12146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 12058,
											"end": 12146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 12126,
											"end": 12144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12058,
											"end": 12146,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 12058,
											"end": 12146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12166,
											"end": 12176,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12162,
											"end": 12164,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12155,
											"end": 12177,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11945,
											"end": 12183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11902,
											"end": 12183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11902,
											"end": 12183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11902,
											"end": 12183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12318,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 12189,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12223,
											"end": 12229,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 12250,
											"end": 12270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12240,
											"end": 12270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12240,
											"end": 12270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12279,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 12307,
											"end": 12311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12279,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 12279,
											"end": 12312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12279,
											"end": 12312,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 12279,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12447,
											"end": 12569,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 12447,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12520,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 12538,
											"end": 12543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12520,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 12520,
											"end": 12544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12520,
											"end": 12544,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 12520,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12513,
											"end": 12518,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12510,
											"end": 12545,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12500,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 12500,
											"end": 12563,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12559,
											"end": 12560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12556,
											"end": 12557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12549,
											"end": 12561,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12500,
											"end": 12563,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 12500,
											"end": 12563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12447,
											"end": 12569,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12447,
											"end": 12569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12575,
											"end": 12718,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 12575,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12632,
											"end": 12637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12663,
											"end": 12669,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12657,
											"end": 12670,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 12670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 12670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12679,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 12706,
											"end": 12711,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12679,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 12679,
											"end": 12712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12679,
											"end": 12712,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 12679,
											"end": 12712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12575,
											"end": 12718,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12575,
											"end": 12718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12575,
											"end": 12718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12575,
											"end": 12718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12575,
											"end": 12718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12792,
											"end": 13995,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 12792,
											"end": 13995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12894,
											"end": 12899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12938,
											"end": 12942,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 12926,
											"end": 12935,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12921,
											"end": 12924,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12917,
											"end": 12936,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12913,
											"end": 12943,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 12910,
											"end": 13027,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12910,
											"end": 13027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 12910,
											"end": 13027,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12946,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 12946,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 12946,
											"end": 13025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12946,
											"end": 13025,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 12946,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12910,
											"end": 13027,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 12910,
											"end": 13027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13045,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 13061,
											"end": 13065,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 13045,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 13045,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13045,
											"end": 13066,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 13045,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13150,
											"end": 13151,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13190,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 13243,
											"end": 13246,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13234,
											"end": 13240,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13223,
											"end": 13232,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13219,
											"end": 13241,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13190,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 13190,
											"end": 13247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13190,
											"end": 13247,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 13190,
											"end": 13247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13183,
											"end": 13187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13172,
											"end": 13188,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13165,
											"end": 13248,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13076,
											"end": 13259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13327,
											"end": 13329,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13368,
											"end": 13425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 13421,
											"end": 13424,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13412,
											"end": 13418,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13401,
											"end": 13410,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13397,
											"end": 13419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13368,
											"end": 13425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 13368,
											"end": 13425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13368,
											"end": 13425,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 13368,
											"end": 13425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13361,
											"end": 13365,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13354,
											"end": 13359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13350,
											"end": 13366,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13343,
											"end": 13426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13269,
											"end": 13437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13509,
											"end": 13511,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13550,
											"end": 13607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 13603,
											"end": 13606,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13594,
											"end": 13600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13583,
											"end": 13592,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13579,
											"end": 13601,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13550,
											"end": 13607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 13550,
											"end": 13607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13550,
											"end": 13607,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 13550,
											"end": 13607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13543,
											"end": 13547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13536,
											"end": 13541,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13532,
											"end": 13548,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13525,
											"end": 13608,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13447,
											"end": 13619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13689,
											"end": 13691,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 13730,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 13786,
											"end": 13789,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13777,
											"end": 13783,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13766,
											"end": 13775,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13762,
											"end": 13784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13730,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 13730,
											"end": 13790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13730,
											"end": 13790,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 13730,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13723,
											"end": 13727,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 13716,
											"end": 13721,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13712,
											"end": 13728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13705,
											"end": 13791,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13629,
											"end": 13802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13874,
											"end": 13877,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 13916,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 13972,
											"end": 13975,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13963,
											"end": 13969,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13952,
											"end": 13961,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13948,
											"end": 13970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13916,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 13916,
											"end": 13976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13916,
											"end": 13976,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 13916,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13909,
											"end": 13913,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 13902,
											"end": 13907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13898,
											"end": 13914,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13891,
											"end": 13977,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13812,
											"end": 13988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12792,
											"end": 13995,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12792,
											"end": 13995,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12792,
											"end": 13995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12792,
											"end": 13995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12792,
											"end": 13995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14001,
											"end": 14121,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 14001,
											"end": 14121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14073,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 14090,
											"end": 14095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14073,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 14073,
											"end": 14096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14073,
											"end": 14096,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 14073,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14066,
											"end": 14071,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14063,
											"end": 14097,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14053,
											"end": 14115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 14053,
											"end": 14115,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14111,
											"end": 14112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14101,
											"end": 14113,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14053,
											"end": 14115,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 14053,
											"end": 14115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14001,
											"end": 14121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14001,
											"end": 14121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14127,
											"end": 14268,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 14127,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14214,
											"end": 14220,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14208,
											"end": 14221,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14199,
											"end": 14221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14199,
											"end": 14221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14230,
											"end": 14262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 14256,
											"end": 14261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14230,
											"end": 14262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 14230,
											"end": 14262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14230,
											"end": 14262,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 14230,
											"end": 14262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14127,
											"end": 14268,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14127,
											"end": 14268,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14127,
											"end": 14268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14127,
											"end": 14268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14127,
											"end": 14268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14274,
											"end": 14383,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 14274,
											"end": 14383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14324,
											"end": 14331,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14353,
											"end": 14377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 14371,
											"end": 14376,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14353,
											"end": 14377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 14353,
											"end": 14377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14353,
											"end": 14377,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 14353,
											"end": 14377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14342,
											"end": 14377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14342,
											"end": 14377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14274,
											"end": 14383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14274,
											"end": 14383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14274,
											"end": 14383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14274,
											"end": 14383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14389,
											"end": 14537,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 14389,
											"end": 14537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14475,
											"end": 14512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 14506,
											"end": 14511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14475,
											"end": 14512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 14475,
											"end": 14512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14475,
											"end": 14512,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 14475,
											"end": 14512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14468,
											"end": 14473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14465,
											"end": 14513,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14455,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 14455,
											"end": 14531,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14527,
											"end": 14528,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14524,
											"end": 14525,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14517,
											"end": 14529,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14455,
											"end": 14531,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 14455,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14389,
											"end": 14537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14389,
											"end": 14537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14543,
											"end": 14712,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 14543,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14613,
											"end": 14618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14644,
											"end": 14650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14638,
											"end": 14651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14629,
											"end": 14651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14629,
											"end": 14651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 14700,
											"end": 14705,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 14660,
											"end": 14706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14706,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 14660,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14543,
											"end": 14712,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14543,
											"end": 14712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14543,
											"end": 14712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14543,
											"end": 14712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14543,
											"end": 14712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14718,
											"end": 14840,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 14718,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14791,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 14809,
											"end": 14814,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14791,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 14791,
											"end": 14815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14791,
											"end": 14815,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 14791,
											"end": 14815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14784,
											"end": 14789,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14781,
											"end": 14816,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14771,
											"end": 14834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 14771,
											"end": 14834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14830,
											"end": 14831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14827,
											"end": 14828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14820,
											"end": 14832,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14771,
											"end": 14834,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 14771,
											"end": 14834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14718,
											"end": 14840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14718,
											"end": 14840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14846,
											"end": 14989,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 14846,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14903,
											"end": 14908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14928,
											"end": 14941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14919,
											"end": 14941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14919,
											"end": 14941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14950,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 14977,
											"end": 14982,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14950,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 14950,
											"end": 14983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14950,
											"end": 14983,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 14950,
											"end": 14983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14846,
											"end": 14989,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14846,
											"end": 14989,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14846,
											"end": 14989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14846,
											"end": 14989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14846,
											"end": 14989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15047,
											"end": 17539,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 15047,
											"end": 17539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15138,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15177,
											"end": 15183,
											"name": "PUSH",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 15165,
											"end": 15174,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15160,
											"end": 15163,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15156,
											"end": 15175,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15152,
											"end": 15184,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 15149,
											"end": 15268,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15149,
											"end": 15268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 15149,
											"end": 15268,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15187,
											"end": 15266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 15187,
											"end": 15266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15187,
											"end": 15266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15187,
											"end": 15266,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 15187,
											"end": 15266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15149,
											"end": 15268,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 15149,
											"end": 15268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15286,
											"end": 15309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 15302,
											"end": 15308,
											"name": "PUSH",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 15286,
											"end": 15309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 15286,
											"end": 15309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15286,
											"end": 15309,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 15286,
											"end": 15309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15277,
											"end": 15309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15277,
											"end": 15309,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15389,
											"end": 15390,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15429,
											"end": 15531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 15527,
											"end": 15530,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15524,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15507,
											"end": 15516,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15503,
											"end": 15525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15429,
											"end": 15531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 15429,
											"end": 15531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15429,
											"end": 15531,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 15429,
											"end": 15531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15415,
											"end": 15420,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15411,
											"end": 15427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15404,
											"end": 15532,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15319,
											"end": 15543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15606,
											"end": 15609,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 15648,
											"end": 15708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 15704,
											"end": 15707,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15695,
											"end": 15701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15684,
											"end": 15693,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15680,
											"end": 15702,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15648,
											"end": 15708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 15648,
											"end": 15708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15648,
											"end": 15708,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 15648,
											"end": 15708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15641,
											"end": 15645,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15634,
											"end": 15639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15630,
											"end": 15646,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15623,
											"end": 15709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15553,
											"end": 15720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15788,
											"end": 15791,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 15830,
											"end": 15889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 15885,
											"end": 15888,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15876,
											"end": 15882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15865,
											"end": 15874,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15861,
											"end": 15883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15830,
											"end": 15889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 15830,
											"end": 15889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15830,
											"end": 15889,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 15830,
											"end": 15889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15823,
											"end": 15827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15816,
											"end": 15821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15812,
											"end": 15828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15805,
											"end": 15890,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15730,
											"end": 15901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15963,
											"end": 15966,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 16005,
											"end": 16062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 16058,
											"end": 16061,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 16049,
											"end": 16055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16038,
											"end": 16047,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 16034,
											"end": 16056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16005,
											"end": 16062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 16005,
											"end": 16062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16005,
											"end": 16062,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 16005,
											"end": 16062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15998,
											"end": 16002,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 15991,
											"end": 15996,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15987,
											"end": 16003,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15980,
											"end": 16063,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15911,
											"end": 16074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16137,
											"end": 16140,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16179,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 16248,
											"end": 16251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 16239,
											"end": 16245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16228,
											"end": 16237,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 16224,
											"end": 16246,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16179,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 16179,
											"end": 16252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16179,
											"end": 16252,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 16179,
											"end": 16252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16172,
											"end": 16176,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 16165,
											"end": 16170,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16161,
											"end": 16177,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16154,
											"end": 16253,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16084,
											"end": 16264,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16333,
											"end": 16336,
											"name": "PUSH",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 16375,
											"end": 16434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 16430,
											"end": 16433,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 16421,
											"end": 16427,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16410,
											"end": 16419,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 16406,
											"end": 16428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16375,
											"end": 16434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 16375,
											"end": 16434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16375,
											"end": 16434,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 16375,
											"end": 16434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16368,
											"end": 16372,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 16361,
											"end": 16366,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16350,
											"end": 16435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16274,
											"end": 16446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16521,
											"end": 16524,
											"name": "PUSH",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 16563,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 16616,
											"end": 16619,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 16607,
											"end": 16613,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16596,
											"end": 16605,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 16592,
											"end": 16614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16563,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 16563,
											"end": 16620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16563,
											"end": 16620,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 16563,
											"end": 16620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16556,
											"end": 16560,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 16549,
											"end": 16554,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16545,
											"end": 16561,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16538,
											"end": 16621,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16456,
											"end": 16632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16695,
											"end": 16698,
											"name": "PUSH",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 16737,
											"end": 16797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 16793,
											"end": 16796,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 16784,
											"end": 16790,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16773,
											"end": 16782,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 16769,
											"end": 16791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16737,
											"end": 16797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 16737,
											"end": 16797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16737,
											"end": 16797,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 16737,
											"end": 16797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16734,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 16723,
											"end": 16728,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16719,
											"end": 16735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16712,
											"end": 16798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16642,
											"end": 16809,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16874,
											"end": 16877,
											"name": "PUSH",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 16918,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 16974,
											"end": 16977,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 16965,
											"end": 16971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16954,
											"end": 16963,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 16950,
											"end": 16972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 16918,
											"end": 16978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 16978,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 16918,
											"end": 16978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16909,
											"end": 16915,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16902,
											"end": 16907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16898,
											"end": 16916,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16891,
											"end": 16979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16819,
											"end": 16990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17049,
											"end": 17052,
											"name": "PUSH",
											"source": 3,
											"value": "1A0"
										},
										{
											"begin": 17093,
											"end": 17153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 17149,
											"end": 17152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17140,
											"end": 17146,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17138,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17147,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17093,
											"end": 17153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 17093,
											"end": 17153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17093,
											"end": 17153,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 17093,
											"end": 17153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17084,
											"end": 17090,
											"name": "PUSH",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 17077,
											"end": 17082,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17073,
											"end": 17091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17066,
											"end": 17154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17000,
											"end": 17165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17237,
											"end": 17240,
											"name": "PUSH",
											"source": 3,
											"value": "1C0"
										},
										{
											"begin": 17281,
											"end": 17341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 17337,
											"end": 17340,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17328,
											"end": 17334,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17317,
											"end": 17326,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17313,
											"end": 17335,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17281,
											"end": 17341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 17281,
											"end": 17341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17281,
											"end": 17341,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 17281,
											"end": 17341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17278,
											"name": "PUSH",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 17265,
											"end": 17270,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17261,
											"end": 17279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17254,
											"end": 17342,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17175,
											"end": 17353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17416,
											"end": 17419,
											"name": "PUSH",
											"source": 3,
											"value": "1E0"
										},
										{
											"begin": 17460,
											"end": 17520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 17516,
											"end": 17519,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17507,
											"end": 17513,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17496,
											"end": 17505,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17492,
											"end": 17514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17460,
											"end": 17520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 17460,
											"end": 17520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17460,
											"end": 17520,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 17460,
											"end": 17520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17451,
											"end": 17457,
											"name": "PUSH",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 17444,
											"end": 17449,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17440,
											"end": 17458,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17433,
											"end": 17521,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17363,
											"end": 17532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15047,
											"end": 17539,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15047,
											"end": 17539,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15047,
											"end": 17539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15047,
											"end": 17539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15047,
											"end": 17539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17545,
											"end": 17949,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 17545,
											"end": 17949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17641,
											"end": 17647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17690,
											"end": 17693,
											"name": "PUSH",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 17678,
											"end": 17687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17669,
											"end": 17676,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17665,
											"end": 17688,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17661,
											"end": 17694,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 17658,
											"end": 17778,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17658,
											"end": 17778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 17658,
											"end": 17778,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17697,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 17697,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 17697,
											"end": 17776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17697,
											"end": 17776,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 17697,
											"end": 17776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17658,
											"end": 17778,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 17658,
											"end": 17778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17817,
											"end": 17818,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17842,
											"end": 17932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 17924,
											"end": 17931,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17915,
											"end": 17921,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17904,
											"end": 17913,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17900,
											"end": 17922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 17932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 17842,
											"end": 17932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 17932,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 17842,
											"end": 17932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17832,
											"end": 17932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17832,
											"end": 17932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17788,
											"end": 17942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17545,
											"end": 17949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17545,
											"end": 17949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17545,
											"end": 17949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17545,
											"end": 17949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17545,
											"end": 17949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol",
								"https://github.com/UMAprotocol/protocol/blob/7a93650a7494eaee83756382a18ecf11314499cf/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"assertTruth()": "3421390b",
							"assertedClaim()": "c1a8ec2c",
							"assertionId()": "0d80da74",
							"getAssertion()": "9a3ddabc",
							"getAssertionResult()": "7facaf3f",
							"settleAndGetAssertionResult()": "bc1dbc52"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"assertTruth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertedClaim\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssertion\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"arbitrateViaEscalationManager\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"discardOracle\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"validateDisputers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.EscalationManagerSettings\",\"name\":\"escalationManagerSettings\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"assertionTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.Assertion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleAndGetAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":\"OOV3_GettingStarted\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol\":{\"keccak256\":\"0xe4da229c2350916bc39a7b7cb51676ed156f86e7df8ed9b2b6b77e91fe37137f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6c61ba778f044dc428293d568b905ad9b44b12d31455e263fb184393579e1857\",\"dweb:/ipfs/QmSpvtwe4NhLZ3h3yLvakrnSkci4QnaLmEkuF7mwkUXN4x\"]},\"https://github.com/UMAprotocol/protocol/blob/7a93650a7494eaee83756382a18ecf11314499cf/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871\",\"dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 86,
								"contract": "gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol:OOV3_GettingStarted",
								"label": "oov3",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(OptimisticOracleV3Interface)334"
							},
							{
								"astId": 92,
								"contract": "gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol:OOV3_GettingStarted",
								"label": "assertedClaim",
								"offset": 0,
								"slot": "1",
								"type": "t_bytes_storage"
							},
							{
								"astId": 94,
								"contract": "gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol:OOV3_GettingStarted",
								"label": "assertionId",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_contract(OptimisticOracleV3Interface)334": {
								"encoding": "inplace",
								"label": "contract OptimisticOracleV3Interface",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/UMAprotocol/protocol/blob/7a93650a7494eaee83756382a18ecf11314499cf/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
				"OptimisticOracleV3Interface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract IERC20",
									"name": "defaultCurrency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "defaultLiveness",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burnedBondPercentage",
									"type": "uint256"
								}
							],
							"name": "AdminPropertiesSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "assertionId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "disputer",
									"type": "address"
								}
							],
							"name": "AssertionDisputed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "assertionId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "domainId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "claim",
									"type": "bytes"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asserter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "callbackRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "escalationManager",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "expirationTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "contract IERC20",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bond",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								}
							],
							"name": "AssertionMade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "assertionId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "bondRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "disputed",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "settlementResolution",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "settleCaller",
									"type": "address"
								}
							],
							"name": "AssertionSettled",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "claim",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "asserter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "callbackRecipient",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "escalationManager",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "liveness",
									"type": "uint64"
								},
								{
									"internalType": "contract IERC20",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "bond",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "domainId",
									"type": "bytes32"
								}
							],
							"name": "assertTruth",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "claim",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "asserter",
									"type": "address"
								}
							],
							"name": "assertTruthWithDefaults",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultIdentifier",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "assertionId",
									"type": "bytes32"
								}
							],
							"name": "getAssertion",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "bool",
													"name": "arbitrateViaEscalationManager",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "discardOracle",
													"type": "bool"
												},
												{
													"internalType": "bool",
													"name": "validateDisputers",
													"type": "bool"
												},
												{
													"internalType": "address",
													"name": "assertingCaller",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "escalationManager",
													"type": "address"
												}
											],
											"internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
											"name": "escalationManagerSettings",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "asserter",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "assertionTime",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "settled",
											"type": "bool"
										},
										{
											"internalType": "contract IERC20",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "expirationTime",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "settlementResolution",
											"type": "bool"
										},
										{
											"internalType": "bytes32",
											"name": "domainId",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "identifier",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "bond",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "callbackRecipient",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "disputer",
											"type": "address"
										}
									],
									"internalType": "struct OptimisticOracleV3Interface.Assertion",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "assertionId",
									"type": "bytes32"
								}
							],
							"name": "getAssertionResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "getMinimumBond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "assertionId",
									"type": "bytes32"
								}
							],
							"name": "settleAndGetAssertionResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "assertionId",
									"type": "bytes32"
								}
							],
							"name": "settleAssertion",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "identifier",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "syncUmaParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": {
								"details": "The caller must approve this contract to spend at least bond amount of currency.",
								"params": {
									"asserter": "receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.",
									"bond": "amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This must be >= getMinimumBond(address(currency)).",
									"callbackRecipient": "if configured, this address will receive a function call assertionResolvedCallback and assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.",
									"claim": "the truth claim being asserted. This is an assertion about the world, and is verified by disputers.",
									"currency": "bond currency pulled from the caller and held in escrow until the assertion is resolved.",
									"domainId": "optional domain that can be used to relate this assertion to others in the escalationManager and can be used by the configured escalationManager to define custom behavior for groups of assertions. This is typically used for \"escalation games\" by changing bonds or other assertion properties based on the other assertions that have come before. If not needed this value should be 0 to save gas.",
									"escalationManager": "if configured, this address will control escalation properties of the assertion. This means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to validate disputes. Combining these, the asserter can define their own security properties for the assertion. escalationManager also _must_ implement the same callbacks as callbackRecipient.",
									"identifier": "UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.",
									"liveness": "time to wait before the assertion can be resolved. Assertion can be disputed in this time."
								},
								"returns": {
									"_0": "assertionId unique identifier for this assertion."
								}
							},
							"assertTruthWithDefaults(bytes,address)": {
								"details": "The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).",
								"params": {
									"asserter": "receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.",
									"claim": "the truth claim being asserted. This is an assertion about the world, and is verified by disputers."
								},
								"returns": {
									"_0": "assertionId unique identifier for this assertion."
								}
							},
							"defaultIdentifier()": {
								"returns": {
									"_0": "The default identifier."
								}
							},
							"getAssertion(bytes32)": {
								"params": {
									"assertionId": "unique identifier for the assertion to fetch information for."
								},
								"returns": {
									"_0": "assertion information about the assertion."
								}
							},
							"getAssertionResult(bytes32)": {
								"params": {
									"assertionId": "unique identifier for the assertion to fetch the resolution for."
								},
								"returns": {
									"_0": "resolution of the assertion."
								}
							},
							"getMinimumBond(address)": {
								"params": {
									"currency": "currency to calculate the minimum bond for."
								},
								"returns": {
									"_0": "minimum bond amount."
								}
							},
							"settleAndGetAssertionResult(bytes32)": {
								"params": {
									"assertionId": "unique identifier for the assertion to resolve and return the resolution for."
								},
								"returns": {
									"_0": "resolution of the assertion."
								}
							},
							"settleAssertion(bytes32)": {
								"params": {
									"assertionId": "unique identifier for the assertion to resolve."
								}
							},
							"syncUmaParams(bytes32,address)": {
								"params": {
									"currency": "currency to fetch information for and store locally.",
									"identifier": "identifier to fetch information for and store locally."
								}
							}
						},
						"title": "Optimistic Oracle V3 Interface that callers must use to assert truths about the world.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": "6457c979",
							"assertTruthWithDefaults(bytes,address)": "36b13af4",
							"defaultIdentifier()": "d509b017",
							"getAssertion(bytes32)": "88302884",
							"getAssertionResult(bytes32)": "e39dfd7f",
							"getMinimumBond(address)": "4360af3d",
							"settleAndGetAssertionResult(bytes32)": "8ea2f2ab",
							"settleAssertion(bytes32)": "4124beef",
							"syncUmaParams(bytes32,address)": "a8655785"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"defaultCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"defaultLiveness\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedBondPercentage\",\"type\":\"uint256\"}],\"name\":\"AdminPropertiesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"name\":\"AssertionDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"AssertionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disputed\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"settleCaller\",\"type\":\"address\"}],\"name\":\"AssertionSettled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"liveness\",\"type\":\"uint64\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"}],\"name\":\"assertTruth\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"}],\"name\":\"assertTruthWithDefaults\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertion\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"arbitrateViaEscalationManager\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"discardOracle\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"validateDisputers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.EscalationManagerSettings\",\"name\":\"escalationManagerSettings\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"assertionTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.Assertion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"getMinimumBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"settleAndGetAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"settleAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"syncUmaParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)\":{\"details\":\"The caller must approve this contract to spend at least bond amount of currency.\",\"params\":{\"asserter\":\"receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.\",\"bond\":\"amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This must be >= getMinimumBond(address(currency)).\",\"callbackRecipient\":\"if configured, this address will receive a function call assertionResolvedCallback and assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.\",\"claim\":\"the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\",\"currency\":\"bond currency pulled from the caller and held in escrow until the assertion is resolved.\",\"domainId\":\"optional domain that can be used to relate this assertion to others in the escalationManager and can be used by the configured escalationManager to define custom behavior for groups of assertions. This is typically used for \\\"escalation games\\\" by changing bonds or other assertion properties based on the other assertions that have come before. If not needed this value should be 0 to save gas.\",\"escalationManager\":\"if configured, this address will control escalation properties of the assertion. This means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to validate disputes. Combining these, the asserter can define their own security properties for the assertion. escalationManager also _must_ implement the same callbacks as callbackRecipient.\",\"identifier\":\"UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.\",\"liveness\":\"time to wait before the assertion can be resolved. Assertion can be disputed in this time.\"},\"returns\":{\"_0\":\"assertionId unique identifier for this assertion.\"}},\"assertTruthWithDefaults(bytes,address)\":{\"details\":\"The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).\",\"params\":{\"asserter\":\"receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.\",\"claim\":\"the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\"},\"returns\":{\"_0\":\"assertionId unique identifier for this assertion.\"}},\"defaultIdentifier()\":{\"returns\":{\"_0\":\"The default identifier.\"}},\"getAssertion(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to fetch information for.\"},\"returns\":{\"_0\":\"assertion information about the assertion.\"}},\"getAssertionResult(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to fetch the resolution for.\"},\"returns\":{\"_0\":\"resolution of the assertion.\"}},\"getMinimumBond(address)\":{\"params\":{\"currency\":\"currency to calculate the minimum bond for.\"},\"returns\":{\"_0\":\"minimum bond amount.\"}},\"settleAndGetAssertionResult(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to resolve and return the resolution for.\"},\"returns\":{\"_0\":\"resolution of the assertion.\"}},\"settleAssertion(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to resolve.\"}},\"syncUmaParams(bytes32,address)\":{\"params\":{\"currency\":\"currency to fetch information for and store locally.\",\"identifier\":\"identifier to fetch information for and store locally.\"}}},\"title\":\"Optimistic Oracle V3 Interface that callers must use to assert truths about the world.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)\":{\"notice\":\"Asserts a truth about the world, using a fully custom configuration.\"},\"assertTruthWithDefaults(bytes,address)\":{\"notice\":\"Asserts a truth about the world, using the default currency and liveness. No callback recipient or escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency.\"},\"defaultIdentifier()\":{\"notice\":\"Returns the default identifier used by the Optimistic Oracle V3.\"},\"getAssertion(bytes32)\":{\"notice\":\"Fetches information about a specific assertion and returns it.\"},\"getAssertionResult(bytes32)\":{\"notice\":\"Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then this will revert. If the assertion was disputed and configured to discard the oracle resolution return false.\"},\"getMinimumBond(address)\":{\"notice\":\"Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee.\"},\"settleAndGetAssertionResult(bytes32)\":{\"notice\":\"Settles an assertion and returns the resolution.\"},\"settleAssertion(bytes32)\":{\"notice\":\"Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of the bond is returned to the asserter or disputer.\"},\"syncUmaParams(bytes32,address)\":{\"notice\":\"Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy of the information within this contract. This is used to save gas when making assertions as we can avoid an external call to the UMA contracts to fetch this.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/UMAprotocol/protocol/blob/7a93650a7494eaee83756382a18ecf11314499cf/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":\"OptimisticOracleV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/UMAprotocol/protocol/blob/7a93650a7494eaee83756382a18ecf11314499cf/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871\",\"dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": {
								"notice": "Asserts a truth about the world, using a fully custom configuration."
							},
							"assertTruthWithDefaults(bytes,address)": {
								"notice": "Asserts a truth about the world, using the default currency and liveness. No callback recipient or escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency."
							},
							"defaultIdentifier()": {
								"notice": "Returns the default identifier used by the Optimistic Oracle V3."
							},
							"getAssertion(bytes32)": {
								"notice": "Fetches information about a specific assertion and returns it."
							},
							"getAssertionResult(bytes32)": {
								"notice": "Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then this will revert. If the assertion was disputed and configured to discard the oracle resolution return false."
							},
							"getMinimumBond(address)": {
								"notice": "Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee."
							},
							"settleAndGetAssertionResult(bytes32)": {
								"notice": "Settles an assertion and returns the resolution."
							},
							"settleAssertion(bytes32)": {
								"notice": "Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of the bond is returned to the asserter or disputer."
							},
							"syncUmaParams(bytes32,address)": {
								"notice": "Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy of the information within this contract. This is used to save gas when making assertions as we can avoid an external call to the UMA contracts to fetch this."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0",
							"usedErrors": []
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol": {
				"ast": {
					"absolutePath": "gist-17a8a29b2f8ae432e8bac0b88cff8bb1/OOV3_GettingStarted.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"OOV3_GettingStarted": [
							144
						],
						"OptimisticOracleV3Interface": [
							334
						]
					},
					"id": 145,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "43:24:1"
						},
						{
							"absolutePath": "https://github.com/UMAprotocol/protocol/blob/7a93650a7494eaee83756382a18ecf11314499cf/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
							"file": "https://github.com/UMAprotocol/protocol/blob/7a93650a7494eaee83756382a18ecf11314499cf/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 145,
							"sourceUnit": 335,
							"src": "69:183:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OOV3_GettingStarted",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "OOV3_GettingStarted",
							"nameLocation": "595:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 86,
									"mutability": "mutable",
									"name": "oov3",
									"nameLocation": "731:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "703:114:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$334",
										"typeString": "contract OptimisticOracleV3Interface"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "OptimisticOracleV3Interface",
											"nameLocations": [
												"703:27:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 334,
											"src": "703:27:1"
										},
										"referencedDeclaration": 334,
										"src": "703:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$334",
											"typeString": "contract OptimisticOracleV3Interface"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307839393233443432654636393542356464393931314430354163393434643463416361336334454142",
												"id": 84,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "774:42:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x9923D42eF695B5dd9911D05Ac944d4cAca3c4EAB"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 83,
											"name": "OptimisticOracleV3Interface",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 334,
											"src": "746:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3Interface_$334_$",
												"typeString": "type(contract OptimisticOracleV3Interface)"
											}
										},
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "746:71:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$334",
											"typeString": "contract OptimisticOracleV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c1a8ec2c",
									"id": 92,
									"mutability": "mutable",
									"name": "assertedClaim",
									"nameLocation": "954:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "941:72:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 87,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "941:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "48656c6c6f20776f726c642066726f6d2072616d657368646f6e",
												"id": 90,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "984:28:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_71c69bf800f9e4b329add5b58b36d7da17161c2742b3e2eca2475f101ce6cd12",
													"typeString": "literal_string \"Hello world from rameshdon\""
												},
												"value": "Hello world from rameshdon"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_71c69bf800f9e4b329add5b58b36d7da17161c2742b3e2eca2475f101ce6cd12",
													"typeString": "literal_string \"Hello world from rameshdon\""
												}
											],
											"id": 89,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "978:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
												"typeString": "type(bytes storage pointer)"
											},
											"typeName": {
												"id": 88,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "978:5:1",
												"typeDescriptions": {}
											}
										},
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "978:35:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_memory_ptr",
											"typeString": "bytes memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d80da74",
									"id": 94,
									"mutability": "mutable",
									"name": "assertionId",
									"nameLocation": "1151:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1136:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 93,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1136:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1555:89:1",
										"statements": [
											{
												"expression": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 97,
														"name": "assertionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1565:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 100,
																"name": "assertedClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "1608:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															},
															{
																"arguments": [
																	{
																		"id": 103,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1631:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_OOV3_GettingStarted_$144",
																			"typeString": "contract OOV3_GettingStarted"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_OOV3_GettingStarted_$144",
																			"typeString": "contract OOV3_GettingStarted"
																		}
																	],
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1623:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 101,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1623:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1623:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 98,
																"name": "oov3",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "1579:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$334",
																	"typeString": "contract OptimisticOracleV3Interface"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1584:23:1",
															"memberName": "assertTruthWithDefaults",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 216,
															"src": "1579:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory,address) external returns (bytes32)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1579:58:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1565:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1565:72:1"
											}
										]
									},
									"functionSelector": "3421390b",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "assertTruth",
									"nameLocation": "1534:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1545:2:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1555:0:1"
									},
									"scope": 144,
									"src": "1525:119:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1845:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 116,
															"name": "assertionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1895:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 114,
															"name": "oov3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1862:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$334",
																"typeString": "contract OptimisticOracleV3Interface"
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1867:27:1",
														"memberName": "settleAndGetAssertionResult",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 263,
														"src": "1862:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (bytes32) external returns (bool)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1862:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 113,
												"id": 118,
												"nodeType": "Return",
												"src": "1855:52:1"
											}
										]
									},
									"functionSelector": "bc1dbc52",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "settleAndGetAssertionResult",
									"nameLocation": "1793:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1820:2:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1839:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1839:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:6:1"
									},
									"scope": 144,
									"src": "1784:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2074:60:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 127,
															"name": "assertionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2115:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 125,
															"name": "oov3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2091:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$334",
																"typeString": "contract OptimisticOracleV3Interface"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2096:18:1",
														"memberName": "getAssertionResult",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "2091:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (bytes32) view external returns (bool)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 124,
												"id": 129,
												"nodeType": "Return",
												"src": "2084:43:1"
											}
										]
									},
									"functionSelector": "7facaf3f",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAssertionResult",
									"nameLocation": "2026:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2044:2:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2068:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2068:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2067:6:1"
									},
									"scope": 144,
									"src": "2017:117:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2378:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 139,
															"name": "assertionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2413:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 137,
															"name": "oov3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2395:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_OptimisticOracleV3Interface_$334",
																"typeString": "contract OptimisticOracleV3Interface"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2400:12:1",
														"memberName": "getAssertion",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 206,
														"src": "2395:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Assertion_$186_memory_ptr_$",
															"typeString": "function (bytes32) view external returns (struct OptimisticOracleV3Interface.Assertion memory)"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2395:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Assertion_$186_memory_ptr",
														"typeString": "struct OptimisticOracleV3Interface.Assertion memory"
													}
												},
												"functionReturnParameters": 136,
												"id": 141,
												"nodeType": "Return",
												"src": "2388:37:1"
											}
										]
									},
									"functionSelector": "9a3ddabc",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAssertion",
									"nameLocation": "2268:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2280:2:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "2328:44:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Assertion_$186_memory_ptr",
													"typeString": "struct OptimisticOracleV3Interface.Assertion"
												},
												"typeName": {
													"id": 134,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 133,
														"name": "OptimisticOracleV3Interface.Assertion",
														"nameLocations": [
															"2328:27:1",
															"2356:9:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 186,
														"src": "2328:37:1"
													},
													"referencedDeclaration": 186,
													"src": "2328:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Assertion_$186_storage_ptr",
														"typeString": "struct OptimisticOracleV3Interface.Assertion"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2327:46:1"
									},
									"scope": 144,
									"src": "2259:173:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 145,
							"src": "586:1848:1",
							"usedErrors": []
						}
					],
					"src": "43:2391:1"
				},
				"id": 1
			},
			"https://github.com/UMAprotocol/protocol/blob/7a93650a7494eaee83756382a18ecf11314499cf/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
				"ast": {
					"absolutePath": "https://github.com/UMAprotocol/protocol/blob/7a93650a7494eaee83756382a18ecf11314499cf/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"OptimisticOracleV3Interface": [
							334
						]
					},
					"id": 335,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 78,
							"src": "67:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OptimisticOracleV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 148,
								"nodeType": "StructuredDocumentation",
								"src": "125:104:2",
								"text": " @title Optimistic Oracle V3 Interface that callers must use to assert truths about the world."
							},
							"fullyImplemented": false,
							"id": 334,
							"linearizedBaseContracts": [
								334
							],
							"name": "OptimisticOracleV3Interface",
							"nameLocation": "240:27:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OptimisticOracleV3Interface.EscalationManagerSettings",
									"id": 159,
									"members": [
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "arbitrateViaEscalationManager",
											"nameLocation": "426:29:2",
											"nodeType": "VariableDeclaration",
											"scope": 159,
											"src": "421:34:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 149,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "421:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "discardOracle",
											"nameLocation": "540:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 159,
											"src": "535:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 151,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "535:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "validateDisputers",
											"nameLocation": "641:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 159,
											"src": "636:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 153,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "636:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "assertingCaller",
											"nameLocation": "742:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 159,
											"src": "734:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 155,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "734:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "escalationManager",
											"nameLocation": "821:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 159,
											"src": "813:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 157,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "813:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EscalationManagerSettings",
									"nameLocation": "385:25:2",
									"nodeType": "StructDefinition",
									"scope": 334,
									"src": "378:538:2",
									"visibility": "public"
								},
								{
									"canonicalName": "OptimisticOracleV3Interface.Assertion",
									"id": 186,
									"members": [
										{
											"constant": false,
											"id": 162,
											"mutability": "mutable",
											"name": "escalationManagerSettings",
											"nameLocation": "1043:25:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1017:51:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_EscalationManagerSettings_$159_storage_ptr",
												"typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings"
											},
											"typeName": {
												"id": 161,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 160,
													"name": "EscalationManagerSettings",
													"nameLocations": [
														"1017:25:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 159,
													"src": "1017:25:2"
												},
												"referencedDeclaration": 159,
												"src": "1017:25:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EscalationManagerSettings_$159_storage_ptr",
													"typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 164,
											"mutability": "mutable",
											"name": "asserter",
											"nameLocation": "1133:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1125:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 163,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1125:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 166,
											"mutability": "mutable",
											"name": "assertionTime",
											"nameLocation": "1186:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1179:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 165,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1179:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 168,
											"mutability": "mutable",
											"name": "settled",
											"nameLocation": "1240:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1235:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 167,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1235:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 171,
											"mutability": "mutable",
											"name": "currency",
											"nameLocation": "1299:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1292:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 170,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 169,
													"name": "IERC20",
													"nameLocations": [
														"1292:6:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 77,
													"src": "1292:6:2"
												},
												"referencedDeclaration": 77,
												"src": "1292:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "expirationTime",
											"nameLocation": "1369:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1362:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 172,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1362:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "settlementResolution",
											"nameLocation": "1480:20:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1475:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 174,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1475:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 177,
											"mutability": "mutable",
											"name": "domainId",
											"nameLocation": "1572:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1564:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 176,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1564:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 179,
											"mutability": "mutable",
											"name": "identifier",
											"nameLocation": "1694:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1686:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 178,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 181,
											"mutability": "mutable",
											"name": "bond",
											"nameLocation": "1797:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1789:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 180,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1789:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 183,
											"mutability": "mutable",
											"name": "callbackRecipient",
											"nameLocation": "1871:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1863:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 182,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1863:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 185,
											"mutability": "mutable",
											"name": "disputer",
											"nameLocation": "1945:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 186,
											"src": "1937:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 184,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1937:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Assertion",
									"nameLocation": "997:9:2",
									"nodeType": "StructDefinition",
									"scope": 334,
									"src": "990:998:2",
									"visibility": "public"
								},
								{
									"canonicalName": "OptimisticOracleV3Interface.WhitelistedCurrency",
									"id": 191,
									"members": [
										{
											"constant": false,
											"id": 188,
											"mutability": "mutable",
											"name": "isWhitelisted",
											"nameLocation": "2089:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 191,
											"src": "2084:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 187,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2084:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 190,
											"mutability": "mutable",
											"name": "finalFee",
											"nameLocation": "2160:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 191,
											"src": "2152:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 189,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2152:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WhitelistedCurrency",
									"nameLocation": "2054:19:2",
									"nodeType": "StructDefinition",
									"scope": 334,
									"src": "2047:158:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "2211:130:2",
										"text": " @notice Returns the default identifier used by the Optimistic Oracle V3.\n @return The default identifier."
									},
									"functionSelector": "d509b017",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultIdentifier",
									"nameLocation": "2355:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2372:2:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2398:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2397:9:2"
									},
									"scope": 334,
									"src": "2346:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2413:235:2",
										"text": " @notice Fetches information about a specific assertion and returns it.\n @param assertionId unique identifier for the assertion to fetch information for.\n @return assertion information about the assertion."
									},
									"functionSelector": "88302884",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAssertion",
									"nameLocation": "2662:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "assertionId",
												"nameLocation": "2683:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2675:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 199,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:21:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2719:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Assertion_$186_memory_ptr",
													"typeString": "struct OptimisticOracleV3Interface.Assertion"
												},
												"typeName": {
													"id": 203,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 202,
														"name": "Assertion",
														"nameLocations": [
															"2719:9:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 186,
														"src": "2719:9:2"
													},
													"referencedDeclaration": 186,
													"src": "2719:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Assertion_$186_storage_ptr",
														"typeString": "struct OptimisticOracleV3Interface.Assertion"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:18:2"
									},
									"scope": 334,
									"src": "2653:84:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2743:807:2",
										"text": " @notice Asserts a truth about the world, using the default currency and liveness. No callback recipient or\n escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage\n (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency.\n @dev The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).\n @param claim the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\n @param asserter receives bonds back at settlement. This could be msg.sender or\n any other account that the caller wants to receive the bond at settlement time.\n @return assertionId unique identifier for this assertion."
									},
									"functionSelector": "36b13af4",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "assertTruthWithDefaults",
									"nameLocation": "3564:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "claim",
												"nameLocation": "3601:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3588:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3588:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "asserter",
												"nameLocation": "3616:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3608:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3587:38:2"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3644:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3644:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3643:9:2"
									},
									"scope": 334,
									"src": "3555:98:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3659:2287:2",
										"text": " @notice Asserts a truth about the world, using a fully custom configuration.\n @dev The caller must approve this contract to spend at least bond amount of currency.\n @param claim the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\n @param asserter receives bonds back at settlement. This could be msg.sender or\n any other account that the caller wants to receive the bond at settlement time.\n @param callbackRecipient if configured, this address will receive a function call assertionResolvedCallback and\n assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The\n recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.\n @param escalationManager if configured, this address will control escalation properties of the assertion. This\n means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to\n validate disputes. Combining these, the asserter can define their own security properties for the assertion.\n escalationManager also _must_ implement the same callbacks as callbackRecipient.\n @param liveness time to wait before the assertion can be resolved. Assertion can be disputed in this time.\n @param currency bond currency pulled from the caller and held in escrow until the assertion is resolved.\n @param bond amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This\n must be >= getMinimumBond(address(currency)).\n @param identifier UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.\n @param domainId optional domain that can be used to relate this assertion to others in the escalationManager and\n can be used by the configured escalationManager to define custom behavior for groups of assertions. This is\n typically used for \"escalation games\" by changing bonds or other assertion properties based on the other\n assertions that have come before. If not needed this value should be 0 to save gas.\n @return assertionId unique identifier for this assertion."
									},
									"functionSelector": "6457c979",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "assertTruth",
									"nameLocation": "5960:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "claim",
												"nameLocation": "5994:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "5981:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5981:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "asserter",
												"nameLocation": "6017:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6009:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6009:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "callbackRecipient",
												"nameLocation": "6043:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6035:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "escalationManager",
												"nameLocation": "6078:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6070:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "liveness",
												"nameLocation": "6112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6105:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 226,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6105:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "6137:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6130:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 229,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 228,
														"name": "IERC20",
														"nameLocations": [
															"6130:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "6130:6:2"
													},
													"referencedDeclaration": 77,
													"src": "6130:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "bond",
												"nameLocation": "6163:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6155:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "6185:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6177:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 233,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6177:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "domainId",
												"nameLocation": "6213:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6205:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5971:256:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6246:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 238,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6246:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6245:9:2"
									},
									"scope": 334,
									"src": "5951:304:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "6261:460:2",
										"text": " @notice Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy\n of the information within this contract. This is used to save gas when making assertions as we can avoid an\n external call to the UMA contracts to fetch this.\n @param identifier identifier to fetch information for and store locally.\n @param currency currency to fetch information for and store locally."
									},
									"functionSelector": "a8655785",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "syncUmaParams",
									"nameLocation": "6735:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "6757:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6749:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 243,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "6777:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6769:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6769:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6748:38:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6795:0:2"
									},
									"scope": 334,
									"src": "6726:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "6802:621:2",
										"text": " @notice Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the\n asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle\n result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an\n amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of\n the bond is returned to the asserter or disputer.\n @param assertionId unique identifier for the assertion to resolve."
									},
									"functionSelector": "4124beef",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settleAssertion",
									"nameLocation": "7437:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "assertionId",
												"nameLocation": "7461:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "7453:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 251,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7452:21:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7482:0:2"
									},
									"scope": 334,
									"src": "7428:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7489:223:2",
										"text": " @notice Settles an assertion and returns the resolution.\n @param assertionId unique identifier for the assertion to resolve and return the resolution for.\n @return resolution of the assertion."
									},
									"functionSelector": "8ea2f2ab",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settleAndGetAssertionResult",
									"nameLocation": "7726:27:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "assertionId",
												"nameLocation": "7762:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "7754:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7753:21:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "7793:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7793:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7792:6:2"
									},
									"scope": 334,
									"src": "7717:82:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "7805:384:2",
										"text": " @notice Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then\n this will revert. If the assertion was disputed and configured to discard the oracle resolution return false.\n @param assertionId unique identifier for the assertion to fetch the resolution for.\n @return resolution of the assertion."
									},
									"functionSelector": "e39dfd7f",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAssertionResult",
									"nameLocation": "8203:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "assertionId",
												"nameLocation": "8230:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "8222:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8222:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8221:21:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "8266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8265:6:2"
									},
									"scope": 334,
									"src": "8194:78:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "8278:353:2",
										"text": " @notice Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the\n currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee.\n @param currency currency to calculate the minimum bond for.\n @return minimum bond amount."
									},
									"functionSelector": "4360af3d",
									"id": 279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMinimumBond",
									"nameLocation": "8645:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "8668:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "8660:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8659:18:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "8701:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8700:9:2"
									},
									"scope": 334,
									"src": "8636:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "db1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7",
									"id": 304,
									"name": "AssertionMade",
									"nameLocation": "8722:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "assertionId",
												"nameLocation": "8761:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8745:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 280,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "domainId",
												"nameLocation": "8790:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8782:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8782:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"indexed": false,
												"mutability": "mutable",
												"name": "claim",
												"nameLocation": "8814:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8808:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8808:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"indexed": true,
												"mutability": "mutable",
												"name": "asserter",
												"nameLocation": "8845:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8829:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8829:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"indexed": false,
												"mutability": "mutable",
												"name": "callbackRecipient",
												"nameLocation": "8871:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8863:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8863:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"indexed": false,
												"mutability": "mutable",
												"name": "escalationManager",
												"nameLocation": "8906:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8898:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "8941:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8933:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8933:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"indexed": false,
												"mutability": "mutable",
												"name": "expirationTime",
												"nameLocation": "8964:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8957:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 294,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8957:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "8995:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8988:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 296,
														"name": "IERC20",
														"nameLocations": [
															"8988:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "8988:6:2"
													},
													"referencedDeclaration": 77,
													"src": "8988:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"indexed": false,
												"mutability": "mutable",
												"name": "bond",
												"nameLocation": "9021:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "9013:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"indexed": true,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "9051:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "9035:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9035:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8735:332:2"
									},
									"src": "8716:352:2"
								},
								{
									"anonymous": false,
									"eventSelector": "60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b",
									"id": 312,
									"name": "AssertionDisputed",
									"nameLocation": "9080:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"mutability": "mutable",
												"name": "assertionId",
												"nameLocation": "9114:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "9098:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9098:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "9143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "9127:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9127:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "disputer",
												"nameLocation": "9167:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "9151:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9151:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9097:79:2"
									},
									"src": "9074:103:2"
								},
								{
									"anonymous": false,
									"eventSelector": "f4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13",
									"id": 324,
									"name": "AssertionSettled",
									"nameLocation": "9189:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "assertionId",
												"nameLocation": "9231:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9215:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9215:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "bondRecipient",
												"nameLocation": "9268:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9252:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": false,
												"mutability": "mutable",
												"name": "disputed",
												"nameLocation": "9296:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9291:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9291:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"indexed": false,
												"mutability": "mutable",
												"name": "settlementResolution",
												"nameLocation": "9319:20:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9314:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9314:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": false,
												"mutability": "mutable",
												"name": "settleCaller",
												"nameLocation": "9357:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9349:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9349:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9205:170:2"
									},
									"src": "9183:193:2"
								},
								{
									"anonymous": false,
									"eventSelector": "d0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd",
									"id": 333,
									"name": "AdminPropertiesSet",
									"nameLocation": "9388:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"indexed": false,
												"mutability": "mutable",
												"name": "defaultCurrency",
												"nameLocation": "9414:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "9407:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 326,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 325,
														"name": "IERC20",
														"nameLocations": [
															"9407:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "9407:6:2"
													},
													"referencedDeclaration": 77,
													"src": "9407:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": false,
												"mutability": "mutable",
												"name": "defaultLiveness",
												"nameLocation": "9438:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "9431:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 328,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9431:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": false,
												"mutability": "mutable",
												"name": "burnedBondPercentage",
												"nameLocation": "9463:20:2",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "9455:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9406:78:2"
									},
									"src": "9382:103:2"
								}
							],
							"scope": 335,
							"src": "230:9257:2",
							"usedErrors": []
						}
					],
					"src": "42:9446:2"
				},
				"id": 2
			}
		}
	}
}